/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    article: Article;
    articleCategory: ArticleCategory;
    author: Author;
    callToAction: CallToAction;
    clientLogotype: ClientLogotype;
    compare: Compare;
    customer: Customer;
    customerCompanySize: CustomerCompanySize;
    customerIndustry: CustomerIndustry;
    customerRegion: CustomerRegion;
    customersMainPage: CustomersMainPage;
    customerUseCase: CustomerUseCase;
    event: Event;
    feature: Feature;
    footer: Footer;
    globalButton: GlobalButton;
    globalInfoAccordions: GlobalInfoAccordion;
    globalInfoCarousels: GlobalInfoCarousel;
    globalInfoGrids: GlobalInfoGrid;
    globalInfoTabs: GlobalInfoTab;
    globalInfoTextWithImages: GlobalInfoTextWithImage;
    globalInfoWithCards: GlobalInfoWithCard;
    globalReviews: GlobalReview;
    globalTag: GlobalTag;
    guide: Guide;
    guideMainInfo: GuideMainInfo;
    integration: Integration;
    integrationMainInfo: IntegrationMainInfo;
    landingPage: LandingPage;
    legalPage: LegalPage;
    navigationBar: NavigationBar;
    navigationBarMenuItems: NavigationBarMenuItem;
    page: Page;
    pricingUseCase: PricingUseCase;
    rating: Rating;
    report: Report;
    solution: Solution;
    template: Template;
    templateIndustry: TemplateIndustry;
    templateMethodology: TemplateMethodology;
    templateTeam: TemplateTeam;
    templateUseCase: TemplateUseCase;
    'testimonial-reviewer': TestimonialReviewer;
    video: Video;
    users: User;
    media: Media;
    pages: Page1;
    releases: Release;
    redirects: Redirect;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    pages: {
      release: 'releases';
    };
  };
  collectionsSelect: {
    article: ArticleSelect<false> | ArticleSelect<true>;
    articleCategory: ArticleCategorySelect<false> | ArticleCategorySelect<true>;
    author: AuthorSelect<false> | AuthorSelect<true>;
    callToAction: CallToActionSelect<false> | CallToActionSelect<true>;
    clientLogotype: ClientLogotypeSelect<false> | ClientLogotypeSelect<true>;
    compare: CompareSelect<false> | CompareSelect<true>;
    customer: CustomerSelect<false> | CustomerSelect<true>;
    customerCompanySize: CustomerCompanySizeSelect<false> | CustomerCompanySizeSelect<true>;
    customerIndustry: CustomerIndustrySelect<false> | CustomerIndustrySelect<true>;
    customerRegion: CustomerRegionSelect<false> | CustomerRegionSelect<true>;
    customersMainPage: CustomersMainPageSelect<false> | CustomersMainPageSelect<true>;
    customerUseCase: CustomerUseCaseSelect<false> | CustomerUseCaseSelect<true>;
    event: EventSelect<false> | EventSelect<true>;
    feature: FeatureSelect<false> | FeatureSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    globalButton: GlobalButtonSelect<false> | GlobalButtonSelect<true>;
    globalInfoAccordions: GlobalInfoAccordionsSelect<false> | GlobalInfoAccordionsSelect<true>;
    globalInfoCarousels: GlobalInfoCarouselsSelect<false> | GlobalInfoCarouselsSelect<true>;
    globalInfoGrids: GlobalInfoGridsSelect<false> | GlobalInfoGridsSelect<true>;
    globalInfoTabs: GlobalInfoTabsSelect<false> | GlobalInfoTabsSelect<true>;
    globalInfoTextWithImages: GlobalInfoTextWithImagesSelect<false> | GlobalInfoTextWithImagesSelect<true>;
    globalInfoWithCards: GlobalInfoWithCardsSelect<false> | GlobalInfoWithCardsSelect<true>;
    globalReviews: GlobalReviewsSelect<false> | GlobalReviewsSelect<true>;
    globalTag: GlobalTagSelect<false> | GlobalTagSelect<true>;
    guide: GuideSelect<false> | GuideSelect<true>;
    guideMainInfo: GuideMainInfoSelect<false> | GuideMainInfoSelect<true>;
    integration: IntegrationSelect<false> | IntegrationSelect<true>;
    integrationMainInfo: IntegrationMainInfoSelect<false> | IntegrationMainInfoSelect<true>;
    landingPage: LandingPageSelect<false> | LandingPageSelect<true>;
    legalPage: LegalPageSelect<false> | LegalPageSelect<true>;
    navigationBar: NavigationBarSelect<false> | NavigationBarSelect<true>;
    navigationBarMenuItems: NavigationBarMenuItemsSelect<false> | NavigationBarMenuItemsSelect<true>;
    page: PageSelect<false> | PageSelect<true>;
    pricingUseCase: PricingUseCaseSelect<false> | PricingUseCaseSelect<true>;
    rating: RatingSelect<false> | RatingSelect<true>;
    report: ReportSelect<false> | ReportSelect<true>;
    solution: SolutionSelect<false> | SolutionSelect<true>;
    template: TemplateSelect<false> | TemplateSelect<true>;
    templateIndustry: TemplateIndustrySelect<false> | TemplateIndustrySelect<true>;
    templateMethodology: TemplateMethodologySelect<false> | TemplateMethodologySelect<true>;
    templateTeam: TemplateTeamSelect<false> | TemplateTeamSelect<true>;
    templateUseCase: TemplateUseCaseSelect<false> | TemplateUseCaseSelect<true>;
    'testimonial-reviewer': TestimonialReviewerSelect<false> | TestimonialReviewerSelect<true>;
    video: VideoSelect<false> | VideoSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    releases: ReleasesSelect<false> | ReleasesSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    blogMainPage: BlogMainPage;
    errorPage: ErrorPage;
    eventsMainPage: EventsMainPage;
    favicon: Favicon;
    guidesMainPage: GuidesMainPage;
    integrationsMainPage: IntegrationsMainPage;
    notFoundPage: NotFoundPage;
    pricingMainPage: PricingMainPage;
    reportsMainPage: ReportsMainPage;
    templatesMainPage: TemplatesMainPage;
    videosMainPage: VideosMainPage;
    settings: Setting;
  };
  globalsSelect: {
    blogMainPage: BlogMainPageSelect<false> | BlogMainPageSelect<true>;
    errorPage: ErrorPageSelect<false> | ErrorPageSelect<true>;
    eventsMainPage: EventsMainPageSelect<false> | EventsMainPageSelect<true>;
    favicon: FaviconSelect<false> | FaviconSelect<true>;
    guidesMainPage: GuidesMainPageSelect<false> | GuidesMainPageSelect<true>;
    integrationsMainPage: IntegrationsMainPageSelect<false> | IntegrationsMainPageSelect<true>;
    notFoundPage: NotFoundPageSelect<false> | NotFoundPageSelect<true>;
    pricingMainPage: PricingMainPageSelect<false> | PricingMainPageSelect<true>;
    reportsMainPage: ReportsMainPageSelect<false> | ReportsMainPageSelect<true>;
    templatesMainPage: TemplatesMainPageSelect<false> | TemplatesMainPageSelect<true>;
    videosMainPage: VideosMainPageSelect<false> | VideosMainPageSelect<true>;
    settings: SettingsSelect<false> | SettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article".
 */
export interface Article {
  id: string;
  lastUpdated?: string | null;
  followAndIndex?: boolean | null;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  globalTag?: {
    relationTo: 'globalTag';
    value: string | GlobalTag;
  } | null;
  category: {
    relationTo: 'articleCategory';
    value: string | ArticleCategory;
  };
  author: {
    relationTo: 'author';
    value: string | Author;
  };
  heroArticle: {
    title: string;
    subtitle: string;
    cover: string | Media;
    showGlobalTags?: boolean | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'heroArticle';
  }[];
  blocks?:
    | (
        | {
            sideBar: {
              shareTitle: string;
              /**
               * The kind of content being shared (eg. article)
               */
              contentType?: ('article' | 'video' | 'guide' | 'template' | 'integration' | 'event') | null;
              copiedTitle: string;
              shareLinkedin?: boolean | null;
              shareFacebook?: boolean | null;
              shareTwitter?: boolean | null;
              shareEmail?: boolean | null;
              copyLink?: boolean | null;
              embed?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'tableOfContent';
            }[];
            body: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'articleBody';
          }
        | {
            title: string;
            subtitle?: string | null;
            backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
            mobileCenter?: boolean | null;
            version: 'center' | 'left' | 'left-margin';
            /**
             * You need add the same value which you add to button field
             */
            refForScrollTo?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            buttonLabel: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'suggestedArticles';
          }
        | {
            clientLogotypes: {
              relationTo: 'clientLogotype';
              value: string | ClientLogotype;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalClientLogotypes';
          }
        | {
            cta: {
              relationTo: 'callToAction';
              value: string | CallToAction;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalCTA';
          }
        | {
            marginTop: '80' | '40' | '0';
            backgroundColor:
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient'
              | 'blue-pink-gradient';
            /**
             * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
             */
            isContained?: boolean | null;
            title?: string | null;
            /**
             * If this field is populated then anything in title will be overridden.
             */
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleUsersSegment';
                    }
                )[]
              | null;
            subtitle?: string | null;
            caption?: string | null;
            buttons: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            leftAsset?: (string | null) | Media;
            rightAsset?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * You must select only image or Lottie JSON files.
             */
            asset: string | Media;
            /**
             * The field uses for html element and must be without white spaces.
             */
            formId?: string | null;
            form?:
              | (
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      autoComplete?: boolean | null;
                      type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formInput';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      options: {
                        name: string;
                        value: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'dropdownOption';
                      }[];
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formDropdown';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      label: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formCheckbox';
                    }
                )[]
              | null;
            label: string;
            /**
             * The link overwriten with Form Input and Form ID fields
             */
            link?: string | null;
            buttonPosition?: ('bottom' | 'right') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaForm';
          }
        | {
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            /**
             * The field control top and bottom margin for mobile version.
             */
            mobileMargin: '0' | '20';
            /**
             * If you fill this field, button on click will be scroll to element, where you will add the same value.
             */
            scrollToElement?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaSmall';
          }
        | {
            subtitle?: string | null;
            /**
             * Defaults to left
             */
            subtitleAlignment?: ('left' | 'centre') | null;
            logos: (string | Media)[];
            bottomDivider: '0' | '50';
            mobileBottomDivider?: boolean | null;
            marginTop: '80' | '0';
            backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
            id?: string | null;
            blockName?: string | null;
            blockType: 'clientLogotypes';
          }
        | {
            author?: {
              relationTo: 'author';
              value: string | Author;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'authorBioBox';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigationBar".
 */
export interface NavigationBar {
  id: string;
  backgroundColor:
    | 'bg-neutral-07'
    | 'bg-neutral-06'
    | 'bg-neutral-05'
    | 'bg-green-04'
    | 'bg-green-02'
    | 'bg-yellow-04'
    | 'bg-yellow-01'
    | 'bg-pink-04'
    | 'bg-blue-05';
  buttons?:
    | (
        | {
            label: string;
            /**
             * When you add value for \"Scroll To\" field, link will be overwrite.
             */
            link: string;
            buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
            backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
            /**
             * If the field is filled, an analytics event will sent to the segment.
             */
            eventName?: string | null;
            /**
             * You need add the same value which you add to block field \"Ref to scroll to\".
             */
            scrollTo?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'button';
          }
        | {
            button: {
              relationTo: 'globalButton';
              value: string | GlobalButton;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalButtons';
          }
      )[]
    | null;
  logotype: string | Media;
  searchHidden?: boolean | null;
  menuItems?: {
    relationTo: 'navigationBarMenuItems';
    value: string | NavigationBarMenuItem;
  } | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalButton".
 */
export interface GlobalButton {
  id: string;
  button: {
    label: string;
    /**
     * When you add value for \"Scroll To\" field, link will be overwrite.
     */
    link: string;
    buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
    backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
    /**
     * If the field is filled, an analytics event will sent to the segment.
     */
    eventName?: string | null;
    /**
     * You need add the same value which you add to block field \"Ref to scroll to\".
     */
    scrollTo?: string | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'button';
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigationBarMenuItems".
 */
export interface NavigationBarMenuItem {
  id: string;
  logotypeLink: string;
  logoButtonLabel?: string | null;
  logoButtonLink?: string | null;
  searchResultsTitle: string;
  emptySearchTitle: string;
  searchLengthValidationTitle: string;
  searchPlaceholder: string;
  searchPageContentType: string;
  menuItems?:
    | {
        menuLabel: string;
        /**
         * If group has the dropdown item, link must be empty.
         */
        link?: string | null;
        dropdown?:
          | (
              | {
                  title: string;
                  body: string;
                  label?: string | null;
                  link?: string | null;
                  eventName?: string | null;
                  mainColumnSubtitle: string;
                  mainColumnLinks: {
                    title: string;
                    link: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'navBarCategoryLink';
                  }[];
                  secondColumnSubtitle?: string | null;
                  secondColumnLinks?:
                    | {
                        title: string;
                        link: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'navBarCategoryLink';
                      }[]
                    | null;
                  thirdColumnSubtitle?: string | null;
                  thirdColumnLinks?:
                    | {
                        title: string;
                        link: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'navBarCategoryLink';
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'dropdownWithCategories';
                }
              | {
                  title: string;
                  body: string;
                  label?: string | null;
                  link?: string | null;
                  eventName?: string | null;
                  featureImage?: (string | null) | Media;
                  featureTitle?: string | null;
                  featureBody?: string | null;
                  featureButtonLabel?: string | null;
                  featureBackgroundColor?:
                    | (
                        | 'bg-green-04'
                        | 'bg-green-02'
                        | 'bg-yellow-04'
                        | 'bg-blue-04'
                        | 'bg-neutral-06'
                        | 'bg-purple-04/40'
                      )
                    | null;
                  featureLink?: string | null;
                  sublinks: {
                    title: string;
                    subtitle: string;
                    link: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'navBarLink';
                  }[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'dropdownWithoutCategories';
                }
            )[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'navBarGroup';
      }[]
    | null;
  searchGlobalTagContentType: string;
  searchFeatureContentType: string;
  searchCustomerMainPageContentType: string;
  searchCustomerContentType: string;
  searchSolutionContentType: string;
  searchPricingUseCaseContentType: string;
  searchPricingMainPageContentType: string;
  searchArticleContentType: string;
  searchBlogMainPageContentType: string;
  searchVideoContentType: string;
  searchVideoMainPageContentType: string;
  searchGuidesMainPageContentType: string;
  searchGuideMainPageContentType: string;
  searchTemplatesMainPageContentType: string;
  searchTemplateContentType: string;
  searchLegalPageContentType: string;
  searchLandingPageContentType: string;
  searchGuideMainInfoContentType: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  logotype: string | Media;
  groups?:
    | {
        title: string;
        links: (
          | {
              body: string;
              tagLabel?: string | null;
              link: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'footerItem';
            }
          | {
              body: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'footerTitleItem';
            }
        )[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'footerLinksGroup';
      }[]
    | null;
  socialMedia?:
    | {
        icon: string | Media;
        link: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'socialMedia';
      }[]
    | null;
  imagePlaceholders?: (string | Media)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalTag".
 */
export interface GlobalTag {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  globalTagTitle: string;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        videoLabel: string;
        videoButtonLabel: string;
        guideLabel: string;
        guideButtonLabel: string;
        articleLabel: string;
        articleBodyLabel: string;
        templateLabel: string;
        templateButtonLabel: string;
        customersLabel: string;
        customerStoryButtonLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalTagBody';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
  )[];
  followAndIndex?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "callToAction".
 */
export interface CallToAction {
  id: string;
  block?:
    | (
        | {
            title: string;
            body?: string | null;
            backgroundColor: 'bg-green-03' | 'bg-green-04' | 'bg-pink-04' | 'bg-purple-04' | 'bg-yellow-03';
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'inlineCTA';
          }
        | {
            title: string;
            authorBody?: string | null;
            shareTitle: string;
            copiedTitle: string;
            shareFacebook?: boolean | null;
            shareTwitter?: boolean | null;
            shareLinkedin?: boolean | null;
            shareEmail?: boolean | null;
            copyLink?: boolean | null;
            teamMember?: {
              relationTo: 'author';
              value: string | Author;
            } | null;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'templateCTA';
          }
        | {
            title: string;
            image: string | Media;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'templatesCTA';
          }
        | {
            marginTop: '80' | '40' | '0';
            backgroundColor:
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient'
              | 'blue-pink-gradient';
            /**
             * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
             */
            isContained?: boolean | null;
            title?: string | null;
            /**
             * If this field is populated then anything in title will be overridden.
             */
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleUsersSegment';
                    }
                )[]
              | null;
            subtitle?: string | null;
            caption?: string | null;
            buttons: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            leftAsset?: (string | null) | Media;
            rightAsset?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * You must select only image or Lottie JSON files.
             */
            asset: string | Media;
            /**
             * The field uses for html element and must be without white spaces.
             */
            formId?: string | null;
            form?:
              | (
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      autoComplete?: boolean | null;
                      type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formInput';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      options: {
                        name: string;
                        value: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'dropdownOption';
                      }[];
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formDropdown';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      label: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formCheckbox';
                    }
                )[]
              | null;
            label: string;
            /**
             * The link overwriten with Form Input and Form ID fields
             */
            link?: string | null;
            buttonPosition?: ('bottom' | 'right') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaForm';
          }
        | {
            title: string;
            subtitle: string;
            backgroundColor:
              | 'bg-neutral-06'
              | 'bg-green-02'
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient';
            /**
             * If you add a file here, the banner will use a second variant of design.
             */
            mainImage?: (string | null) | Media;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            leftTopImage?: (string | null) | Media;
            rightTopImage?: (string | null) | Media;
            leftBottomImage?: (string | null) | Media;
            rightBottomImage?: (string | null) | Media;
            leftTopImageMobile?: (string | null) | Media;
            rightTopImageMobile?: (string | null) | Media;
            leftBottomImageMobile?: (string | null) | Media;
            rightBottomImageMobile?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'banner';
          }
        | {
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            /**
             * The field control top and bottom margin for mobile version.
             */
            mobileMargin: '0' | '20';
            /**
             * If you fill this field, button on click will be scroll to element, where you will add the same value.
             */
            scrollToElement?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaSmall';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "author".
 */
export interface Author {
  id: string;
  name: string;
  position: string;
  image: string | Media;
  description?: string | null;
  socialMediaLinks?:
    | {
        icon: string | Media;
        link: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'socialMedia';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rating".
 */
export interface Rating {
  id: string;
  rating?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clientLogotype".
 */
export interface ClientLogotype {
  id: string;
  clientLogotypes: (
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        /**
         * Minimal images count - 8 Maximum images count - 18
         */
        images: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypesCards';
      }
  )[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articleCategory".
 */
export interface ArticleCategory {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "compare".
 */
export interface Compare {
  id: string;
  followAndIndex?: boolean | null;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  title: string;
  description?: string | null;
  heroTitle: string;
  heroBody: string;
  /**
   * CTA buttons shown in hero section
   */
  buttons?:
    | (
        | {
            label: string;
            /**
             * When you add value for \"Scroll To\" field, link will be overwrite.
             */
            link: string;
            buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
            backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
            /**
             * If the field is filled, an analytics event will sent to the segment.
             */
            eventName?: string | null;
            /**
             * You need add the same value which you add to block field \"Ref to scroll to\".
             */
            scrollTo?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'button';
          }
        | {
            button: {
              relationTo: 'globalButton';
              value: string | GlobalButton;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalButtons';
          }
      )[]
    | null;
  cover: string | Media;
  body: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  blocks?:
    | (
        | {
            items: {
              title: string;
              description: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'accordionItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoAccordion';
          }
        | {
            content?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'richText';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer".
 */
export interface Customer {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * This field will be show at customers list page and customer page hero.
   */
  customerTitle: string;
  /**
   * This field will be show at customers list page and customer page hero.
   */
  customerBody: string;
  /**
   * This field will be show at customers list page.
   */
  cover: string | Media;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  globalTag?: {
    relationTo: 'globalTag';
    value: string | GlobalTag;
  } | null;
  useCase: {
    relationTo: 'customerUseCase';
    value: string | CustomerUseCase;
  };
  companySize: {
    relationTo: 'customerCompanySize';
    value: string | CustomerCompanySize;
  };
  customerRegion?: {
    relationTo: 'customerRegion';
    value: string | CustomerRegion;
  } | null;
  customerIndustry: {
    relationTo: 'customerIndustry';
    value: string | CustomerIndustry;
  };
  summaryTitle: string;
  summaryBody: string;
  body: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  blocks: (
    | {
        review?: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        } | null;
        stats?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'appreciation';
      }
    | {
        title: string;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-06'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient';
        /**
         * If you add a file here, the banner will use a second variant of design.
         */
        mainImage?: (string | null) | Media;
        button: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        leftTopImage?: (string | null) | Media;
        rightTopImage?: (string | null) | Media;
        leftBottomImage?: (string | null) | Media;
        rightBottomImage?: (string | null) | Media;
        leftTopImageMobile?: (string | null) | Media;
        rightTopImageMobile?: (string | null) | Media;
        leftBottomImageMobile?: (string | null) | Media;
        rightBottomImageMobile?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'banner';
      }
    | {
        body?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        logos?: (string | Media)[] | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        embed?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'bookDemoMain';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        /**
         * Minimal images count - 8 Maximum images count - 18
         */
        images: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypesCards';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        content?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingCapture';
                }
            )[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'customComponent';
      }
    | {
        demos?:
          | {
              title: string;
              body: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              /**
               * Can be Rive animations or images
               */
              media: string | Media;
              /**
               * Duration the demo will be shown in milliseconds, not providing a value will assume an infinite duration
               */
              duration?: number | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'demo';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'demos';
      }
    | {
        embedded: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embedded';
      }
    | {
        address: string;
        icon?: (string | null) | Media;
        /**
         * Property width and height for embeded element must be set to 100%
         */
        embed: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embededMap';
      }
    | {
        featureBlocks?:
          | {
              title?: string | null;
              heading?: string | null;
              body?: string | null;
              integrations?:
                | {
                    icon?: (string | null) | Media;
                    link?: string | null;
                    /**
                     * Only used for screen readers
                     */
                    linkText?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'featureIntegration';
                  }[]
                | null;
              link?: string | null;
              linkText?: string | null;
              image?: (string | null) | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'featureBlock';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'features';
      }
    | {
        id: string | null;
        buttonLabel: string;
        alignment: 'row' | 'column';
        backgroundColor: 'bg-neutral-06' | 'transparent';
        padding: '0' | '40';
        header?:
          | (
              | {
                  title: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formTitle';
                }
              | {
                  subtitle: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formSubtitle';
                }
            )[]
          | null;
        formElements: (
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              autoComplete?: boolean | null;
              type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formInput';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              options: {
                name: string;
                value: string;
                id?: string | null;
                blockName?: string | null;
                blockType: 'dropdownOption';
              }[];
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formDropdown';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              label: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formCheckbox';
            }
        )[];
        blockName?: string | null;
        blockType: 'form';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        infoAccordion: {
          relationTo: 'globalInfoAccordions';
          value: string | GlobalInfoAccordion;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoAccordion';
      }
    | {
        infoCarousel: {
          relationTo: 'globalInfoCarousels';
          value: string | GlobalInfoCarousel;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoCarousel';
      }
    | {
        infoGrid: {
          relationTo: 'globalInfoGrids';
          value: string | GlobalInfoGrid;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoGrid';
      }
    | {
        infoTab: {
          relationTo: 'globalInfoTabs';
          value: string | GlobalInfoTab;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTabVariant';
      }
    | {
        infoTextWithImage: {
          relationTo: 'globalInfoTextWithImages';
          value: string | GlobalInfoTextWithImage;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTextWithImage';
      }
    | {
        infoWithCards: {
          relationTo: 'globalInfoWithCards';
          value: string | GlobalInfoWithCard;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoWithCardsSection';
      }
    | {
        reviewBlock: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalReviewsSection';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        iconButton?:
          | {
              label: string;
              link: string;
              icon: string | Media;
              iconPosition: 'right' | 'left';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'iconButton';
            }[]
          | null;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04';
        media?: (string | null) | Media;
        customComponent?:
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingHero';
            }[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpages';
      }
    | {
        title: string;
        body: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04'
          | 'bg-neutral-07';
        topLeftImage?: (string | null) | Media;
        topLeftImageSize?: ('small' | 'large') | null;
        bottomRightImage?: (string | null) | Media;
        topRightMobileImage?: (string | null) | Media;
        bottomRightMobileImage?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpagesCentered';
      }
    | {
        richTitle?:
          | (
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
            )[]
          | null;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'homeHero';
      }
    | {
        items: {
          title: string;
          description: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'accordionItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoAccordion';
      }
    | {
        slides?:
          | {
              image: string | Media;
              backgroundColor:
                | 'bg-yellow-03'
                | 'bg-neutral-06'
                | 'bg-blue-04'
                | 'bg-pink-04'
                | 'bg-purple-04'
                | 'bg-red-05'
                | 'bg-pink-05'
                | 'bg-green-04'
                | 'bg-green-02'
                | 'bg-neutral-07';
              title: string;
              subtitle: string;
              items?:
                | {
                    title: string;
                    icon: string | Media;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'infoCarouselSlideItem';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCarouselSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoCarousel';
      }
    | {
        items: {
          title: string;
          subtitle?: string | null;
          icon: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoGridItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGrid';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-07';
        cards?:
          | {
              title: string;
              body: string;
              fullWidthImage?: boolean | null;
              image: string | Media;
              textLink?:
                | {
                    label: string;
                    link: string;
                    iconPosition: 'left' | 'right';
                    eventName?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'textLinkButton';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'gridCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridCardsWithIcons';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-01'
          | 'bg-neutral-07';
        title: string;
        subtitle?: string | null;
        image: string | Media;
        items?:
          | {
              icon?: (string | null) | Media;
              title: string;
              body: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoGridTwoColumnsWithTitleItem';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridTwoColumnsWithTitle';
      }
    | {
        backgroundColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04';
        bottomLineSeperator?: boolean | null;
        title: string;
        icon: string | Media;
        cardTag: string;
        cardButtonLabel: string;
        contentType: 'articles' | 'guides' | 'videos' | 'templates' | 'events' | 'reports';
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithHeading';
      }
    | {
        /**
         * Maximum values - 3
         */
        resources: (
          | {
              relationTo: 'article';
              value: string | Article;
            }
          | {
              relationTo: 'template';
              value: string | Template;
            }
          | {
              relationTo: 'video';
              value: string | Video;
            }
          | {
              relationTo: 'guideMainInfo';
              value: string | GuideMainInfo;
            }
        )[];
        buttonLabel: string;
        guideLabel: string;
        articleLabel: string;
        videoLabel: string;
        templateLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithResources';
      }
    | {
        /**
         * Defaults to bg-neutral-07
         */
        backgroundColour?: ('bg-neutral-07' | 'bg-yellow-04') | null;
        link?: string | null;
        linkLabel?: string | null;
        slides?:
          | {
              cover: string | Media;
              title: string;
              subtitle: string;
              label?: string | null;
              link?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSlider';
      }
    | {
        slides: {
          title: string;
          subtitle: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'timelineSlide';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSliderTimeline';
      }
    | {
        title?: string | null;
        subtitle?: string | null;
        tabs: {
          title: string;
          description: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithDescriptions';
      }
    | {
        heading?: string | null;
        headingImage?: (string | null) | Media;
        body?: string | null;
        backgroundColour?: ('bg-neutral-07' | 'bg-green-01') | null;
        /**
         * If this field is empty then individual tab images will be used, otherwise this image will be shown persistently.
         */
        tabImage?: (string | null) | Media;
        tabs: {
          icon?: (string | null) | Media;
          title: string;
          image: string | Media;
          link?: string | null;
          mobileButton: string;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoIconTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithIcon';
      }
    | {
        title: string;
        subtitle: string;
        leftGraphic: string | Media;
        topGraphic: string | Media;
        bottomGraphic: string | Media;
        mainPhoto: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithCollage';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * The value must be equal with \"Text link with icon\" component field
         */
        contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        imagePosition?: ('right' | 'left') | null;
        cover?: (string | null) | Media;
        customComponent?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
            )[]
          | null;
        textLink?:
          | {
              label: string;
              link: string;
              iconPosition: 'left' | 'right';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkButton';
            }[]
          | null;
        items?:
          | {
              text: string;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoText';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithImage';
      }
    | {
        featureBlock: {
          image: string | Media;
          mobileImage?: (string | null) | Media;
          title: string;
          subtitle: string;
          textLink: {
            label: string;
            link: string;
            iconPosition: 'left' | 'right';
            eventName?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textLinkButton';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoCard';
        }[];
        blocks?:
          | {
              image: string | Media;
              mobileImage?: (string | null) | Media;
              title: string;
              subtitle: string;
              textLink: {
                label: string;
                link: string;
                iconPosition: 'left' | 'right';
                eventName?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'textLinkButton';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoWithCards';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'insightComparison';
      }
    | {
        title: string;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        mobileImage?: (string | null) | Media;
        bannerBody?: string | null;
        bannerLabel?: string | null;
        bannerLink?: string | null;
        /**
         * Lottie JSON file or image
         */
        leftPart: string | Media;
        /**
         * Lottie JSON file or image
         */
        rightPart: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mainHero';
      }
    | {
        /**
         * Generic embeds have more priority than YouTube embeds and video fields.
         */
        embed?: string | null;
        /**
         * YouTube embeds have more priority than video fields.
         */
        embedLink?: string | null;
        assetDesktop?: (string | null) | Media;
        assetMobile?: (string | null) | Media;
        size: 'parallax' | '780' | '885';
        id?: string | null;
        blockName?: string | null;
        blockType: 'media';
      }
    | {
        /**
         * You need to select 3 images.
         */
        firstLine: (string | Media)[];
        /**
         * You need to select 5 images.
         */
        secondLine: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCollage';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        plans: {
          name: string;
          monthlyPrice: string;
          monthlyPriceLabel?: string | null;
          annualyPrice: string;
          annualyPriceLabel?: string | null;
          button: (
            | {
                label: string;
                /**
                 * When you add value for \"Scroll To\" field, link will be overwrite.
                 */
                link: string;
                buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                /**
                 * If the field is filled, an analytics event will sent to the segment.
                 */
                eventName?: string | null;
                /**
                 * You need add the same value which you add to block field \"Ref to scroll to\".
                 */
                scrollTo?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'button';
              }
            | {
                button: {
                  relationTo: 'globalButton';
                  value: string | GlobalButton;
                };
                id?: string | null;
                blockName?: string | null;
                blockType: 'globalButtons';
              }
          )[];
          caption?: string | null;
          body: string;
          items: {
            title: string;
            list: {
              label: string;
              additionalLabel?: string | null;
              tooltipImage?: (string | null) | Media;
              tooltipBody?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingPlanListItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingPlanItem';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingPlan';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTable';
      }
    | {
        mobileDropdownTitle: string;
        featureRow: {
          title: string;
          comparisonFeatures: {
            title: string;
            monthlyPrice: string;
            annualyPrice: string;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            caption?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'comparisonFeatureRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingСomparisonFeaturesRow';
        }[];
        bodyTables: {
          title: string;
          tableRows: {
            cells: (
              | {
                  label: string;
                  tooltipBody?: string | null;
                  tooltipImage?: (string | null) | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableTextCell';
                }
              | {
                  availableIcon?: boolean | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableIconCell';
                }
            )[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingBodyTableRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingBodyTable';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTableComparison';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        backgroundColor?: ('bg-green-02' | 'bg-pink-01') | null;
        reviews: {
          text: string;
          tag?: string | null;
          representative: {
            relationTo: 'testimonial-reviewer';
            value: string | TestimonialReviewer;
          };
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'review';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'reviews';
      }
    | {
        text: string;
        tag?: string | null;
        backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
        imagePosition: 'left' | 'right';
        representative: {
          relationTo: 'testimonial-reviewer';
          value: string | TestimonialReviewer;
        };
        image: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'singleReview';
      }
    | {
        title: string;
        subtitle?: string | null;
        backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
        mobileCenter?: boolean | null;
        version: 'center' | 'left' | 'left-margin';
        /**
         * You need add the same value which you add to button field
         */
        refForScrollTo?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textBlock';
      }
    | {
        links?:
          | {
              label: string;
              hoverColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04' | 'bg-red-04';
              link?: string | null;
              /**
               * If the field is empty, the button will be navigated by a provided link in another field.  The page will scroll to \"Info Grid With Heading\" with the same content type by button press.
               */
              contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkWithIcon';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textLinks';
      }
    | {
        activeLabel: string;
        inactiveLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'toggle';
      }
  )[];
  followAndIndex?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerUseCase".
 */
export interface CustomerUseCase {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerCompanySize".
 */
export interface CustomerCompanySize {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerRegion".
 */
export interface CustomerRegion {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerIndustry".
 */
export interface CustomerIndustry {
  id: string;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalReviews".
 */
export interface GlobalReview {
  id: string;
  reviewBlock: (
    | {
        backgroundColor?: ('bg-green-02' | 'bg-pink-01') | null;
        reviews: {
          text: string;
          tag?: string | null;
          representative: {
            relationTo: 'testimonial-reviewer';
            value: string | TestimonialReviewer;
          };
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'review';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'reviews';
      }
    | {
        text: string;
        tag?: string | null;
        backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
        imagePosition: 'left' | 'right';
        representative: {
          relationTo: 'testimonial-reviewer';
          value: string | TestimonialReviewer;
        };
        image: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'singleReview';
      }
  )[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonial-reviewer".
 */
export interface TestimonialReviewer {
  id: string;
  fullName: string;
  position: string;
  companyLogo?: (string | null) | Media;
  companyLogoOnLight?: (string | null) | Media;
  avatar?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoAccordions".
 */
export interface GlobalInfoAccordion {
  id: string;
  infoAccordion: {
    items: {
      title: string;
      description: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      };
      id?: string | null;
      blockName?: string | null;
      blockType: 'accordionItem';
    }[];
    id?: string | null;
    blockName?: string | null;
    blockType: 'infoAccordion';
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoCarousels".
 */
export interface GlobalInfoCarousel {
  id: string;
  infoCarousel: {
    slides?:
      | {
          image: string | Media;
          backgroundColor:
            | 'bg-yellow-03'
            | 'bg-neutral-06'
            | 'bg-blue-04'
            | 'bg-pink-04'
            | 'bg-purple-04'
            | 'bg-red-05'
            | 'bg-pink-05'
            | 'bg-green-04'
            | 'bg-green-02'
            | 'bg-neutral-07';
          title: string;
          subtitle: string;
          items?:
            | {
                title: string;
                icon: string | Media;
                id?: string | null;
                blockName?: string | null;
                blockType: 'infoCarouselSlideItem';
              }[]
            | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoCarouselSlide';
        }[]
      | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'infoCarousel';
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoGrids".
 */
export interface GlobalInfoGrid {
  id: string;
  grid: (
    | {
        items: {
          title: string;
          subtitle?: string | null;
          icon: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoGridItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGrid';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-07';
        cards?:
          | {
              title: string;
              body: string;
              fullWidthImage?: boolean | null;
              image: string | Media;
              textLink?:
                | {
                    label: string;
                    link: string;
                    iconPosition: 'left' | 'right';
                    eventName?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'textLinkButton';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'gridCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridCardsWithIcons';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-01'
          | 'bg-neutral-07';
        title: string;
        subtitle?: string | null;
        image: string | Media;
        items?:
          | {
              icon?: (string | null) | Media;
              title: string;
              body: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoGridTwoColumnsWithTitleItem';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridTwoColumnsWithTitle';
      }
  )[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoTabs".
 */
export interface GlobalInfoTab {
  id: string;
  infoTabs: (
    | {
        title?: string | null;
        subtitle?: string | null;
        tabs: {
          title: string;
          description: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithDescriptions';
      }
    | {
        heading?: string | null;
        headingImage?: (string | null) | Media;
        body?: string | null;
        backgroundColour?: ('bg-neutral-07' | 'bg-green-01') | null;
        /**
         * If this field is empty then individual tab images will be used, otherwise this image will be shown persistently.
         */
        tabImage?: (string | null) | Media;
        tabs: {
          icon?: (string | null) | Media;
          title: string;
          image: string | Media;
          link?: string | null;
          mobileButton: string;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoIconTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithIcon';
      }
  )[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoTextWithImages".
 */
export interface GlobalInfoTextWithImage {
  id: string;
  infoTextWithImage: {
    title: string;
    subtitle: string;
    /**
     * The value must be equal with \"Text link with icon\" component field
     */
    contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
    backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
    imagePosition?: ('right' | 'left') | null;
    cover?: (string | null) | Media;
    customComponent?:
      | (
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingHero';
            }
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingPanel';
            }
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingSites';
            }
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingTasks';
            }
        )[]
      | null;
    textLink?:
      | {
          label: string;
          link: string;
          iconPosition: 'left' | 'right';
          eventName?: string | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'textLinkButton';
        }[]
      | null;
    items?:
      | {
          text: string;
          icon: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoText';
        }[]
      | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'infoTextWithImage';
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoWithCards".
 */
export interface GlobalInfoWithCard {
  id: string;
  infoWithCards: {
    featureBlock: {
      image: string | Media;
      mobileImage?: (string | null) | Media;
      title: string;
      subtitle: string;
      textLink: {
        label: string;
        link: string;
        iconPosition: 'left' | 'right';
        eventName?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textLinkButton';
      }[];
      id?: string | null;
      blockName?: string | null;
      blockType: 'infoCard';
    }[];
    blocks?:
      | {
          image: string | Media;
          mobileImage?: (string | null) | Media;
          title: string;
          subtitle: string;
          textLink: {
            label: string;
            link: string;
            iconPosition: 'left' | 'right';
            eventName?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textLinkButton';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoCard';
        }[]
      | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'infoWithCards';
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "template".
 */
export interface Template {
  id: string;
  followAndIndex?: boolean | null;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  templateId: string;
  globalTag?: {
    relationTo: 'globalTag';
    value: string | GlobalTag;
  } | null;
  useCase: {
    relationTo: 'templateUseCase';
    value: string | TemplateUseCase;
  };
  team: {
    relationTo: 'templateTeam';
    value: string | TemplateTeam;
  };
  methodology: {
    relationTo: 'templateMethodology';
    value: string | TemplateMethodology;
  };
  industry?: {
    relationTo: 'templateIndustry';
    value: string | TemplateIndustry;
  } | null;
  heroTemplate: {
    title: string;
    subtitle: string;
    cover?: (string | null) | Media;
    button?:
      | (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[]
      | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'heroTemplate';
  }[];
  blocks?:
    | (
        | {
            title: string;
            subtitle: string;
            cover?: (string | null) | Media;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heroTemplate';
          }
        | {
            title: string;
            subtitle?: string | null;
            backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
            mobileCenter?: boolean | null;
            version: 'center' | 'left' | 'left-margin';
            /**
             * You need add the same value which you add to button field
             */
            refForScrollTo?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            buttonLabel: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'suggestedTemplates';
          }
        | {
            sideBar: (
              | {
                  title: string;
                  authorBody?: string | null;
                  shareTitle: string;
                  copiedTitle: string;
                  shareFacebook?: boolean | null;
                  shareTwitter?: boolean | null;
                  shareLinkedin?: boolean | null;
                  shareEmail?: boolean | null;
                  copyLink?: boolean | null;
                  teamMember?: {
                    relationTo: 'author';
                    value: string | Author;
                  } | null;
                  button: (
                    | {
                        label: string;
                        /**
                         * When you add value for \"Scroll To\" field, link will be overwrite.
                         */
                        link: string;
                        buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                        backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                        /**
                         * If the field is filled, an analytics event will sent to the segment.
                         */
                        eventName?: string | null;
                        /**
                         * You need add the same value which you add to block field \"Ref to scroll to\".
                         */
                        scrollTo?: string | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'button';
                      }
                    | {
                        button: {
                          relationTo: 'globalButton';
                          value: string | GlobalButton;
                        };
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'globalButtons';
                      }
                  )[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'templateCTA';
                }
              | {
                  cta: {
                    relationTo: 'callToAction';
                    value: string | CallToAction;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalCTA';
                }
            )[];
            templateBody: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'templateSection';
          }
        | {
            text: string;
            tag?: string | null;
            backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
            imagePosition: 'left' | 'right';
            representative: {
              relationTo: 'testimonial-reviewer';
              value: string | TestimonialReviewer;
            };
            image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'singleReview';
          }
        | {
            clientLogotypes: {
              relationTo: 'clientLogotype';
              value: string | ClientLogotype;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalClientLogotypes';
          }
        | {
            cta: {
              relationTo: 'callToAction';
              value: string | CallToAction;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalCTA';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * You must select only image or Lottie JSON files.
             */
            asset: string | Media;
            /**
             * The field uses for html element and must be without white spaces.
             */
            formId?: string | null;
            form?:
              | (
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      autoComplete?: boolean | null;
                      type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formInput';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      options: {
                        name: string;
                        value: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'dropdownOption';
                      }[];
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formDropdown';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      label: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formCheckbox';
                    }
                )[]
              | null;
            label: string;
            /**
             * The link overwriten with Form Input and Form ID fields
             */
            link?: string | null;
            buttonPosition?: ('bottom' | 'right') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaForm';
          }
        | {
            marginTop: '80' | '40' | '0';
            backgroundColor:
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient'
              | 'blue-pink-gradient';
            /**
             * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
             */
            isContained?: boolean | null;
            title?: string | null;
            /**
             * If this field is populated then anything in title will be overridden.
             */
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleUsersSegment';
                    }
                )[]
              | null;
            subtitle?: string | null;
            caption?: string | null;
            buttons: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            leftAsset?: (string | null) | Media;
            rightAsset?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            /**
             * The field control top and bottom margin for mobile version.
             */
            mobileMargin: '0' | '20';
            /**
             * If you fill this field, button on click will be scroll to element, where you will add the same value.
             */
            scrollToElement?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaSmall';
          }
        | {
            reviewBlock: {
              relationTo: 'globalReviews';
              value: string | GlobalReview;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalReviewsSection';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templateUseCase".
 */
export interface TemplateUseCase {
  id: string;
  title?: string | null;
  description?: string | null;
  followAndIndex?: boolean | null;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templateTeam".
 */
export interface TemplateTeam {
  id: string;
  title?: string | null;
  description?: string | null;
  followAndIndex?: boolean | null;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templateMethodology".
 */
export interface TemplateMethodology {
  id: string;
  title?: string | null;
  description?: string | null;
  followAndIndex?: boolean | null;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templateIndustry".
 */
export interface TemplateIndustry {
  id: string;
  title?: string | null;
  description?: string | null;
  followAndIndex?: boolean | null;
  name: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video".
 */
export interface Video {
  id: string;
  followAndIndex?: boolean | null;
  title: string;
  description?: string | null;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  cover: string | Media;
  globalTag?: {
    relationTo: 'globalTag';
    value: string | GlobalTag;
  } | null;
  heroTemplate: {
    title: string;
    subtitle: string;
    cover?: (string | null) | Media;
    button?:
      | (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[]
      | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'heroTemplate';
  }[];
  /**
   * You can pass here any embedded code to a video. You don't need to change only url in field.
   */
  embedVideo: string;
  durationMinutes?: number | null;
  /**
   * This is not total seconds. It's the seconds in addition to the minutes, e.g. 5 minutes and 40 seconds.
   */
  durationSeconds?: number | null;
  transcript: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  shareTitle: string;
  copiedTitle: string;
  shareFacebook?: boolean | null;
  shareTwitter?: boolean | null;
  shareLinkedin?: boolean | null;
  shareEmail?: boolean | null;
  copyLink?: boolean | null;
  cta: {
    cta: {
      relationTo: 'callToAction';
      value: string | CallToAction;
    };
    id?: string | null;
    blockName?: string | null;
    blockType: 'globalCTA';
  }[];
  clientLogoTypes: {
    clientLogotypes: {
      relationTo: 'clientLogotype';
      value: string | ClientLogotype;
    };
    id?: string | null;
    blockName?: string | null;
    blockType: 'globalClientLogotypes';
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guideMainInfo".
 */
export interface GuideMainInfo {
  id: string;
  title: string;
  body: string;
  linkToFirstPage: string;
  /**
   * Text will be used for the button, which is used in the guides list.
   */
  buttonText: string;
  /**
   * Text will be used for the sidebar table of content.
   */
  shareTitle: string;
  copiedTitle: string;
  /**
   * Text will be used for the guide pagination.
   */
  previousPageTitle: string;
  /**
   * Text will be used for the guide pagination.
   */
  nextPageTitle: string;
  /**
   * Text will be used for the guide pagination.
   */
  finishTitle: string;
  /**
   * Text will be used for the sidebar progress percentage.
   */
  completeTitle: string;
  globalTag?: {
    relationTo: 'globalTag';
    value: string | GlobalTag;
  } | null;
  cover: string | Media;
  shareLinkedin?: boolean | null;
  shareFacebook?: boolean | null;
  shareEmail?: boolean | null;
  shareTwitter?: boolean | null;
  copyLink?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customersMainPage".
 */
export interface CustomersMainPage {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        review?: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        } | null;
        stats?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'appreciation';
      }
    | {
        title: string;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-06'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient';
        /**
         * If you add a file here, the banner will use a second variant of design.
         */
        mainImage?: (string | null) | Media;
        button: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        leftTopImage?: (string | null) | Media;
        rightTopImage?: (string | null) | Media;
        leftBottomImage?: (string | null) | Media;
        rightBottomImage?: (string | null) | Media;
        leftTopImageMobile?: (string | null) | Media;
        rightTopImageMobile?: (string | null) | Media;
        leftBottomImageMobile?: (string | null) | Media;
        rightBottomImageMobile?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'banner';
      }
    | {
        body?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        logos?: (string | Media)[] | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        embed?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'bookDemoMain';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        /**
         * Minimal images count - 8 Maximum images count - 18
         */
        images: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypesCards';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        content?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingCapture';
                }
            )[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'customComponent';
      }
    | {
        demos?:
          | {
              title: string;
              body: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              /**
               * Can be Rive animations or images
               */
              media: string | Media;
              /**
               * Duration the demo will be shown in milliseconds, not providing a value will assume an infinite duration
               */
              duration?: number | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'demo';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'demos';
      }
    | {
        embedded: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embedded';
      }
    | {
        address: string;
        icon?: (string | null) | Media;
        /**
         * Property width and height for embeded element must be set to 100%
         */
        embed: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embededMap';
      }
    | {
        featureBlocks?:
          | {
              title?: string | null;
              heading?: string | null;
              body?: string | null;
              integrations?:
                | {
                    icon?: (string | null) | Media;
                    link?: string | null;
                    /**
                     * Only used for screen readers
                     */
                    linkText?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'featureIntegration';
                  }[]
                | null;
              link?: string | null;
              linkText?: string | null;
              image?: (string | null) | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'featureBlock';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'features';
      }
    | {
        id: string | null;
        buttonLabel: string;
        alignment: 'row' | 'column';
        backgroundColor: 'bg-neutral-06' | 'transparent';
        padding: '0' | '40';
        header?:
          | (
              | {
                  title: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formTitle';
                }
              | {
                  subtitle: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formSubtitle';
                }
            )[]
          | null;
        formElements: (
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              autoComplete?: boolean | null;
              type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formInput';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              options: {
                name: string;
                value: string;
                id?: string | null;
                blockName?: string | null;
                blockType: 'dropdownOption';
              }[];
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formDropdown';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              label: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formCheckbox';
            }
        )[];
        blockName?: string | null;
        blockType: 'form';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        infoAccordion: {
          relationTo: 'globalInfoAccordions';
          value: string | GlobalInfoAccordion;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoAccordion';
      }
    | {
        infoCarousel: {
          relationTo: 'globalInfoCarousels';
          value: string | GlobalInfoCarousel;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoCarousel';
      }
    | {
        infoGrid: {
          relationTo: 'globalInfoGrids';
          value: string | GlobalInfoGrid;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoGrid';
      }
    | {
        infoTab: {
          relationTo: 'globalInfoTabs';
          value: string | GlobalInfoTab;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTabVariant';
      }
    | {
        infoTextWithImage: {
          relationTo: 'globalInfoTextWithImages';
          value: string | GlobalInfoTextWithImage;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTextWithImage';
      }
    | {
        infoWithCards: {
          relationTo: 'globalInfoWithCards';
          value: string | GlobalInfoWithCard;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoWithCardsSection';
      }
    | {
        reviewBlock: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalReviewsSection';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        iconButton?:
          | {
              label: string;
              link: string;
              icon: string | Media;
              iconPosition: 'right' | 'left';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'iconButton';
            }[]
          | null;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04';
        media?: (string | null) | Media;
        customComponent?:
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingHero';
            }[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpages';
      }
    | {
        title: string;
        body: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04'
          | 'bg-neutral-07';
        topLeftImage?: (string | null) | Media;
        topLeftImageSize?: ('small' | 'large') | null;
        bottomRightImage?: (string | null) | Media;
        topRightMobileImage?: (string | null) | Media;
        bottomRightMobileImage?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpagesCentered';
      }
    | {
        richTitle?:
          | (
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
            )[]
          | null;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'homeHero';
      }
    | {
        items: {
          title: string;
          description: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'accordionItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoAccordion';
      }
    | {
        slides?:
          | {
              image: string | Media;
              backgroundColor:
                | 'bg-yellow-03'
                | 'bg-neutral-06'
                | 'bg-blue-04'
                | 'bg-pink-04'
                | 'bg-purple-04'
                | 'bg-red-05'
                | 'bg-pink-05'
                | 'bg-green-04'
                | 'bg-green-02'
                | 'bg-neutral-07';
              title: string;
              subtitle: string;
              items?:
                | {
                    title: string;
                    icon: string | Media;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'infoCarouselSlideItem';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCarouselSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoCarousel';
      }
    | {
        items: {
          title: string;
          subtitle?: string | null;
          icon: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoGridItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGrid';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-07';
        cards?:
          | {
              title: string;
              body: string;
              fullWidthImage?: boolean | null;
              image: string | Media;
              textLink?:
                | {
                    label: string;
                    link: string;
                    iconPosition: 'left' | 'right';
                    eventName?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'textLinkButton';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'gridCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridCardsWithIcons';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-01'
          | 'bg-neutral-07';
        title: string;
        subtitle?: string | null;
        image: string | Media;
        items?:
          | {
              icon?: (string | null) | Media;
              title: string;
              body: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoGridTwoColumnsWithTitleItem';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridTwoColumnsWithTitle';
      }
    | {
        backgroundColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04';
        bottomLineSeperator?: boolean | null;
        title: string;
        icon: string | Media;
        cardTag: string;
        cardButtonLabel: string;
        contentType: 'articles' | 'guides' | 'videos' | 'templates' | 'events' | 'reports';
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithHeading';
      }
    | {
        /**
         * Maximum values - 3
         */
        resources: (
          | {
              relationTo: 'article';
              value: string | Article;
            }
          | {
              relationTo: 'template';
              value: string | Template;
            }
          | {
              relationTo: 'video';
              value: string | Video;
            }
          | {
              relationTo: 'guideMainInfo';
              value: string | GuideMainInfo;
            }
        )[];
        buttonLabel: string;
        guideLabel: string;
        articleLabel: string;
        videoLabel: string;
        templateLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithResources';
      }
    | {
        /**
         * Defaults to bg-neutral-07
         */
        backgroundColour?: ('bg-neutral-07' | 'bg-yellow-04') | null;
        link?: string | null;
        linkLabel?: string | null;
        slides?:
          | {
              cover: string | Media;
              title: string;
              subtitle: string;
              label?: string | null;
              link?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSlider';
      }
    | {
        slides: {
          title: string;
          subtitle: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'timelineSlide';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSliderTimeline';
      }
    | {
        title?: string | null;
        subtitle?: string | null;
        tabs: {
          title: string;
          description: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithDescriptions';
      }
    | {
        heading?: string | null;
        headingImage?: (string | null) | Media;
        body?: string | null;
        backgroundColour?: ('bg-neutral-07' | 'bg-green-01') | null;
        /**
         * If this field is empty then individual tab images will be used, otherwise this image will be shown persistently.
         */
        tabImage?: (string | null) | Media;
        tabs: {
          icon?: (string | null) | Media;
          title: string;
          image: string | Media;
          link?: string | null;
          mobileButton: string;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoIconTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithIcon';
      }
    | {
        title: string;
        subtitle: string;
        leftGraphic: string | Media;
        topGraphic: string | Media;
        bottomGraphic: string | Media;
        mainPhoto: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithCollage';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * The value must be equal with \"Text link with icon\" component field
         */
        contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        imagePosition?: ('right' | 'left') | null;
        cover?: (string | null) | Media;
        customComponent?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
            )[]
          | null;
        textLink?:
          | {
              label: string;
              link: string;
              iconPosition: 'left' | 'right';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkButton';
            }[]
          | null;
        items?:
          | {
              text: string;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoText';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithImage';
      }
    | {
        featureBlock: {
          image: string | Media;
          mobileImage?: (string | null) | Media;
          title: string;
          subtitle: string;
          textLink: {
            label: string;
            link: string;
            iconPosition: 'left' | 'right';
            eventName?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textLinkButton';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoCard';
        }[];
        blocks?:
          | {
              image: string | Media;
              mobileImage?: (string | null) | Media;
              title: string;
              subtitle: string;
              textLink: {
                label: string;
                link: string;
                iconPosition: 'left' | 'right';
                eventName?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'textLinkButton';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoWithCards';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'insightComparison';
      }
    | {
        title: string;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        mobileImage?: (string | null) | Media;
        bannerBody?: string | null;
        bannerLabel?: string | null;
        bannerLink?: string | null;
        /**
         * Lottie JSON file or image
         */
        leftPart: string | Media;
        /**
         * Lottie JSON file or image
         */
        rightPart: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mainHero';
      }
    | {
        /**
         * Generic embeds have more priority than YouTube embeds and video fields.
         */
        embed?: string | null;
        /**
         * YouTube embeds have more priority than video fields.
         */
        embedLink?: string | null;
        assetDesktop?: (string | null) | Media;
        assetMobile?: (string | null) | Media;
        size: 'parallax' | '780' | '885';
        id?: string | null;
        blockName?: string | null;
        blockType: 'media';
      }
    | {
        /**
         * You need to select 3 images.
         */
        firstLine: (string | Media)[];
        /**
         * You need to select 5 images.
         */
        secondLine: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCollage';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        plans: {
          name: string;
          monthlyPrice: string;
          monthlyPriceLabel?: string | null;
          annualyPrice: string;
          annualyPriceLabel?: string | null;
          button: (
            | {
                label: string;
                /**
                 * When you add value for \"Scroll To\" field, link will be overwrite.
                 */
                link: string;
                buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                /**
                 * If the field is filled, an analytics event will sent to the segment.
                 */
                eventName?: string | null;
                /**
                 * You need add the same value which you add to block field \"Ref to scroll to\".
                 */
                scrollTo?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'button';
              }
            | {
                button: {
                  relationTo: 'globalButton';
                  value: string | GlobalButton;
                };
                id?: string | null;
                blockName?: string | null;
                blockType: 'globalButtons';
              }
          )[];
          caption?: string | null;
          body: string;
          items: {
            title: string;
            list: {
              label: string;
              additionalLabel?: string | null;
              tooltipImage?: (string | null) | Media;
              tooltipBody?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingPlanListItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingPlanItem';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingPlan';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTable';
      }
    | {
        mobileDropdownTitle: string;
        featureRow: {
          title: string;
          comparisonFeatures: {
            title: string;
            monthlyPrice: string;
            annualyPrice: string;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            caption?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'comparisonFeatureRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingСomparisonFeaturesRow';
        }[];
        bodyTables: {
          title: string;
          tableRows: {
            cells: (
              | {
                  label: string;
                  tooltipBody?: string | null;
                  tooltipImage?: (string | null) | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableTextCell';
                }
              | {
                  availableIcon?: boolean | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableIconCell';
                }
            )[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingBodyTableRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingBodyTable';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTableComparison';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        backgroundColor?: ('bg-green-02' | 'bg-pink-01') | null;
        reviews: {
          text: string;
          tag?: string | null;
          representative: {
            relationTo: 'testimonial-reviewer';
            value: string | TestimonialReviewer;
          };
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'review';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'reviews';
      }
    | {
        text: string;
        tag?: string | null;
        backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
        imagePosition: 'left' | 'right';
        representative: {
          relationTo: 'testimonial-reviewer';
          value: string | TestimonialReviewer;
        };
        image: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'singleReview';
      }
    | {
        title: string;
        subtitle?: string | null;
        backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
        mobileCenter?: boolean | null;
        version: 'center' | 'left' | 'left-margin';
        /**
         * You need add the same value which you add to button field
         */
        refForScrollTo?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textBlock';
      }
    | {
        links?:
          | {
              label: string;
              hoverColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04' | 'bg-red-04';
              link?: string | null;
              /**
               * If the field is empty, the button will be navigated by a provided link in another field.  The page will scroll to \"Info Grid With Heading\" with the same content type by button press.
               */
              contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkWithIcon';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textLinks';
      }
    | {
        activeLabel: string;
        inactiveLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'toggle';
      }
    | {
        buttonLabel: string;
        emptyListTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'customersBody';
      }
    | {
        sidebar: {
          showRegionFilter?: boolean | null;
          /**
           * Sort by
           */
          sortTitle: string;
          useCaseTitle: string;
          companySizeTitle: string;
          regionTitle: string;
          industryTitle: string;
          clearButtonLabel: string;
          mobileFilterButtonLabel: string;
          id?: string | null;
          blockName?: string | null;
          blockType: 'customersSideBar';
        }[];
        rightBlocks: (
          | {
              buttonLabel: string;
              emptyListTitle: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'customersBody';
            }
          | {
              nextPageButtonTitle: string;
              previousPageButtonTitle: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'pagination';
            }
        )[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'customersSection';
      }
    | {
        showRegionFilter?: boolean | null;
        /**
         * Sort by
         */
        sortTitle: string;
        useCaseTitle: string;
        companySizeTitle: string;
        regionTitle: string;
        industryTitle: string;
        clearButtonLabel: string;
        mobileFilterButtonLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'customersSideBar';
      }
  )[];
  followAndIndex?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event".
 */
export interface Event {
  id: string;
  followAndIndex?: boolean | null;
  title: string;
  description?: string | null;
  date: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  cover: string | Media;
  globalTag?: {
    relationTo: 'globalTag';
    value: string | GlobalTag;
  } | null;
  livestormEmbed: string;
  blocks?:
    | (
        | {
            sideBar: {
              shareTitle: string;
              /**
               * The kind of content being shared (eg. article)
               */
              contentType?: ('article' | 'video' | 'guide' | 'template' | 'integration' | 'event') | null;
              copiedTitle: string;
              shareLinkedin?: boolean | null;
              shareFacebook?: boolean | null;
              shareTwitter?: boolean | null;
              shareEmail?: boolean | null;
              copyLink?: boolean | null;
              embed?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'tableOfContent';
            }[];
            body: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'articleBody';
          }
        | {
            title: string;
            subtitle?: string | null;
            backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
            mobileCenter?: boolean | null;
            version: 'center' | 'left' | 'left-margin';
            /**
             * You need add the same value which you add to button field
             */
            refForScrollTo?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            buttonLabel: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'suggestedArticles';
          }
        | {
            clientLogotypes: {
              relationTo: 'clientLogotype';
              value: string | ClientLogotype;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalClientLogotypes';
          }
        | {
            cta: {
              relationTo: 'callToAction';
              value: string | CallToAction;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalCTA';
          }
        | {
            marginTop: '80' | '40' | '0';
            backgroundColor:
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient'
              | 'blue-pink-gradient';
            /**
             * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
             */
            isContained?: boolean | null;
            title?: string | null;
            /**
             * If this field is populated then anything in title will be overridden.
             */
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleUsersSegment';
                    }
                )[]
              | null;
            subtitle?: string | null;
            caption?: string | null;
            buttons: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            leftAsset?: (string | null) | Media;
            rightAsset?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * You must select only image or Lottie JSON files.
             */
            asset: string | Media;
            /**
             * The field uses for html element and must be without white spaces.
             */
            formId?: string | null;
            form?:
              | (
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      autoComplete?: boolean | null;
                      type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formInput';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      options: {
                        name: string;
                        value: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'dropdownOption';
                      }[];
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formDropdown';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      label: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formCheckbox';
                    }
                )[]
              | null;
            label: string;
            /**
             * The link overwriten with Form Input and Form ID fields
             */
            link?: string | null;
            buttonPosition?: ('bottom' | 'right') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaForm';
          }
        | {
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            /**
             * The field control top and bottom margin for mobile version.
             */
            mobileMargin: '0' | '20';
            /**
             * If you fill this field, button on click will be scroll to element, where you will add the same value.
             */
            scrollToElement?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaSmall';
          }
        | {
            subtitle?: string | null;
            /**
             * Defaults to left
             */
            subtitleAlignment?: ('left' | 'centre') | null;
            logos: (string | Media)[];
            bottomDivider: '0' | '50';
            mobileBottomDivider?: boolean | null;
            marginTop: '80' | '0';
            backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
            id?: string | null;
            blockName?: string | null;
            blockType: 'clientLogotypes';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "feature".
 */
export interface Feature {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks?:
    | (
        | {
            review?: {
              relationTo: 'globalReviews';
              value: string | GlobalReview;
            } | null;
            stats?:
              | {
                  [k: string]: unknown;
                }
              | unknown[]
              | string
              | number
              | boolean
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'appreciation';
          }
        | {
            title: string;
            subtitle: string;
            backgroundColor:
              | 'bg-neutral-06'
              | 'bg-green-02'
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient';
            /**
             * If you add a file here, the banner will use a second variant of design.
             */
            mainImage?: (string | null) | Media;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            leftTopImage?: (string | null) | Media;
            rightTopImage?: (string | null) | Media;
            leftBottomImage?: (string | null) | Media;
            rightBottomImage?: (string | null) | Media;
            leftTopImageMobile?: (string | null) | Media;
            rightTopImageMobile?: (string | null) | Media;
            leftBottomImageMobile?: (string | null) | Media;
            rightBottomImageMobile?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'banner';
          }
        | {
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            logos?: (string | Media)[] | null;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            embed?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'bookDemoMain';
          }
        | {
            subtitle?: string | null;
            /**
             * Defaults to left
             */
            subtitleAlignment?: ('left' | 'centre') | null;
            logos: (string | Media)[];
            bottomDivider: '0' | '50';
            mobileBottomDivider?: boolean | null;
            marginTop: '80' | '0';
            backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
            id?: string | null;
            blockName?: string | null;
            blockType: 'clientLogotypes';
          }
        | {
            backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
            /**
             * Minimal images count - 8 Maximum images count - 18
             */
            images: (string | Media)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'clientLogotypesCards';
          }
        | {
            marginTop: '80' | '40' | '0';
            backgroundColor:
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient'
              | 'blue-pink-gradient';
            /**
             * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
             */
            isContained?: boolean | null;
            title?: string | null;
            /**
             * If this field is populated then anything in title will be overridden.
             */
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleUsersSegment';
                    }
                )[]
              | null;
            subtitle?: string | null;
            caption?: string | null;
            buttons: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            leftAsset?: (string | null) | Media;
            rightAsset?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * You must select only image or Lottie JSON files.
             */
            asset: string | Media;
            /**
             * The field uses for html element and must be without white spaces.
             */
            formId?: string | null;
            form?:
              | (
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      autoComplete?: boolean | null;
                      type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formInput';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      options: {
                        name: string;
                        value: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'dropdownOption';
                      }[];
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formDropdown';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      label: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formCheckbox';
                    }
                )[]
              | null;
            label: string;
            /**
             * The link overwriten with Form Input and Form ID fields
             */
            link?: string | null;
            buttonPosition?: ('bottom' | 'right') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaForm';
          }
        | {
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            /**
             * The field control top and bottom margin for mobile version.
             */
            mobileMargin: '0' | '20';
            /**
             * If you fill this field, button on click will be scroll to element, where you will add the same value.
             */
            scrollToElement?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaSmall';
          }
        | {
            backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
            content?:
              | (
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingHero';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingPanel';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingSites';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingTasks';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingCapture';
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'customComponent';
          }
        | {
            demos?:
              | {
                  title: string;
                  body: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  /**
                   * Can be Rive animations or images
                   */
                  media: string | Media;
                  /**
                   * Duration the demo will be shown in milliseconds, not providing a value will assume an infinite duration
                   */
                  duration?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'demo';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'demos';
          }
        | {
            embedded: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'embedded';
          }
        | {
            address: string;
            icon?: (string | null) | Media;
            /**
             * Property width and height for embeded element must be set to 100%
             */
            embed: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'embededMap';
          }
        | {
            featureBlocks?:
              | {
                  title?: string | null;
                  heading?: string | null;
                  body?: string | null;
                  integrations?:
                    | {
                        icon?: (string | null) | Media;
                        link?: string | null;
                        /**
                         * Only used for screen readers
                         */
                        linkText?: string | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'featureIntegration';
                      }[]
                    | null;
                  link?: string | null;
                  linkText?: string | null;
                  image?: (string | null) | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'featureBlock';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'features';
          }
        | {
            id: string | null;
            buttonLabel: string;
            alignment: 'row' | 'column';
            backgroundColor: 'bg-neutral-06' | 'transparent';
            padding: '0' | '40';
            header?:
              | (
                  | {
                      title: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formTitle';
                    }
                  | {
                      subtitle: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formSubtitle';
                    }
                )[]
              | null;
            formElements: (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[];
            blockName?: string | null;
            blockType: 'form';
          }
        | {
            clientLogotypes: {
              relationTo: 'clientLogotype';
              value: string | ClientLogotype;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalClientLogotypes';
          }
        | {
            cta: {
              relationTo: 'callToAction';
              value: string | CallToAction;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalCTA';
          }
        | {
            infoAccordion: {
              relationTo: 'globalInfoAccordions';
              value: string | GlobalInfoAccordion;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoAccordion';
          }
        | {
            infoCarousel: {
              relationTo: 'globalInfoCarousels';
              value: string | GlobalInfoCarousel;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoCarousel';
          }
        | {
            infoGrid: {
              relationTo: 'globalInfoGrids';
              value: string | GlobalInfoGrid;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoGrid';
          }
        | {
            infoTab: {
              relationTo: 'globalInfoTabs';
              value: string | GlobalInfoTab;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoTabVariant';
          }
        | {
            infoTextWithImage: {
              relationTo: 'globalInfoTextWithImages';
              value: string | GlobalInfoTextWithImage;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoTextWithImage';
          }
        | {
            infoWithCards: {
              relationTo: 'globalInfoWithCards';
              value: string | GlobalInfoWithCard;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoWithCardsSection';
          }
        | {
            reviewBlock: {
              relationTo: 'globalReviews';
              value: string | GlobalReview;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalReviewsSection';
          }
        | {
            title: string;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            iconButton?:
              | {
                  label: string;
                  link: string;
                  icon: string | Media;
                  iconPosition: 'right' | 'left';
                  eventName?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'iconButton';
                }[]
              | null;
            subtitle: string;
            backgroundColor:
              | 'bg-neutral-05'
              | 'bg-yellow-03'
              | 'bg-purple-04'
              | 'bg-yellow-04'
              | 'bg-green-04'
              | 'bg-neutral-06'
              | 'bg-blue-04'
              | 'bg-red-05'
              | 'bg-green-02'
              | 'bg-pink-05'
              | 'bg-pink-04';
            media?: (string | null) | Media;
            customComponent?:
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }[]
              | null;
            caption?: string | null;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heroSubpages';
          }
        | {
            title: string;
            body: string;
            backgroundColor:
              | 'bg-neutral-05'
              | 'bg-yellow-03'
              | 'bg-purple-04'
              | 'bg-yellow-04'
              | 'bg-green-04'
              | 'bg-neutral-06'
              | 'bg-blue-04'
              | 'bg-red-05'
              | 'bg-green-02'
              | 'bg-pink-05'
              | 'bg-pink-04'
              | 'bg-neutral-07';
            topLeftImage?: (string | null) | Media;
            topLeftImageSize?: ('small' | 'large') | null;
            bottomRightImage?: (string | null) | Media;
            topRightMobileImage?: (string | null) | Media;
            bottomRightMobileImage?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heroSubpagesCentered';
          }
        | {
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                )[]
              | null;
            subtitle: string;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            caption?: string | null;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeHero';
          }
        | {
            items: {
              title: string;
              description: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'accordionItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoAccordion';
          }
        | {
            slides?:
              | {
                  image: string | Media;
                  backgroundColor:
                    | 'bg-yellow-03'
                    | 'bg-neutral-06'
                    | 'bg-blue-04'
                    | 'bg-pink-04'
                    | 'bg-purple-04'
                    | 'bg-red-05'
                    | 'bg-pink-05'
                    | 'bg-green-04'
                    | 'bg-green-02'
                    | 'bg-neutral-07';
                  title: string;
                  subtitle: string;
                  items?:
                    | {
                        title: string;
                        icon: string | Media;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'infoCarouselSlideItem';
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoCarouselSlide';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoCarousel';
          }
        | {
            items: {
              title: string;
              subtitle?: string | null;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoGridItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGrid';
          }
        | {
            backgroundColor:
              | 'bg-green-04'
              | 'bg-green-02'
              | 'bg-yellow-04'
              | 'bg-blue-04'
              | 'bg-neutral-06'
              | 'bg-neutral-07';
            cards?:
              | {
                  title: string;
                  body: string;
                  fullWidthImage?: boolean | null;
                  image: string | Media;
                  textLink?:
                    | {
                        label: string;
                        link: string;
                        iconPosition: 'left' | 'right';
                        eventName?: string | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'textLinkButton';
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'gridCard';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGridCardsWithIcons';
          }
        | {
            backgroundColor:
              | 'bg-green-04'
              | 'bg-green-02'
              | 'bg-yellow-04'
              | 'bg-blue-04'
              | 'bg-neutral-06'
              | 'bg-neutral-01'
              | 'bg-neutral-07';
            title: string;
            subtitle?: string | null;
            image: string | Media;
            items?:
              | {
                  icon?: (string | null) | Media;
                  title: string;
                  body: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoGridTwoColumnsWithTitleItem';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGridTwoColumnsWithTitle';
          }
        | {
            backgroundColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04';
            bottomLineSeperator?: boolean | null;
            title: string;
            icon: string | Media;
            cardTag: string;
            cardButtonLabel: string;
            contentType: 'articles' | 'guides' | 'videos' | 'templates' | 'events' | 'reports';
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGridWithHeading';
          }
        | {
            /**
             * Maximum values - 3
             */
            resources: (
              | {
                  relationTo: 'article';
                  value: string | Article;
                }
              | {
                  relationTo: 'template';
                  value: string | Template;
                }
              | {
                  relationTo: 'video';
                  value: string | Video;
                }
              | {
                  relationTo: 'guideMainInfo';
                  value: string | GuideMainInfo;
                }
            )[];
            buttonLabel: string;
            guideLabel: string;
            articleLabel: string;
            videoLabel: string;
            templateLabel: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGridWithResources';
          }
        | {
            /**
             * Defaults to bg-neutral-07
             */
            backgroundColour?: ('bg-neutral-07' | 'bg-yellow-04') | null;
            link?: string | null;
            linkLabel?: string | null;
            slides?:
              | {
                  cover: string | Media;
                  title: string;
                  subtitle: string;
                  label?: string | null;
                  link?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoSlide';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoSlider';
          }
        | {
            slides: {
              title: string;
              subtitle: string;
              image: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'timelineSlide';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoSliderTimeline';
          }
        | {
            title?: string | null;
            subtitle?: string | null;
            tabs: {
              title: string;
              description: string;
              image: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoTab';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoTabsWithDescriptions';
          }
        | {
            heading?: string | null;
            headingImage?: (string | null) | Media;
            body?: string | null;
            backgroundColour?: ('bg-neutral-07' | 'bg-green-01') | null;
            /**
             * If this field is empty then individual tab images will be used, otherwise this image will be shown persistently.
             */
            tabImage?: (string | null) | Media;
            tabs: {
              icon?: (string | null) | Media;
              title: string;
              image: string | Media;
              link?: string | null;
              mobileButton: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoIconTab';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoTabsWithIcon';
          }
        | {
            title: string;
            subtitle: string;
            leftGraphic: string | Media;
            topGraphic: string | Media;
            bottomGraphic: string | Media;
            mainPhoto: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoTextWithCollage';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * The value must be equal with \"Text link with icon\" component field
             */
            contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
            backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
            imagePosition?: ('right' | 'left') | null;
            cover?: (string | null) | Media;
            customComponent?:
              | (
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingHero';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingPanel';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingSites';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingTasks';
                    }
                )[]
              | null;
            textLink?:
              | {
                  label: string;
                  link: string;
                  iconPosition: 'left' | 'right';
                  eventName?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'textLinkButton';
                }[]
              | null;
            items?:
              | {
                  text: string;
                  icon: string | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoText';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoTextWithImage';
          }
        | {
            featureBlock: {
              image: string | Media;
              mobileImage?: (string | null) | Media;
              title: string;
              subtitle: string;
              textLink: {
                label: string;
                link: string;
                iconPosition: 'left' | 'right';
                eventName?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'textLinkButton';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCard';
            }[];
            blocks?:
              | {
                  image: string | Media;
                  mobileImage?: (string | null) | Media;
                  title: string;
                  subtitle: string;
                  textLink: {
                    label: string;
                    link: string;
                    iconPosition: 'left' | 'right';
                    eventName?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'textLinkButton';
                  }[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoCard';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoWithCards';
          }
        | {
            id?: string | null;
            blockName?: string | null;
            blockType: 'insightComparison';
          }
        | {
            title: string;
            subtitle: string;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            caption?: string | null;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            mobileImage?: (string | null) | Media;
            bannerBody?: string | null;
            bannerLabel?: string | null;
            bannerLink?: string | null;
            /**
             * Lottie JSON file or image
             */
            leftPart: string | Media;
            /**
             * Lottie JSON file or image
             */
            rightPart: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mainHero';
          }
        | {
            /**
             * Generic embeds have more priority than YouTube embeds and video fields.
             */
            embed?: string | null;
            /**
             * YouTube embeds have more priority than video fields.
             */
            embedLink?: string | null;
            assetDesktop?: (string | null) | Media;
            assetMobile?: (string | null) | Media;
            size: 'parallax' | '780' | '885';
            id?: string | null;
            blockName?: string | null;
            blockType: 'media';
          }
        | {
            /**
             * You need to select 3 images.
             */
            firstLine: (string | Media)[];
            /**
             * You need to select 5 images.
             */
            secondLine: (string | Media)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaCollage';
          }
        | {
            nextPageButtonTitle: string;
            previousPageButtonTitle: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'pagination';
          }
        | {
            plans: {
              name: string;
              monthlyPrice: string;
              monthlyPriceLabel?: string | null;
              annualyPrice: string;
              annualyPriceLabel?: string | null;
              button: (
                | {
                    label: string;
                    /**
                     * When you add value for \"Scroll To\" field, link will be overwrite.
                     */
                    link: string;
                    buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                    backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                    /**
                     * If the field is filled, an analytics event will sent to the segment.
                     */
                    eventName?: string | null;
                    /**
                     * You need add the same value which you add to block field \"Ref to scroll to\".
                     */
                    scrollTo?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'button';
                  }
                | {
                    button: {
                      relationTo: 'globalButton';
                      value: string | GlobalButton;
                    };
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'globalButtons';
                  }
              )[];
              caption?: string | null;
              body: string;
              items: {
                title: string;
                list: {
                  label: string;
                  additionalLabel?: string | null;
                  tooltipImage?: (string | null) | Media;
                  tooltipBody?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingPlanListItem';
                }[];
                id?: string | null;
                blockName?: string | null;
                blockType: 'pricingPlanItem';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingPlan';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingTable';
          }
        | {
            mobileDropdownTitle: string;
            featureRow: {
              title: string;
              comparisonFeatures: {
                title: string;
                monthlyPrice: string;
                annualyPrice: string;
                button: (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[];
                caption?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'comparisonFeatureRow';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingСomparisonFeaturesRow';
            }[];
            bodyTables: {
              title: string;
              tableRows: {
                cells: (
                  | {
                      label: string;
                      tooltipBody?: string | null;
                      tooltipImage?: (string | null) | Media;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'pricingBodyTableTextCell';
                    }
                  | {
                      availableIcon?: boolean | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'pricingBodyTableIconCell';
                    }
                )[];
                id?: string | null;
                blockName?: string | null;
                blockType: 'pricingBodyTableRow';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingBodyTable';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingTableComparison';
          }
        | {
            title: string;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            subtitle: string;
            buttonSubtext?: string | null;
            backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
            media: string | Media;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            isCentered?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'resourcesHero';
          }
        | {
            backgroundColor?: ('bg-green-02' | 'bg-pink-01') | null;
            reviews: {
              text: string;
              tag?: string | null;
              representative: {
                relationTo: 'testimonial-reviewer';
                value: string | TestimonialReviewer;
              };
              image: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'review';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'reviews';
          }
        | {
            text: string;
            tag?: string | null;
            backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
            imagePosition: 'left' | 'right';
            representative: {
              relationTo: 'testimonial-reviewer';
              value: string | TestimonialReviewer;
            };
            image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'singleReview';
          }
        | {
            title: string;
            subtitle?: string | null;
            backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
            mobileCenter?: boolean | null;
            version: 'center' | 'left' | 'left-margin';
            /**
             * You need add the same value which you add to button field
             */
            refForScrollTo?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            links?:
              | {
                  label: string;
                  hoverColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04' | 'bg-red-04';
                  link?: string | null;
                  /**
                   * If the field is empty, the button will be navigated by a provided link in another field.  The page will scroll to \"Info Grid With Heading\" with the same content type by button press.
                   */
                  contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
                  icon: string | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'textLinkWithIcon';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textLinks';
          }
        | {
            activeLabel: string;
            inactiveLabel: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'toggle';
          }
      )[]
    | null;
  followAndIndex?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guide".
 */
export interface Guide {
  id: string;
  followAndIndex?: boolean | null;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * For SEO optimization, page with position 1 must have default slug
   */
  position: number;
  heroTitle: string;
  heroBody: string;
  body: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integration".
 */
export interface Integration {
  id: string;
  followAndIndex?: boolean | null;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  heroTitle: string;
  heroBody: string;
  /**
   * CTA button shown in hero section
   */
  button?:
    | (
        | {
            label: string;
            /**
             * When you add value for \"Scroll To\" field, link will be overwrite.
             */
            link: string;
            buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
            backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
            /**
             * If the field is filled, an analytics event will sent to the segment.
             */
            eventName?: string | null;
            /**
             * You need add the same value which you add to block field \"Ref to scroll to\".
             */
            scrollTo?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'button';
          }
        | {
            button: {
              relationTo: 'globalButton';
              value: string | GlobalButton;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalButtons';
          }
      )[]
    | null;
  buttonSubtext?: string | null;
  cover?: (string | null) | Media;
  sideBar: {
    shareTitle: string;
    /**
     * The kind of content being shared (eg. article)
     */
    contentType?: ('article' | 'video' | 'guide' | 'template' | 'integration' | 'event') | null;
    copiedTitle: string;
    shareLinkedin?: boolean | null;
    shareFacebook?: boolean | null;
    shareTwitter?: boolean | null;
    shareEmail?: boolean | null;
    copyLink?: boolean | null;
    embed?: string | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'tableOfContent';
  }[];
  body: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integrationMainInfo".
 */
export interface IntegrationMainInfo {
  id: string;
  title: string;
  body: string;
  linkToFirstPage: string;
  /**
   * Text will be used for the button, which is used in the guides list.
   */
  buttonText: string;
  /**
   * Text will be used for the sidebar table of content.
   */
  shareTitle: string;
  copiedTitle: string;
  /**
   * Text will be used for the guide pagination.
   */
  previousPageTitle: string;
  /**
   * Text will be used for the guide pagination.
   */
  nextPageTitle: string;
  /**
   * Text will be used for the guide pagination.
   */
  finishTitle: string;
  /**
   * Text will be used for the sidebar progress percentage.
   */
  completeTitle: string;
  globalTag?: {
    relationTo: 'globalTag';
    value: string | GlobalTag;
  } | null;
  cover: string | Media;
  shareLinkedin?: boolean | null;
  shareFacebook?: boolean | null;
  shareEmail?: boolean | null;
  shareTwitter?: boolean | null;
  copyLink?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "landingPage".
 */
export interface LandingPage {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  body: (
    | {
        review?: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        } | null;
        stats?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'appreciation';
      }
    | {
        title: string;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-06'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient';
        /**
         * If you add a file here, the banner will use a second variant of design.
         */
        mainImage?: (string | null) | Media;
        button: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        leftTopImage?: (string | null) | Media;
        rightTopImage?: (string | null) | Media;
        leftBottomImage?: (string | null) | Media;
        rightBottomImage?: (string | null) | Media;
        leftTopImageMobile?: (string | null) | Media;
        rightTopImageMobile?: (string | null) | Media;
        leftBottomImageMobile?: (string | null) | Media;
        rightBottomImageMobile?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'banner';
      }
    | {
        body?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        logos?: (string | Media)[] | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        embed?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'bookDemoMain';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        /**
         * Minimal images count - 8 Maximum images count - 18
         */
        images: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypesCards';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        content?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingCapture';
                }
            )[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'customComponent';
      }
    | {
        demos?:
          | {
              title: string;
              body: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              /**
               * Can be Rive animations or images
               */
              media: string | Media;
              /**
               * Duration the demo will be shown in milliseconds, not providing a value will assume an infinite duration
               */
              duration?: number | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'demo';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'demos';
      }
    | {
        embedded: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embedded';
      }
    | {
        address: string;
        icon?: (string | null) | Media;
        /**
         * Property width and height for embeded element must be set to 100%
         */
        embed: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embededMap';
      }
    | {
        featureBlocks?:
          | {
              title?: string | null;
              heading?: string | null;
              body?: string | null;
              integrations?:
                | {
                    icon?: (string | null) | Media;
                    link?: string | null;
                    /**
                     * Only used for screen readers
                     */
                    linkText?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'featureIntegration';
                  }[]
                | null;
              link?: string | null;
              linkText?: string | null;
              image?: (string | null) | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'featureBlock';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'features';
      }
    | {
        id: string | null;
        buttonLabel: string;
        alignment: 'row' | 'column';
        backgroundColor: 'bg-neutral-06' | 'transparent';
        padding: '0' | '40';
        header?:
          | (
              | {
                  title: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formTitle';
                }
              | {
                  subtitle: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formSubtitle';
                }
            )[]
          | null;
        formElements: (
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              autoComplete?: boolean | null;
              type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formInput';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              options: {
                name: string;
                value: string;
                id?: string | null;
                blockName?: string | null;
                blockType: 'dropdownOption';
              }[];
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formDropdown';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              label: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formCheckbox';
            }
        )[];
        blockName?: string | null;
        blockType: 'form';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        infoAccordion: {
          relationTo: 'globalInfoAccordions';
          value: string | GlobalInfoAccordion;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoAccordion';
      }
    | {
        infoCarousel: {
          relationTo: 'globalInfoCarousels';
          value: string | GlobalInfoCarousel;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoCarousel';
      }
    | {
        infoGrid: {
          relationTo: 'globalInfoGrids';
          value: string | GlobalInfoGrid;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoGrid';
      }
    | {
        infoTab: {
          relationTo: 'globalInfoTabs';
          value: string | GlobalInfoTab;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTabVariant';
      }
    | {
        infoTextWithImage: {
          relationTo: 'globalInfoTextWithImages';
          value: string | GlobalInfoTextWithImage;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTextWithImage';
      }
    | {
        infoWithCards: {
          relationTo: 'globalInfoWithCards';
          value: string | GlobalInfoWithCard;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoWithCardsSection';
      }
    | {
        reviewBlock: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalReviewsSection';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        iconButton?:
          | {
              label: string;
              link: string;
              icon: string | Media;
              iconPosition: 'right' | 'left';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'iconButton';
            }[]
          | null;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04';
        media?: (string | null) | Media;
        customComponent?:
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingHero';
            }[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpages';
      }
    | {
        title: string;
        body: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04'
          | 'bg-neutral-07';
        topLeftImage?: (string | null) | Media;
        topLeftImageSize?: ('small' | 'large') | null;
        bottomRightImage?: (string | null) | Media;
        topRightMobileImage?: (string | null) | Media;
        bottomRightMobileImage?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpagesCentered';
      }
    | {
        richTitle?:
          | (
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
            )[]
          | null;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'homeHero';
      }
    | {
        items: {
          title: string;
          description: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'accordionItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoAccordion';
      }
    | {
        slides?:
          | {
              image: string | Media;
              backgroundColor:
                | 'bg-yellow-03'
                | 'bg-neutral-06'
                | 'bg-blue-04'
                | 'bg-pink-04'
                | 'bg-purple-04'
                | 'bg-red-05'
                | 'bg-pink-05'
                | 'bg-green-04'
                | 'bg-green-02'
                | 'bg-neutral-07';
              title: string;
              subtitle: string;
              items?:
                | {
                    title: string;
                    icon: string | Media;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'infoCarouselSlideItem';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCarouselSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoCarousel';
      }
    | {
        items: {
          title: string;
          subtitle?: string | null;
          icon: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoGridItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGrid';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-07';
        cards?:
          | {
              title: string;
              body: string;
              fullWidthImage?: boolean | null;
              image: string | Media;
              textLink?:
                | {
                    label: string;
                    link: string;
                    iconPosition: 'left' | 'right';
                    eventName?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'textLinkButton';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'gridCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridCardsWithIcons';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-01'
          | 'bg-neutral-07';
        title: string;
        subtitle?: string | null;
        image: string | Media;
        items?:
          | {
              icon?: (string | null) | Media;
              title: string;
              body: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoGridTwoColumnsWithTitleItem';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridTwoColumnsWithTitle';
      }
    | {
        backgroundColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04';
        bottomLineSeperator?: boolean | null;
        title: string;
        icon: string | Media;
        cardTag: string;
        cardButtonLabel: string;
        contentType: 'articles' | 'guides' | 'videos' | 'templates' | 'events' | 'reports';
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithHeading';
      }
    | {
        /**
         * Maximum values - 3
         */
        resources: (
          | {
              relationTo: 'article';
              value: string | Article;
            }
          | {
              relationTo: 'template';
              value: string | Template;
            }
          | {
              relationTo: 'video';
              value: string | Video;
            }
          | {
              relationTo: 'guideMainInfo';
              value: string | GuideMainInfo;
            }
        )[];
        buttonLabel: string;
        guideLabel: string;
        articleLabel: string;
        videoLabel: string;
        templateLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithResources';
      }
    | {
        /**
         * Defaults to bg-neutral-07
         */
        backgroundColour?: ('bg-neutral-07' | 'bg-yellow-04') | null;
        link?: string | null;
        linkLabel?: string | null;
        slides?:
          | {
              cover: string | Media;
              title: string;
              subtitle: string;
              label?: string | null;
              link?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSlider';
      }
    | {
        slides: {
          title: string;
          subtitle: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'timelineSlide';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSliderTimeline';
      }
    | {
        title?: string | null;
        subtitle?: string | null;
        tabs: {
          title: string;
          description: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithDescriptions';
      }
    | {
        heading?: string | null;
        headingImage?: (string | null) | Media;
        body?: string | null;
        backgroundColour?: ('bg-neutral-07' | 'bg-green-01') | null;
        /**
         * If this field is empty then individual tab images will be used, otherwise this image will be shown persistently.
         */
        tabImage?: (string | null) | Media;
        tabs: {
          icon?: (string | null) | Media;
          title: string;
          image: string | Media;
          link?: string | null;
          mobileButton: string;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoIconTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithIcon';
      }
    | {
        title: string;
        subtitle: string;
        leftGraphic: string | Media;
        topGraphic: string | Media;
        bottomGraphic: string | Media;
        mainPhoto: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithCollage';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * The value must be equal with \"Text link with icon\" component field
         */
        contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        imagePosition?: ('right' | 'left') | null;
        cover?: (string | null) | Media;
        customComponent?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
            )[]
          | null;
        textLink?:
          | {
              label: string;
              link: string;
              iconPosition: 'left' | 'right';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkButton';
            }[]
          | null;
        items?:
          | {
              text: string;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoText';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithImage';
      }
    | {
        featureBlock: {
          image: string | Media;
          mobileImage?: (string | null) | Media;
          title: string;
          subtitle: string;
          textLink: {
            label: string;
            link: string;
            iconPosition: 'left' | 'right';
            eventName?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textLinkButton';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoCard';
        }[];
        blocks?:
          | {
              image: string | Media;
              mobileImage?: (string | null) | Media;
              title: string;
              subtitle: string;
              textLink: {
                label: string;
                link: string;
                iconPosition: 'left' | 'right';
                eventName?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'textLinkButton';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoWithCards';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'insightComparison';
      }
    | {
        title: string;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        mobileImage?: (string | null) | Media;
        bannerBody?: string | null;
        bannerLabel?: string | null;
        bannerLink?: string | null;
        /**
         * Lottie JSON file or image
         */
        leftPart: string | Media;
        /**
         * Lottie JSON file or image
         */
        rightPart: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mainHero';
      }
    | {
        /**
         * Generic embeds have more priority than YouTube embeds and video fields.
         */
        embed?: string | null;
        /**
         * YouTube embeds have more priority than video fields.
         */
        embedLink?: string | null;
        assetDesktop?: (string | null) | Media;
        assetMobile?: (string | null) | Media;
        size: 'parallax' | '780' | '885';
        id?: string | null;
        blockName?: string | null;
        blockType: 'media';
      }
    | {
        /**
         * You need to select 3 images.
         */
        firstLine: (string | Media)[];
        /**
         * You need to select 5 images.
         */
        secondLine: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCollage';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        plans: {
          name: string;
          monthlyPrice: string;
          monthlyPriceLabel?: string | null;
          annualyPrice: string;
          annualyPriceLabel?: string | null;
          button: (
            | {
                label: string;
                /**
                 * When you add value for \"Scroll To\" field, link will be overwrite.
                 */
                link: string;
                buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                /**
                 * If the field is filled, an analytics event will sent to the segment.
                 */
                eventName?: string | null;
                /**
                 * You need add the same value which you add to block field \"Ref to scroll to\".
                 */
                scrollTo?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'button';
              }
            | {
                button: {
                  relationTo: 'globalButton';
                  value: string | GlobalButton;
                };
                id?: string | null;
                blockName?: string | null;
                blockType: 'globalButtons';
              }
          )[];
          caption?: string | null;
          body: string;
          items: {
            title: string;
            list: {
              label: string;
              additionalLabel?: string | null;
              tooltipImage?: (string | null) | Media;
              tooltipBody?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingPlanListItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingPlanItem';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingPlan';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTable';
      }
    | {
        mobileDropdownTitle: string;
        featureRow: {
          title: string;
          comparisonFeatures: {
            title: string;
            monthlyPrice: string;
            annualyPrice: string;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            caption?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'comparisonFeatureRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingСomparisonFeaturesRow';
        }[];
        bodyTables: {
          title: string;
          tableRows: {
            cells: (
              | {
                  label: string;
                  tooltipBody?: string | null;
                  tooltipImage?: (string | null) | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableTextCell';
                }
              | {
                  availableIcon?: boolean | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableIconCell';
                }
            )[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingBodyTableRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingBodyTable';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTableComparison';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        backgroundColor?: ('bg-green-02' | 'bg-pink-01') | null;
        reviews: {
          text: string;
          tag?: string | null;
          representative: {
            relationTo: 'testimonial-reviewer';
            value: string | TestimonialReviewer;
          };
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'review';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'reviews';
      }
    | {
        text: string;
        tag?: string | null;
        backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
        imagePosition: 'left' | 'right';
        representative: {
          relationTo: 'testimonial-reviewer';
          value: string | TestimonialReviewer;
        };
        image: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'singleReview';
      }
    | {
        title: string;
        subtitle?: string | null;
        backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
        mobileCenter?: boolean | null;
        version: 'center' | 'left' | 'left-margin';
        /**
         * You need add the same value which you add to button field
         */
        refForScrollTo?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textBlock';
      }
    | {
        links?:
          | {
              label: string;
              hoverColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04' | 'bg-red-04';
              link?: string | null;
              /**
               * If the field is empty, the button will be navigated by a provided link in another field.  The page will scroll to \"Info Grid With Heading\" with the same content type by button press.
               */
              contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkWithIcon';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textLinks';
      }
    | {
        activeLabel: string;
        inactiveLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'toggle';
      }
  )[];
  followAndIndex?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "legalPage".
 */
export interface LegalPage {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  headerTitle?: string | null;
  headerBody?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  body: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  followAndIndex?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page".
 */
export interface Page {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  body: (
    | {
        review?: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        } | null;
        stats?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'appreciation';
      }
    | {
        title: string;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-06'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient';
        /**
         * If you add a file here, the banner will use a second variant of design.
         */
        mainImage?: (string | null) | Media;
        button: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        leftTopImage?: (string | null) | Media;
        rightTopImage?: (string | null) | Media;
        leftBottomImage?: (string | null) | Media;
        rightBottomImage?: (string | null) | Media;
        leftTopImageMobile?: (string | null) | Media;
        rightTopImageMobile?: (string | null) | Media;
        leftBottomImageMobile?: (string | null) | Media;
        rightBottomImageMobile?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'banner';
      }
    | {
        body?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        logos?: (string | Media)[] | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        embed?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'bookDemoMain';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        /**
         * Minimal images count - 8 Maximum images count - 18
         */
        images: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypesCards';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        content?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingCapture';
                }
            )[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'customComponent';
      }
    | {
        demos?:
          | {
              title: string;
              body: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              /**
               * Can be Rive animations or images
               */
              media: string | Media;
              /**
               * Duration the demo will be shown in milliseconds, not providing a value will assume an infinite duration
               */
              duration?: number | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'demo';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'demos';
      }
    | {
        embedded: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embedded';
      }
    | {
        address: string;
        icon?: (string | null) | Media;
        /**
         * Property width and height for embeded element must be set to 100%
         */
        embed: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embededMap';
      }
    | {
        featureBlocks?:
          | {
              title?: string | null;
              heading?: string | null;
              body?: string | null;
              integrations?:
                | {
                    icon?: (string | null) | Media;
                    link?: string | null;
                    /**
                     * Only used for screen readers
                     */
                    linkText?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'featureIntegration';
                  }[]
                | null;
              link?: string | null;
              linkText?: string | null;
              image?: (string | null) | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'featureBlock';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'features';
      }
    | {
        id: string | null;
        buttonLabel: string;
        alignment: 'row' | 'column';
        backgroundColor: 'bg-neutral-06' | 'transparent';
        padding: '0' | '40';
        header?:
          | (
              | {
                  title: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formTitle';
                }
              | {
                  subtitle: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formSubtitle';
                }
            )[]
          | null;
        formElements: (
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              autoComplete?: boolean | null;
              type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formInput';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              options: {
                name: string;
                value: string;
                id?: string | null;
                blockName?: string | null;
                blockType: 'dropdownOption';
              }[];
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formDropdown';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              label: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formCheckbox';
            }
        )[];
        blockName?: string | null;
        blockType: 'form';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        infoAccordion: {
          relationTo: 'globalInfoAccordions';
          value: string | GlobalInfoAccordion;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoAccordion';
      }
    | {
        infoCarousel: {
          relationTo: 'globalInfoCarousels';
          value: string | GlobalInfoCarousel;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoCarousel';
      }
    | {
        infoGrid: {
          relationTo: 'globalInfoGrids';
          value: string | GlobalInfoGrid;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoGrid';
      }
    | {
        infoTab: {
          relationTo: 'globalInfoTabs';
          value: string | GlobalInfoTab;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTabVariant';
      }
    | {
        infoTextWithImage: {
          relationTo: 'globalInfoTextWithImages';
          value: string | GlobalInfoTextWithImage;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTextWithImage';
      }
    | {
        infoWithCards: {
          relationTo: 'globalInfoWithCards';
          value: string | GlobalInfoWithCard;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoWithCardsSection';
      }
    | {
        reviewBlock: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalReviewsSection';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        iconButton?:
          | {
              label: string;
              link: string;
              icon: string | Media;
              iconPosition: 'right' | 'left';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'iconButton';
            }[]
          | null;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04';
        media?: (string | null) | Media;
        customComponent?:
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingHero';
            }[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpages';
      }
    | {
        title: string;
        body: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04'
          | 'bg-neutral-07';
        topLeftImage?: (string | null) | Media;
        topLeftImageSize?: ('small' | 'large') | null;
        bottomRightImage?: (string | null) | Media;
        topRightMobileImage?: (string | null) | Media;
        bottomRightMobileImage?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpagesCentered';
      }
    | {
        richTitle?:
          | (
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
            )[]
          | null;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'homeHero';
      }
    | {
        items: {
          title: string;
          description: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'accordionItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoAccordion';
      }
    | {
        slides?:
          | {
              image: string | Media;
              backgroundColor:
                | 'bg-yellow-03'
                | 'bg-neutral-06'
                | 'bg-blue-04'
                | 'bg-pink-04'
                | 'bg-purple-04'
                | 'bg-red-05'
                | 'bg-pink-05'
                | 'bg-green-04'
                | 'bg-green-02'
                | 'bg-neutral-07';
              title: string;
              subtitle: string;
              items?:
                | {
                    title: string;
                    icon: string | Media;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'infoCarouselSlideItem';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCarouselSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoCarousel';
      }
    | {
        items: {
          title: string;
          subtitle?: string | null;
          icon: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoGridItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGrid';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-07';
        cards?:
          | {
              title: string;
              body: string;
              fullWidthImage?: boolean | null;
              image: string | Media;
              textLink?:
                | {
                    label: string;
                    link: string;
                    iconPosition: 'left' | 'right';
                    eventName?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'textLinkButton';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'gridCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridCardsWithIcons';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-01'
          | 'bg-neutral-07';
        title: string;
        subtitle?: string | null;
        image: string | Media;
        items?:
          | {
              icon?: (string | null) | Media;
              title: string;
              body: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoGridTwoColumnsWithTitleItem';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridTwoColumnsWithTitle';
      }
    | {
        backgroundColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04';
        bottomLineSeperator?: boolean | null;
        title: string;
        icon: string | Media;
        cardTag: string;
        cardButtonLabel: string;
        contentType: 'articles' | 'guides' | 'videos' | 'templates' | 'events' | 'reports';
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithHeading';
      }
    | {
        /**
         * Maximum values - 3
         */
        resources: (
          | {
              relationTo: 'article';
              value: string | Article;
            }
          | {
              relationTo: 'template';
              value: string | Template;
            }
          | {
              relationTo: 'video';
              value: string | Video;
            }
          | {
              relationTo: 'guideMainInfo';
              value: string | GuideMainInfo;
            }
        )[];
        buttonLabel: string;
        guideLabel: string;
        articleLabel: string;
        videoLabel: string;
        templateLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithResources';
      }
    | {
        /**
         * Defaults to bg-neutral-07
         */
        backgroundColour?: ('bg-neutral-07' | 'bg-yellow-04') | null;
        link?: string | null;
        linkLabel?: string | null;
        slides?:
          | {
              cover: string | Media;
              title: string;
              subtitle: string;
              label?: string | null;
              link?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSlider';
      }
    | {
        slides: {
          title: string;
          subtitle: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'timelineSlide';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSliderTimeline';
      }
    | {
        title?: string | null;
        subtitle?: string | null;
        tabs: {
          title: string;
          description: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithDescriptions';
      }
    | {
        heading?: string | null;
        headingImage?: (string | null) | Media;
        body?: string | null;
        backgroundColour?: ('bg-neutral-07' | 'bg-green-01') | null;
        /**
         * If this field is empty then individual tab images will be used, otherwise this image will be shown persistently.
         */
        tabImage?: (string | null) | Media;
        tabs: {
          icon?: (string | null) | Media;
          title: string;
          image: string | Media;
          link?: string | null;
          mobileButton: string;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoIconTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithIcon';
      }
    | {
        title: string;
        subtitle: string;
        leftGraphic: string | Media;
        topGraphic: string | Media;
        bottomGraphic: string | Media;
        mainPhoto: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithCollage';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * The value must be equal with \"Text link with icon\" component field
         */
        contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        imagePosition?: ('right' | 'left') | null;
        cover?: (string | null) | Media;
        customComponent?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
            )[]
          | null;
        textLink?:
          | {
              label: string;
              link: string;
              iconPosition: 'left' | 'right';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkButton';
            }[]
          | null;
        items?:
          | {
              text: string;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoText';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithImage';
      }
    | {
        featureBlock: {
          image: string | Media;
          mobileImage?: (string | null) | Media;
          title: string;
          subtitle: string;
          textLink: {
            label: string;
            link: string;
            iconPosition: 'left' | 'right';
            eventName?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textLinkButton';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoCard';
        }[];
        blocks?:
          | {
              image: string | Media;
              mobileImage?: (string | null) | Media;
              title: string;
              subtitle: string;
              textLink: {
                label: string;
                link: string;
                iconPosition: 'left' | 'right';
                eventName?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'textLinkButton';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoWithCards';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'insightComparison';
      }
    | {
        title: string;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        mobileImage?: (string | null) | Media;
        bannerBody?: string | null;
        bannerLabel?: string | null;
        bannerLink?: string | null;
        /**
         * Lottie JSON file or image
         */
        leftPart: string | Media;
        /**
         * Lottie JSON file or image
         */
        rightPart: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mainHero';
      }
    | {
        /**
         * Generic embeds have more priority than YouTube embeds and video fields.
         */
        embed?: string | null;
        /**
         * YouTube embeds have more priority than video fields.
         */
        embedLink?: string | null;
        assetDesktop?: (string | null) | Media;
        assetMobile?: (string | null) | Media;
        size: 'parallax' | '780' | '885';
        id?: string | null;
        blockName?: string | null;
        blockType: 'media';
      }
    | {
        /**
         * You need to select 3 images.
         */
        firstLine: (string | Media)[];
        /**
         * You need to select 5 images.
         */
        secondLine: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCollage';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        plans: {
          name: string;
          monthlyPrice: string;
          monthlyPriceLabel?: string | null;
          annualyPrice: string;
          annualyPriceLabel?: string | null;
          button: (
            | {
                label: string;
                /**
                 * When you add value for \"Scroll To\" field, link will be overwrite.
                 */
                link: string;
                buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                /**
                 * If the field is filled, an analytics event will sent to the segment.
                 */
                eventName?: string | null;
                /**
                 * You need add the same value which you add to block field \"Ref to scroll to\".
                 */
                scrollTo?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'button';
              }
            | {
                button: {
                  relationTo: 'globalButton';
                  value: string | GlobalButton;
                };
                id?: string | null;
                blockName?: string | null;
                blockType: 'globalButtons';
              }
          )[];
          caption?: string | null;
          body: string;
          items: {
            title: string;
            list: {
              label: string;
              additionalLabel?: string | null;
              tooltipImage?: (string | null) | Media;
              tooltipBody?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingPlanListItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingPlanItem';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingPlan';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTable';
      }
    | {
        mobileDropdownTitle: string;
        featureRow: {
          title: string;
          comparisonFeatures: {
            title: string;
            monthlyPrice: string;
            annualyPrice: string;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            caption?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'comparisonFeatureRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingСomparisonFeaturesRow';
        }[];
        bodyTables: {
          title: string;
          tableRows: {
            cells: (
              | {
                  label: string;
                  tooltipBody?: string | null;
                  tooltipImage?: (string | null) | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableTextCell';
                }
              | {
                  availableIcon?: boolean | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableIconCell';
                }
            )[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingBodyTableRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingBodyTable';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTableComparison';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        backgroundColor?: ('bg-green-02' | 'bg-pink-01') | null;
        reviews: {
          text: string;
          tag?: string | null;
          representative: {
            relationTo: 'testimonial-reviewer';
            value: string | TestimonialReviewer;
          };
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'review';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'reviews';
      }
    | {
        text: string;
        tag?: string | null;
        backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
        imagePosition: 'left' | 'right';
        representative: {
          relationTo: 'testimonial-reviewer';
          value: string | TestimonialReviewer;
        };
        image: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'singleReview';
      }
    | {
        title: string;
        subtitle?: string | null;
        backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
        mobileCenter?: boolean | null;
        version: 'center' | 'left' | 'left-margin';
        /**
         * You need add the same value which you add to button field
         */
        refForScrollTo?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textBlock';
      }
    | {
        links?:
          | {
              label: string;
              hoverColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04' | 'bg-red-04';
              link?: string | null;
              /**
               * If the field is empty, the button will be navigated by a provided link in another field.  The page will scroll to \"Info Grid With Heading\" with the same content type by button press.
               */
              contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkWithIcon';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textLinks';
      }
    | {
        activeLabel: string;
        inactiveLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'toggle';
      }
  )[];
  followAndIndex?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricingUseCase".
 */
export interface PricingUseCase {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        review?: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        } | null;
        stats?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'appreciation';
      }
    | {
        title: string;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-06'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient';
        /**
         * If you add a file here, the banner will use a second variant of design.
         */
        mainImage?: (string | null) | Media;
        button: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        leftTopImage?: (string | null) | Media;
        rightTopImage?: (string | null) | Media;
        leftBottomImage?: (string | null) | Media;
        rightBottomImage?: (string | null) | Media;
        leftTopImageMobile?: (string | null) | Media;
        rightTopImageMobile?: (string | null) | Media;
        leftBottomImageMobile?: (string | null) | Media;
        rightBottomImageMobile?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'banner';
      }
    | {
        body?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        logos?: (string | Media)[] | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        embed?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'bookDemoMain';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        /**
         * Minimal images count - 8 Maximum images count - 18
         */
        images: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypesCards';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        content?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingCapture';
                }
            )[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'customComponent';
      }
    | {
        demos?:
          | {
              title: string;
              body: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              /**
               * Can be Rive animations or images
               */
              media: string | Media;
              /**
               * Duration the demo will be shown in milliseconds, not providing a value will assume an infinite duration
               */
              duration?: number | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'demo';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'demos';
      }
    | {
        embedded: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embedded';
      }
    | {
        address: string;
        icon?: (string | null) | Media;
        /**
         * Property width and height for embeded element must be set to 100%
         */
        embed: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embededMap';
      }
    | {
        featureBlocks?:
          | {
              title?: string | null;
              heading?: string | null;
              body?: string | null;
              integrations?:
                | {
                    icon?: (string | null) | Media;
                    link?: string | null;
                    /**
                     * Only used for screen readers
                     */
                    linkText?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'featureIntegration';
                  }[]
                | null;
              link?: string | null;
              linkText?: string | null;
              image?: (string | null) | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'featureBlock';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'features';
      }
    | {
        id: string | null;
        buttonLabel: string;
        alignment: 'row' | 'column';
        backgroundColor: 'bg-neutral-06' | 'transparent';
        padding: '0' | '40';
        header?:
          | (
              | {
                  title: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formTitle';
                }
              | {
                  subtitle: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formSubtitle';
                }
            )[]
          | null;
        formElements: (
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              autoComplete?: boolean | null;
              type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formInput';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              options: {
                name: string;
                value: string;
                id?: string | null;
                blockName?: string | null;
                blockType: 'dropdownOption';
              }[];
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formDropdown';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              label: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formCheckbox';
            }
        )[];
        blockName?: string | null;
        blockType: 'form';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        infoAccordion: {
          relationTo: 'globalInfoAccordions';
          value: string | GlobalInfoAccordion;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoAccordion';
      }
    | {
        infoCarousel: {
          relationTo: 'globalInfoCarousels';
          value: string | GlobalInfoCarousel;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoCarousel';
      }
    | {
        infoGrid: {
          relationTo: 'globalInfoGrids';
          value: string | GlobalInfoGrid;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoGrid';
      }
    | {
        infoTab: {
          relationTo: 'globalInfoTabs';
          value: string | GlobalInfoTab;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTabVariant';
      }
    | {
        infoTextWithImage: {
          relationTo: 'globalInfoTextWithImages';
          value: string | GlobalInfoTextWithImage;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTextWithImage';
      }
    | {
        infoWithCards: {
          relationTo: 'globalInfoWithCards';
          value: string | GlobalInfoWithCard;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoWithCardsSection';
      }
    | {
        reviewBlock: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalReviewsSection';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        iconButton?:
          | {
              label: string;
              link: string;
              icon: string | Media;
              iconPosition: 'right' | 'left';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'iconButton';
            }[]
          | null;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04';
        media?: (string | null) | Media;
        customComponent?:
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingHero';
            }[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpages';
      }
    | {
        title: string;
        body: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04'
          | 'bg-neutral-07';
        topLeftImage?: (string | null) | Media;
        topLeftImageSize?: ('small' | 'large') | null;
        bottomRightImage?: (string | null) | Media;
        topRightMobileImage?: (string | null) | Media;
        bottomRightMobileImage?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpagesCentered';
      }
    | {
        richTitle?:
          | (
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
            )[]
          | null;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'homeHero';
      }
    | {
        items: {
          title: string;
          description: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'accordionItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoAccordion';
      }
    | {
        slides?:
          | {
              image: string | Media;
              backgroundColor:
                | 'bg-yellow-03'
                | 'bg-neutral-06'
                | 'bg-blue-04'
                | 'bg-pink-04'
                | 'bg-purple-04'
                | 'bg-red-05'
                | 'bg-pink-05'
                | 'bg-green-04'
                | 'bg-green-02'
                | 'bg-neutral-07';
              title: string;
              subtitle: string;
              items?:
                | {
                    title: string;
                    icon: string | Media;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'infoCarouselSlideItem';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCarouselSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoCarousel';
      }
    | {
        items: {
          title: string;
          subtitle?: string | null;
          icon: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoGridItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGrid';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-07';
        cards?:
          | {
              title: string;
              body: string;
              fullWidthImage?: boolean | null;
              image: string | Media;
              textLink?:
                | {
                    label: string;
                    link: string;
                    iconPosition: 'left' | 'right';
                    eventName?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'textLinkButton';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'gridCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridCardsWithIcons';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-01'
          | 'bg-neutral-07';
        title: string;
        subtitle?: string | null;
        image: string | Media;
        items?:
          | {
              icon?: (string | null) | Media;
              title: string;
              body: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoGridTwoColumnsWithTitleItem';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridTwoColumnsWithTitle';
      }
    | {
        backgroundColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04';
        bottomLineSeperator?: boolean | null;
        title: string;
        icon: string | Media;
        cardTag: string;
        cardButtonLabel: string;
        contentType: 'articles' | 'guides' | 'videos' | 'templates' | 'events' | 'reports';
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithHeading';
      }
    | {
        /**
         * Maximum values - 3
         */
        resources: (
          | {
              relationTo: 'article';
              value: string | Article;
            }
          | {
              relationTo: 'template';
              value: string | Template;
            }
          | {
              relationTo: 'video';
              value: string | Video;
            }
          | {
              relationTo: 'guideMainInfo';
              value: string | GuideMainInfo;
            }
        )[];
        buttonLabel: string;
        guideLabel: string;
        articleLabel: string;
        videoLabel: string;
        templateLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithResources';
      }
    | {
        /**
         * Defaults to bg-neutral-07
         */
        backgroundColour?: ('bg-neutral-07' | 'bg-yellow-04') | null;
        link?: string | null;
        linkLabel?: string | null;
        slides?:
          | {
              cover: string | Media;
              title: string;
              subtitle: string;
              label?: string | null;
              link?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSlider';
      }
    | {
        slides: {
          title: string;
          subtitle: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'timelineSlide';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSliderTimeline';
      }
    | {
        title?: string | null;
        subtitle?: string | null;
        tabs: {
          title: string;
          description: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithDescriptions';
      }
    | {
        heading?: string | null;
        headingImage?: (string | null) | Media;
        body?: string | null;
        backgroundColour?: ('bg-neutral-07' | 'bg-green-01') | null;
        /**
         * If this field is empty then individual tab images will be used, otherwise this image will be shown persistently.
         */
        tabImage?: (string | null) | Media;
        tabs: {
          icon?: (string | null) | Media;
          title: string;
          image: string | Media;
          link?: string | null;
          mobileButton: string;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoIconTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithIcon';
      }
    | {
        title: string;
        subtitle: string;
        leftGraphic: string | Media;
        topGraphic: string | Media;
        bottomGraphic: string | Media;
        mainPhoto: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithCollage';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * The value must be equal with \"Text link with icon\" component field
         */
        contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        imagePosition?: ('right' | 'left') | null;
        cover?: (string | null) | Media;
        customComponent?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
            )[]
          | null;
        textLink?:
          | {
              label: string;
              link: string;
              iconPosition: 'left' | 'right';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkButton';
            }[]
          | null;
        items?:
          | {
              text: string;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoText';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithImage';
      }
    | {
        featureBlock: {
          image: string | Media;
          mobileImage?: (string | null) | Media;
          title: string;
          subtitle: string;
          textLink: {
            label: string;
            link: string;
            iconPosition: 'left' | 'right';
            eventName?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textLinkButton';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoCard';
        }[];
        blocks?:
          | {
              image: string | Media;
              mobileImage?: (string | null) | Media;
              title: string;
              subtitle: string;
              textLink: {
                label: string;
                link: string;
                iconPosition: 'left' | 'right';
                eventName?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'textLinkButton';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoWithCards';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'insightComparison';
      }
    | {
        title: string;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        mobileImage?: (string | null) | Media;
        bannerBody?: string | null;
        bannerLabel?: string | null;
        bannerLink?: string | null;
        /**
         * Lottie JSON file or image
         */
        leftPart: string | Media;
        /**
         * Lottie JSON file or image
         */
        rightPart: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mainHero';
      }
    | {
        /**
         * Generic embeds have more priority than YouTube embeds and video fields.
         */
        embed?: string | null;
        /**
         * YouTube embeds have more priority than video fields.
         */
        embedLink?: string | null;
        assetDesktop?: (string | null) | Media;
        assetMobile?: (string | null) | Media;
        size: 'parallax' | '780' | '885';
        id?: string | null;
        blockName?: string | null;
        blockType: 'media';
      }
    | {
        /**
         * You need to select 3 images.
         */
        firstLine: (string | Media)[];
        /**
         * You need to select 5 images.
         */
        secondLine: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCollage';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        plans: {
          name: string;
          monthlyPrice: string;
          monthlyPriceLabel?: string | null;
          annualyPrice: string;
          annualyPriceLabel?: string | null;
          button: (
            | {
                label: string;
                /**
                 * When you add value for \"Scroll To\" field, link will be overwrite.
                 */
                link: string;
                buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                /**
                 * If the field is filled, an analytics event will sent to the segment.
                 */
                eventName?: string | null;
                /**
                 * You need add the same value which you add to block field \"Ref to scroll to\".
                 */
                scrollTo?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'button';
              }
            | {
                button: {
                  relationTo: 'globalButton';
                  value: string | GlobalButton;
                };
                id?: string | null;
                blockName?: string | null;
                blockType: 'globalButtons';
              }
          )[];
          caption?: string | null;
          body: string;
          items: {
            title: string;
            list: {
              label: string;
              additionalLabel?: string | null;
              tooltipImage?: (string | null) | Media;
              tooltipBody?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingPlanListItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingPlanItem';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingPlan';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTable';
      }
    | {
        mobileDropdownTitle: string;
        featureRow: {
          title: string;
          comparisonFeatures: {
            title: string;
            monthlyPrice: string;
            annualyPrice: string;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            caption?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'comparisonFeatureRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingСomparisonFeaturesRow';
        }[];
        bodyTables: {
          title: string;
          tableRows: {
            cells: (
              | {
                  label: string;
                  tooltipBody?: string | null;
                  tooltipImage?: (string | null) | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableTextCell';
                }
              | {
                  availableIcon?: boolean | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableIconCell';
                }
            )[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingBodyTableRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingBodyTable';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTableComparison';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        backgroundColor?: ('bg-green-02' | 'bg-pink-01') | null;
        reviews: {
          text: string;
          tag?: string | null;
          representative: {
            relationTo: 'testimonial-reviewer';
            value: string | TestimonialReviewer;
          };
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'review';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'reviews';
      }
    | {
        text: string;
        tag?: string | null;
        backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
        imagePosition: 'left' | 'right';
        representative: {
          relationTo: 'testimonial-reviewer';
          value: string | TestimonialReviewer;
        };
        image: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'singleReview';
      }
    | {
        title: string;
        subtitle?: string | null;
        backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
        mobileCenter?: boolean | null;
        version: 'center' | 'left' | 'left-margin';
        /**
         * You need add the same value which you add to button field
         */
        refForScrollTo?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textBlock';
      }
    | {
        links?:
          | {
              label: string;
              hoverColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04' | 'bg-red-04';
              link?: string | null;
              /**
               * If the field is empty, the button will be navigated by a provided link in another field.  The page will scroll to \"Info Grid With Heading\" with the same content type by button press.
               */
              contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkWithIcon';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textLinks';
      }
    | {
        activeLabel: string;
        inactiveLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'toggle';
      }
  )[];
  followAndIndex?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "report".
 */
export interface Report {
  id: string;
  lastUpdated?: string | null;
  followAndIndex?: boolean | null;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  author: {
    relationTo: 'author';
    value: string | Author;
  };
  heroArticle: {
    title: string;
    subtitle: string;
    cover: string | Media;
    showGlobalTags?: boolean | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'heroArticle';
  }[];
  blocks?:
    | (
        | {
            sideBar: {
              shareTitle: string;
              /**
               * The kind of content being shared (eg. article)
               */
              contentType?: ('article' | 'video' | 'guide' | 'template' | 'integration' | 'event') | null;
              copiedTitle: string;
              shareLinkedin?: boolean | null;
              shareFacebook?: boolean | null;
              shareTwitter?: boolean | null;
              shareEmail?: boolean | null;
              copyLink?: boolean | null;
              embed?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'tableOfContent';
            }[];
            body: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'articleBody';
          }
        | {
            title: string;
            subtitle?: string | null;
            backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
            mobileCenter?: boolean | null;
            version: 'center' | 'left' | 'left-margin';
            /**
             * You need add the same value which you add to button field
             */
            refForScrollTo?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            buttonLabel: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'suggestedArticles';
          }
        | {
            clientLogotypes: {
              relationTo: 'clientLogotype';
              value: string | ClientLogotype;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalClientLogotypes';
          }
        | {
            cta: {
              relationTo: 'callToAction';
              value: string | CallToAction;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalCTA';
          }
        | {
            marginTop: '80' | '40' | '0';
            backgroundColor:
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient'
              | 'blue-pink-gradient';
            /**
             * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
             */
            isContained?: boolean | null;
            title?: string | null;
            /**
             * If this field is populated then anything in title will be overridden.
             */
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleUsersSegment';
                    }
                )[]
              | null;
            subtitle?: string | null;
            caption?: string | null;
            buttons: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            leftAsset?: (string | null) | Media;
            rightAsset?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * You must select only image or Lottie JSON files.
             */
            asset: string | Media;
            /**
             * The field uses for html element and must be without white spaces.
             */
            formId?: string | null;
            form?:
              | (
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      autoComplete?: boolean | null;
                      type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formInput';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      options: {
                        name: string;
                        value: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'dropdownOption';
                      }[];
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formDropdown';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      label: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formCheckbox';
                    }
                )[]
              | null;
            label: string;
            /**
             * The link overwriten with Form Input and Form ID fields
             */
            link?: string | null;
            buttonPosition?: ('bottom' | 'right') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaForm';
          }
        | {
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            /**
             * The field control top and bottom margin for mobile version.
             */
            mobileMargin: '0' | '20';
            /**
             * If you fill this field, button on click will be scroll to element, where you will add the same value.
             */
            scrollToElement?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaSmall';
          }
        | {
            subtitle?: string | null;
            /**
             * Defaults to left
             */
            subtitleAlignment?: ('left' | 'centre') | null;
            logos: (string | Media)[];
            bottomDivider: '0' | '50';
            mobileBottomDivider?: boolean | null;
            marginTop: '80' | '0';
            backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
            id?: string | null;
            blockName?: string | null;
            blockType: 'clientLogotypes';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solution".
 */
export interface Solution {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks?:
    | (
        | {
            review?: {
              relationTo: 'globalReviews';
              value: string | GlobalReview;
            } | null;
            stats?:
              | {
                  [k: string]: unknown;
                }
              | unknown[]
              | string
              | number
              | boolean
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'appreciation';
          }
        | {
            title: string;
            subtitle: string;
            backgroundColor:
              | 'bg-neutral-06'
              | 'bg-green-02'
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient';
            /**
             * If you add a file here, the banner will use a second variant of design.
             */
            mainImage?: (string | null) | Media;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            leftTopImage?: (string | null) | Media;
            rightTopImage?: (string | null) | Media;
            leftBottomImage?: (string | null) | Media;
            rightBottomImage?: (string | null) | Media;
            leftTopImageMobile?: (string | null) | Media;
            rightTopImageMobile?: (string | null) | Media;
            leftBottomImageMobile?: (string | null) | Media;
            rightBottomImageMobile?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'banner';
          }
        | {
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            logos?: (string | Media)[] | null;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            embed?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'bookDemoMain';
          }
        | {
            subtitle?: string | null;
            /**
             * Defaults to left
             */
            subtitleAlignment?: ('left' | 'centre') | null;
            logos: (string | Media)[];
            bottomDivider: '0' | '50';
            mobileBottomDivider?: boolean | null;
            marginTop: '80' | '0';
            backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
            id?: string | null;
            blockName?: string | null;
            blockType: 'clientLogotypes';
          }
        | {
            backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
            /**
             * Minimal images count - 8 Maximum images count - 18
             */
            images: (string | Media)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'clientLogotypesCards';
          }
        | {
            marginTop: '80' | '40' | '0';
            backgroundColor:
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient'
              | 'blue-pink-gradient';
            /**
             * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
             */
            isContained?: boolean | null;
            title?: string | null;
            /**
             * If this field is populated then anything in title will be overridden.
             */
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleUsersSegment';
                    }
                )[]
              | null;
            subtitle?: string | null;
            caption?: string | null;
            buttons: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            leftAsset?: (string | null) | Media;
            rightAsset?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * You must select only image or Lottie JSON files.
             */
            asset: string | Media;
            /**
             * The field uses for html element and must be without white spaces.
             */
            formId?: string | null;
            form?:
              | (
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      autoComplete?: boolean | null;
                      type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formInput';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      options: {
                        name: string;
                        value: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'dropdownOption';
                      }[];
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formDropdown';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      label: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formCheckbox';
                    }
                )[]
              | null;
            label: string;
            /**
             * The link overwriten with Form Input and Form ID fields
             */
            link?: string | null;
            buttonPosition?: ('bottom' | 'right') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaForm';
          }
        | {
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            /**
             * The field control top and bottom margin for mobile version.
             */
            mobileMargin: '0' | '20';
            /**
             * If you fill this field, button on click will be scroll to element, where you will add the same value.
             */
            scrollToElement?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaSmall';
          }
        | {
            backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
            content?:
              | (
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingHero';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingPanel';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingSites';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingTasks';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingCapture';
                    }
                )[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'customComponent';
          }
        | {
            demos?:
              | {
                  title: string;
                  body: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  /**
                   * Can be Rive animations or images
                   */
                  media: string | Media;
                  /**
                   * Duration the demo will be shown in milliseconds, not providing a value will assume an infinite duration
                   */
                  duration?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'demo';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'demos';
          }
        | {
            embedded: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'embedded';
          }
        | {
            address: string;
            icon?: (string | null) | Media;
            /**
             * Property width and height for embeded element must be set to 100%
             */
            embed: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'embededMap';
          }
        | {
            featureBlocks?:
              | {
                  title?: string | null;
                  heading?: string | null;
                  body?: string | null;
                  integrations?:
                    | {
                        icon?: (string | null) | Media;
                        link?: string | null;
                        /**
                         * Only used for screen readers
                         */
                        linkText?: string | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'featureIntegration';
                      }[]
                    | null;
                  link?: string | null;
                  linkText?: string | null;
                  image?: (string | null) | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'featureBlock';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'features';
          }
        | {
            id: string | null;
            buttonLabel: string;
            alignment: 'row' | 'column';
            backgroundColor: 'bg-neutral-06' | 'transparent';
            padding: '0' | '40';
            header?:
              | (
                  | {
                      title: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formTitle';
                    }
                  | {
                      subtitle: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formSubtitle';
                    }
                )[]
              | null;
            formElements: (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[];
            blockName?: string | null;
            blockType: 'form';
          }
        | {
            clientLogotypes: {
              relationTo: 'clientLogotype';
              value: string | ClientLogotype;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalClientLogotypes';
          }
        | {
            cta: {
              relationTo: 'callToAction';
              value: string | CallToAction;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalCTA';
          }
        | {
            infoAccordion: {
              relationTo: 'globalInfoAccordions';
              value: string | GlobalInfoAccordion;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoAccordion';
          }
        | {
            infoCarousel: {
              relationTo: 'globalInfoCarousels';
              value: string | GlobalInfoCarousel;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoCarousel';
          }
        | {
            infoGrid: {
              relationTo: 'globalInfoGrids';
              value: string | GlobalInfoGrid;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoGrid';
          }
        | {
            infoTab: {
              relationTo: 'globalInfoTabs';
              value: string | GlobalInfoTab;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoTabVariant';
          }
        | {
            infoTextWithImage: {
              relationTo: 'globalInfoTextWithImages';
              value: string | GlobalInfoTextWithImage;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoTextWithImage';
          }
        | {
            infoWithCards: {
              relationTo: 'globalInfoWithCards';
              value: string | GlobalInfoWithCard;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalInfoWithCardsSection';
          }
        | {
            reviewBlock: {
              relationTo: 'globalReviews';
              value: string | GlobalReview;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalReviewsSection';
          }
        | {
            title: string;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            iconButton?:
              | {
                  label: string;
                  link: string;
                  icon: string | Media;
                  iconPosition: 'right' | 'left';
                  eventName?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'iconButton';
                }[]
              | null;
            subtitle: string;
            backgroundColor:
              | 'bg-neutral-05'
              | 'bg-yellow-03'
              | 'bg-purple-04'
              | 'bg-yellow-04'
              | 'bg-green-04'
              | 'bg-neutral-06'
              | 'bg-blue-04'
              | 'bg-red-05'
              | 'bg-green-02'
              | 'bg-pink-05'
              | 'bg-pink-04';
            media?: (string | null) | Media;
            customComponent?:
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }[]
              | null;
            caption?: string | null;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heroSubpages';
          }
        | {
            title: string;
            body: string;
            backgroundColor:
              | 'bg-neutral-05'
              | 'bg-yellow-03'
              | 'bg-purple-04'
              | 'bg-yellow-04'
              | 'bg-green-04'
              | 'bg-neutral-06'
              | 'bg-blue-04'
              | 'bg-red-05'
              | 'bg-green-02'
              | 'bg-pink-05'
              | 'bg-pink-04'
              | 'bg-neutral-07';
            topLeftImage?: (string | null) | Media;
            topLeftImageSize?: ('small' | 'large') | null;
            bottomRightImage?: (string | null) | Media;
            topRightMobileImage?: (string | null) | Media;
            bottomRightMobileImage?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'heroSubpagesCentered';
          }
        | {
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                )[]
              | null;
            subtitle: string;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            caption?: string | null;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'homeHero';
          }
        | {
            items: {
              title: string;
              description: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'accordionItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoAccordion';
          }
        | {
            slides?:
              | {
                  image: string | Media;
                  backgroundColor:
                    | 'bg-yellow-03'
                    | 'bg-neutral-06'
                    | 'bg-blue-04'
                    | 'bg-pink-04'
                    | 'bg-purple-04'
                    | 'bg-red-05'
                    | 'bg-pink-05'
                    | 'bg-green-04'
                    | 'bg-green-02'
                    | 'bg-neutral-07';
                  title: string;
                  subtitle: string;
                  items?:
                    | {
                        title: string;
                        icon: string | Media;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'infoCarouselSlideItem';
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoCarouselSlide';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoCarousel';
          }
        | {
            items: {
              title: string;
              subtitle?: string | null;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoGridItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGrid';
          }
        | {
            backgroundColor:
              | 'bg-green-04'
              | 'bg-green-02'
              | 'bg-yellow-04'
              | 'bg-blue-04'
              | 'bg-neutral-06'
              | 'bg-neutral-07';
            cards?:
              | {
                  title: string;
                  body: string;
                  fullWidthImage?: boolean | null;
                  image: string | Media;
                  textLink?:
                    | {
                        label: string;
                        link: string;
                        iconPosition: 'left' | 'right';
                        eventName?: string | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'textLinkButton';
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'gridCard';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGridCardsWithIcons';
          }
        | {
            backgroundColor:
              | 'bg-green-04'
              | 'bg-green-02'
              | 'bg-yellow-04'
              | 'bg-blue-04'
              | 'bg-neutral-06'
              | 'bg-neutral-01'
              | 'bg-neutral-07';
            title: string;
            subtitle?: string | null;
            image: string | Media;
            items?:
              | {
                  icon?: (string | null) | Media;
                  title: string;
                  body: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoGridTwoColumnsWithTitleItem';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGridTwoColumnsWithTitle';
          }
        | {
            backgroundColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04';
            bottomLineSeperator?: boolean | null;
            title: string;
            icon: string | Media;
            cardTag: string;
            cardButtonLabel: string;
            contentType: 'articles' | 'guides' | 'videos' | 'templates' | 'events' | 'reports';
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGridWithHeading';
          }
        | {
            /**
             * Maximum values - 3
             */
            resources: (
              | {
                  relationTo: 'article';
                  value: string | Article;
                }
              | {
                  relationTo: 'template';
                  value: string | Template;
                }
              | {
                  relationTo: 'video';
                  value: string | Video;
                }
              | {
                  relationTo: 'guideMainInfo';
                  value: string | GuideMainInfo;
                }
            )[];
            buttonLabel: string;
            guideLabel: string;
            articleLabel: string;
            videoLabel: string;
            templateLabel: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoGridWithResources';
          }
        | {
            /**
             * Defaults to bg-neutral-07
             */
            backgroundColour?: ('bg-neutral-07' | 'bg-yellow-04') | null;
            link?: string | null;
            linkLabel?: string | null;
            slides?:
              | {
                  cover: string | Media;
                  title: string;
                  subtitle: string;
                  label?: string | null;
                  link?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoSlide';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoSlider';
          }
        | {
            slides: {
              title: string;
              subtitle: string;
              image: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'timelineSlide';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoSliderTimeline';
          }
        | {
            title?: string | null;
            subtitle?: string | null;
            tabs: {
              title: string;
              description: string;
              image: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoTab';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoTabsWithDescriptions';
          }
        | {
            heading?: string | null;
            headingImage?: (string | null) | Media;
            body?: string | null;
            backgroundColour?: ('bg-neutral-07' | 'bg-green-01') | null;
            /**
             * If this field is empty then individual tab images will be used, otherwise this image will be shown persistently.
             */
            tabImage?: (string | null) | Media;
            tabs: {
              icon?: (string | null) | Media;
              title: string;
              image: string | Media;
              link?: string | null;
              mobileButton: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoIconTab';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoTabsWithIcon';
          }
        | {
            title: string;
            subtitle: string;
            leftGraphic: string | Media;
            topGraphic: string | Media;
            bottomGraphic: string | Media;
            mainPhoto: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoTextWithCollage';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * The value must be equal with \"Text link with icon\" component field
             */
            contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
            backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
            imagePosition?: ('right' | 'left') | null;
            cover?: (string | null) | Media;
            customComponent?:
              | (
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingHero';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingPanel';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingSites';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'liveWebsiteTestingTasks';
                    }
                )[]
              | null;
            textLink?:
              | {
                  label: string;
                  link: string;
                  iconPosition: 'left' | 'right';
                  eventName?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'textLinkButton';
                }[]
              | null;
            items?:
              | {
                  text: string;
                  icon: string | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoText';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoTextWithImage';
          }
        | {
            featureBlock: {
              image: string | Media;
              mobileImage?: (string | null) | Media;
              title: string;
              subtitle: string;
              textLink: {
                label: string;
                link: string;
                iconPosition: 'left' | 'right';
                eventName?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'textLinkButton';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCard';
            }[];
            blocks?:
              | {
                  image: string | Media;
                  mobileImage?: (string | null) | Media;
                  title: string;
                  subtitle: string;
                  textLink: {
                    label: string;
                    link: string;
                    iconPosition: 'left' | 'right';
                    eventName?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'textLinkButton';
                  }[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'infoCard';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'infoWithCards';
          }
        | {
            id?: string | null;
            blockName?: string | null;
            blockType: 'insightComparison';
          }
        | {
            title: string;
            subtitle: string;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            caption?: string | null;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            mobileImage?: (string | null) | Media;
            bannerBody?: string | null;
            bannerLabel?: string | null;
            bannerLink?: string | null;
            /**
             * Lottie JSON file or image
             */
            leftPart: string | Media;
            /**
             * Lottie JSON file or image
             */
            rightPart: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mainHero';
          }
        | {
            /**
             * Generic embeds have more priority than YouTube embeds and video fields.
             */
            embed?: string | null;
            /**
             * YouTube embeds have more priority than video fields.
             */
            embedLink?: string | null;
            assetDesktop?: (string | null) | Media;
            assetMobile?: (string | null) | Media;
            size: 'parallax' | '780' | '885';
            id?: string | null;
            blockName?: string | null;
            blockType: 'media';
          }
        | {
            /**
             * You need to select 3 images.
             */
            firstLine: (string | Media)[];
            /**
             * You need to select 5 images.
             */
            secondLine: (string | Media)[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaCollage';
          }
        | {
            nextPageButtonTitle: string;
            previousPageButtonTitle: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'pagination';
          }
        | {
            plans: {
              name: string;
              monthlyPrice: string;
              monthlyPriceLabel?: string | null;
              annualyPrice: string;
              annualyPriceLabel?: string | null;
              button: (
                | {
                    label: string;
                    /**
                     * When you add value for \"Scroll To\" field, link will be overwrite.
                     */
                    link: string;
                    buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                    backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                    /**
                     * If the field is filled, an analytics event will sent to the segment.
                     */
                    eventName?: string | null;
                    /**
                     * You need add the same value which you add to block field \"Ref to scroll to\".
                     */
                    scrollTo?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'button';
                  }
                | {
                    button: {
                      relationTo: 'globalButton';
                      value: string | GlobalButton;
                    };
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'globalButtons';
                  }
              )[];
              caption?: string | null;
              body: string;
              items: {
                title: string;
                list: {
                  label: string;
                  additionalLabel?: string | null;
                  tooltipImage?: (string | null) | Media;
                  tooltipBody?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingPlanListItem';
                }[];
                id?: string | null;
                blockName?: string | null;
                blockType: 'pricingPlanItem';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingPlan';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingTable';
          }
        | {
            mobileDropdownTitle: string;
            featureRow: {
              title: string;
              comparisonFeatures: {
                title: string;
                monthlyPrice: string;
                annualyPrice: string;
                button: (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[];
                caption?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'comparisonFeatureRow';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingСomparisonFeaturesRow';
            }[];
            bodyTables: {
              title: string;
              tableRows: {
                cells: (
                  | {
                      label: string;
                      tooltipBody?: string | null;
                      tooltipImage?: (string | null) | Media;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'pricingBodyTableTextCell';
                    }
                  | {
                      availableIcon?: boolean | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'pricingBodyTableIconCell';
                    }
                )[];
                id?: string | null;
                blockName?: string | null;
                blockType: 'pricingBodyTableRow';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingBodyTable';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingTableComparison';
          }
        | {
            title: string;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            subtitle: string;
            buttonSubtext?: string | null;
            backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
            media: string | Media;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            isCentered?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'resourcesHero';
          }
        | {
            backgroundColor?: ('bg-green-02' | 'bg-pink-01') | null;
            reviews: {
              text: string;
              tag?: string | null;
              representative: {
                relationTo: 'testimonial-reviewer';
                value: string | TestimonialReviewer;
              };
              image: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'review';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'reviews';
          }
        | {
            text: string;
            tag?: string | null;
            backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
            imagePosition: 'left' | 'right';
            representative: {
              relationTo: 'testimonial-reviewer';
              value: string | TestimonialReviewer;
            };
            image: string | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'singleReview';
          }
        | {
            title: string;
            subtitle?: string | null;
            backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
            mobileCenter?: boolean | null;
            version: 'center' | 'left' | 'left-margin';
            /**
             * You need add the same value which you add to button field
             */
            refForScrollTo?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textBlock';
          }
        | {
            links?:
              | {
                  label: string;
                  hoverColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04' | 'bg-red-04';
                  link?: string | null;
                  /**
                   * If the field is empty, the button will be navigated by a provided link in another field.  The page will scroll to \"Info Grid With Heading\" with the same content type by button press.
                   */
                  contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
                  icon: string | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'textLinkWithIcon';
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textLinks';
          }
        | {
            activeLabel: string;
            inactiveLabel: string;
            id?: string | null;
            blockName?: string | null;
            blockType: 'toggle';
          }
      )[]
    | null;
  followAndIndex?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page1 {
  id: string;
  title: string;
  slug: string;
  /**
   * Optionally assign this page to a release. Releases allow you to schedule the publishing of pages in bulk
   */
  release?: {
    docs?: (string | Release)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  content?:
    | (
        | {
            heading?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'Heading';
          }
        | {
            richText?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'Rich Text';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "releases".
 */
export interface Release {
  id: string;
  name: string;
  /**
   * Once selected, all published content will be deployed on the given date and time. Leave empty if you don't want this release to deploy automatically.
   */
  releaseDateAndTime?: string | null;
  releaseDateAndTime_tz?: SupportedTimezones;
  /**
   * Select documents to publish before this release. If you just want to release already published content, leave this empty. An error will occur if you try to add a document to multiple releases.
   */
  documentsToPublish?: (string | Page1)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: string | Page1;
    } | null;
    url?: string | null;
  };
  type: '307' | '308';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'article';
        value: string | Article;
      } | null)
    | ({
        relationTo: 'articleCategory';
        value: string | ArticleCategory;
      } | null)
    | ({
        relationTo: 'author';
        value: string | Author;
      } | null)
    | ({
        relationTo: 'callToAction';
        value: string | CallToAction;
      } | null)
    | ({
        relationTo: 'clientLogotype';
        value: string | ClientLogotype;
      } | null)
    | ({
        relationTo: 'compare';
        value: string | Compare;
      } | null)
    | ({
        relationTo: 'customer';
        value: string | Customer;
      } | null)
    | ({
        relationTo: 'customerCompanySize';
        value: string | CustomerCompanySize;
      } | null)
    | ({
        relationTo: 'customerIndustry';
        value: string | CustomerIndustry;
      } | null)
    | ({
        relationTo: 'customerRegion';
        value: string | CustomerRegion;
      } | null)
    | ({
        relationTo: 'customersMainPage';
        value: string | CustomersMainPage;
      } | null)
    | ({
        relationTo: 'customerUseCase';
        value: string | CustomerUseCase;
      } | null)
    | ({
        relationTo: 'event';
        value: string | Event;
      } | null)
    | ({
        relationTo: 'feature';
        value: string | Feature;
      } | null)
    | ({
        relationTo: 'footer';
        value: string | Footer;
      } | null)
    | ({
        relationTo: 'globalButton';
        value: string | GlobalButton;
      } | null)
    | ({
        relationTo: 'globalInfoAccordions';
        value: string | GlobalInfoAccordion;
      } | null)
    | ({
        relationTo: 'globalInfoCarousels';
        value: string | GlobalInfoCarousel;
      } | null)
    | ({
        relationTo: 'globalInfoGrids';
        value: string | GlobalInfoGrid;
      } | null)
    | ({
        relationTo: 'globalInfoTabs';
        value: string | GlobalInfoTab;
      } | null)
    | ({
        relationTo: 'globalInfoTextWithImages';
        value: string | GlobalInfoTextWithImage;
      } | null)
    | ({
        relationTo: 'globalInfoWithCards';
        value: string | GlobalInfoWithCard;
      } | null)
    | ({
        relationTo: 'globalReviews';
        value: string | GlobalReview;
      } | null)
    | ({
        relationTo: 'globalTag';
        value: string | GlobalTag;
      } | null)
    | ({
        relationTo: 'guide';
        value: string | Guide;
      } | null)
    | ({
        relationTo: 'guideMainInfo';
        value: string | GuideMainInfo;
      } | null)
    | ({
        relationTo: 'integration';
        value: string | Integration;
      } | null)
    | ({
        relationTo: 'integrationMainInfo';
        value: string | IntegrationMainInfo;
      } | null)
    | ({
        relationTo: 'landingPage';
        value: string | LandingPage;
      } | null)
    | ({
        relationTo: 'legalPage';
        value: string | LegalPage;
      } | null)
    | ({
        relationTo: 'navigationBar';
        value: string | NavigationBar;
      } | null)
    | ({
        relationTo: 'navigationBarMenuItems';
        value: string | NavigationBarMenuItem;
      } | null)
    | ({
        relationTo: 'page';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'pricingUseCase';
        value: string | PricingUseCase;
      } | null)
    | ({
        relationTo: 'rating';
        value: string | Rating;
      } | null)
    | ({
        relationTo: 'report';
        value: string | Report;
      } | null)
    | ({
        relationTo: 'solution';
        value: string | Solution;
      } | null)
    | ({
        relationTo: 'template';
        value: string | Template;
      } | null)
    | ({
        relationTo: 'templateIndustry';
        value: string | TemplateIndustry;
      } | null)
    | ({
        relationTo: 'templateMethodology';
        value: string | TemplateMethodology;
      } | null)
    | ({
        relationTo: 'templateTeam';
        value: string | TemplateTeam;
      } | null)
    | ({
        relationTo: 'templateUseCase';
        value: string | TemplateUseCase;
      } | null)
    | ({
        relationTo: 'testimonial-reviewer';
        value: string | TestimonialReviewer;
      } | null)
    | ({
        relationTo: 'video';
        value: string | Video;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page1;
      } | null)
    | ({
        relationTo: 'releases';
        value: string | Release;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "article_select".
 */
export interface ArticleSelect<T extends boolean = true> {
  lastUpdated?: T;
  followAndIndex?: T;
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  globalTag?: T;
  category?: T;
  author?: T;
  heroArticle?:
    | T
    | {
        heroArticle?:
          | T
          | {
              title?: T;
              subtitle?: T;
              cover?: T;
              showGlobalTags?: T;
              id?: T;
              blockName?: T;
            };
      };
  blocks?:
    | T
    | {
        articleBody?:
          | T
          | {
              sideBar?:
                | T
                | {
                    tableOfContent?:
                      | T
                      | {
                          shareTitle?: T;
                          contentType?: T;
                          copiedTitle?: T;
                          shareLinkedin?: T;
                          shareFacebook?: T;
                          shareTwitter?: T;
                          shareEmail?: T;
                          copyLink?: T;
                          embed?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              body?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        suggestedArticles?:
          | T
          | {
              buttonLabel?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        authorBioBox?:
          | T
          | {
              author?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "articleCategory_select".
 */
export interface ArticleCategorySelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "author_select".
 */
export interface AuthorSelect<T extends boolean = true> {
  name?: T;
  position?: T;
  image?: T;
  description?: T;
  socialMediaLinks?:
    | T
    | {
        socialMedia?:
          | T
          | {
              icon?: T;
              link?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "callToAction_select".
 */
export interface CallToActionSelect<T extends boolean = true> {
  block?:
    | T
    | {
        inlineCTA?:
          | T
          | {
              title?: T;
              body?: T;
              backgroundColor?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              image?: T;
              id?: T;
              blockName?: T;
            };
        templateCTA?:
          | T
          | {
              title?: T;
              authorBody?: T;
              shareTitle?: T;
              copiedTitle?: T;
              shareFacebook?: T;
              shareTwitter?: T;
              shareLinkedin?: T;
              shareEmail?: T;
              copyLink?: T;
              teamMember?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        templatesCTA?:
          | T
          | {
              title?: T;
              image?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mainImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              leftTopImage?: T;
              rightTopImage?: T;
              leftBottomImage?: T;
              rightBottomImage?: T;
              leftTopImageMobile?: T;
              rightTopImageMobile?: T;
              leftBottomImageMobile?: T;
              rightBottomImageMobile?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "clientLogotype_select".
 */
export interface ClientLogotypeSelect<T extends boolean = true> {
  clientLogotypes?:
    | T
    | {
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypesCards?:
          | T
          | {
              backgroundColor?: T;
              images?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "compare_select".
 */
export interface CompareSelect<T extends boolean = true> {
  followAndIndex?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  title?: T;
  description?: T;
  heroTitle?: T;
  heroBody?: T;
  buttons?:
    | T
    | {
        button?:
          | T
          | {
              label?: T;
              link?: T;
              buttonType?: T;
              backgroundColor?: T;
              eventName?: T;
              scrollTo?: T;
              id?: T;
              blockName?: T;
            };
        globalButtons?:
          | T
          | {
              button?: T;
              id?: T;
              blockName?: T;
            };
      };
  cover?: T;
  body?: T;
  blocks?:
    | T
    | {
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        richText?:
          | T
          | {
              content?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer_select".
 */
export interface CustomerSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  customerTitle?: T;
  customerBody?: T;
  cover?: T;
  navigationBar?: T;
  footer?: T;
  globalTag?: T;
  useCase?: T;
  companySize?: T;
  customerRegion?: T;
  customerIndustry?: T;
  summaryTitle?: T;
  summaryBody?: T;
  body?: T;
  blocks?:
    | T
    | {
        appreciation?:
          | T
          | {
              review?: T;
              stats?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mainImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              leftTopImage?: T;
              rightTopImage?: T;
              leftBottomImage?: T;
              rightBottomImage?: T;
              leftTopImageMobile?: T;
              rightTopImageMobile?: T;
              leftBottomImageMobile?: T;
              rightBottomImageMobile?: T;
              id?: T;
              blockName?: T;
            };
        bookDemoMain?:
          | T
          | {
              body?: T;
              logos?: T;
              rating?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypesCards?:
          | T
          | {
              backgroundColor?: T;
              images?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        customComponent?:
          | T
          | {
              backgroundColor?: T;
              content?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingCapture?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        demos?:
          | T
          | {
              demos?:
                | T
                | {
                    demo?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          media?: T;
                          duration?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        embedded?:
          | T
          | {
              embedded?: T;
              id?: T;
              blockName?: T;
            };
        embededMap?:
          | T
          | {
              address?: T;
              icon?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        features?:
          | T
          | {
              featureBlocks?:
                | T
                | {
                    featureBlock?:
                      | T
                      | {
                          title?: T;
                          heading?: T;
                          body?: T;
                          integrations?:
                            | T
                            | {
                                featureIntegration?:
                                  | T
                                  | {
                                      icon?: T;
                                      link?: T;
                                      linkText?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          link?: T;
                          linkText?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              id?: T;
              buttonLabel?: T;
              alignment?: T;
              backgroundColor?: T;
              padding?: T;
              header?:
                | T
                | {
                    formTitle?:
                      | T
                      | {
                          title?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formSubtitle?:
                      | T
                      | {
                          subtitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              formElements?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoAccordion?:
          | T
          | {
              infoAccordion?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoCarousel?:
          | T
          | {
              infoCarousel?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoGrid?:
          | T
          | {
              infoGrid?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTabVariant?:
          | T
          | {
              infoTab?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTextWithImage?:
          | T
          | {
              infoTextWithImage?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoWithCardsSection?:
          | T
          | {
              infoWithCards?: T;
              id?: T;
              blockName?: T;
            };
        globalReviewsSection?:
          | T
          | {
              reviewBlock?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpagesCentered?:
          | T
          | {
              title?: T;
              body?: T;
              backgroundColor?: T;
              topLeftImage?: T;
              topLeftImageSize?: T;
              bottomRightImage?: T;
              topRightMobileImage?: T;
              bottomRightMobileImage?: T;
              id?: T;
              blockName?: T;
            };
        homeHero?:
          | T
          | {
              richTitle?:
                | T
                | {
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoCarousel?:
          | T
          | {
              slides?:
                | T
                | {
                    infoCarouselSlide?:
                      | T
                      | {
                          image?: T;
                          backgroundColor?: T;
                          title?: T;
                          subtitle?: T;
                          items?:
                            | T
                            | {
                                infoCarouselSlideItem?:
                                  | T
                                  | {
                                      title?: T;
                                      icon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGrid?:
          | T
          | {
              items?:
                | T
                | {
                    infoGridItem?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridCardsWithIcons?:
          | T
          | {
              backgroundColor?: T;
              cards?:
                | T
                | {
                    gridCard?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          fullWidthImage?: T;
                          image?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridTwoColumnsWithTitle?:
          | T
          | {
              backgroundColor?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              items?:
                | T
                | {
                    infoGridTwoColumnsWithTitleItem?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridWithHeading?:
          | T
          | {
              backgroundColor?: T;
              bottomLineSeperator?: T;
              title?: T;
              icon?: T;
              cardTag?: T;
              cardButtonLabel?: T;
              contentType?: T;
              id?: T;
              blockName?: T;
            };
        infoGridWithResources?:
          | T
          | {
              resources?: T;
              buttonLabel?: T;
              guideLabel?: T;
              articleLabel?: T;
              videoLabel?: T;
              templateLabel?: T;
              id?: T;
              blockName?: T;
            };
        infoSlider?:
          | T
          | {
              backgroundColour?: T;
              link?: T;
              linkLabel?: T;
              slides?:
                | T
                | {
                    infoSlide?:
                      | T
                      | {
                          cover?: T;
                          title?: T;
                          subtitle?: T;
                          label?: T;
                          link?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoSliderTimeline?:
          | T
          | {
              slides?:
                | T
                | {
                    timelineSlide?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithDescriptions?:
          | T
          | {
              title?: T;
              subtitle?: T;
              tabs?:
                | T
                | {
                    infoTab?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithIcon?:
          | T
          | {
              heading?: T;
              headingImage?: T;
              body?: T;
              backgroundColour?: T;
              tabImage?: T;
              tabs?:
                | T
                | {
                    infoIconTab?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          image?: T;
                          link?: T;
                          mobileButton?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTextWithCollage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              leftGraphic?: T;
              topGraphic?: T;
              bottomGraphic?: T;
              mainPhoto?: T;
              id?: T;
              blockName?: T;
            };
        infoTextWithImage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              contentType?: T;
              backgroundColor?: T;
              imagePosition?: T;
              cover?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              textLink?:
                | T
                | {
                    textLinkButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    infoText?:
                      | T
                      | {
                          text?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoWithCards?:
          | T
          | {
              featureBlock?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              blocks?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        insightComparison?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        mainHero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              mobileImage?: T;
              bannerBody?: T;
              bannerLabel?: T;
              bannerLink?: T;
              leftPart?: T;
              rightPart?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              embed?: T;
              embedLink?: T;
              assetDesktop?: T;
              assetMobile?: T;
              size?: T;
              id?: T;
              blockName?: T;
            };
        mediaCollage?:
          | T
          | {
              firstLine?: T;
              secondLine?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        pricingTable?:
          | T
          | {
              plans?:
                | T
                | {
                    pricingPlan?:
                      | T
                      | {
                          name?: T;
                          monthlyPrice?: T;
                          monthlyPriceLabel?: T;
                          annualyPrice?: T;
                          annualyPriceLabel?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          caption?: T;
                          body?: T;
                          items?:
                            | T
                            | {
                                pricingPlanItem?:
                                  | T
                                  | {
                                      title?: T;
                                      list?:
                                        | T
                                        | {
                                            pricingPlanListItem?:
                                              | T
                                              | {
                                                  label?: T;
                                                  additionalLabel?: T;
                                                  tooltipImage?: T;
                                                  tooltipBody?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricingTableComparison?:
          | T
          | {
              mobileDropdownTitle?: T;
              featureRow?:
                | T
                | {
                    pricingСomparisonFeaturesRow?:
                      | T
                      | {
                          title?: T;
                          comparisonFeatures?:
                            | T
                            | {
                                comparisonFeatureRow?:
                                  | T
                                  | {
                                      title?: T;
                                      monthlyPrice?: T;
                                      annualyPrice?: T;
                                      button?:
                                        | T
                                        | {
                                            button?:
                                              | T
                                              | {
                                                  label?: T;
                                                  link?: T;
                                                  buttonType?: T;
                                                  backgroundColor?: T;
                                                  eventName?: T;
                                                  scrollTo?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            globalButtons?:
                                              | T
                                              | {
                                                  button?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      caption?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              bodyTables?:
                | T
                | {
                    pricingBodyTable?:
                      | T
                      | {
                          title?: T;
                          tableRows?:
                            | T
                            | {
                                pricingBodyTableRow?:
                                  | T
                                  | {
                                      cells?:
                                        | T
                                        | {
                                            pricingBodyTableTextCell?:
                                              | T
                                              | {
                                                  label?: T;
                                                  tooltipBody?: T;
                                                  tooltipImage?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            pricingBodyTableIconCell?:
                                              | T
                                              | {
                                                  availableIcon?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        reviews?:
          | T
          | {
              backgroundColor?: T;
              reviews?:
                | T
                | {
                    review?:
                      | T
                      | {
                          text?: T;
                          tag?: T;
                          representative?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        textLinks?:
          | T
          | {
              links?:
                | T
                | {
                    textLinkWithIcon?:
                      | T
                      | {
                          label?: T;
                          hoverColor?: T;
                          link?: T;
                          contentType?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        toggle?:
          | T
          | {
              activeLabel?: T;
              inactiveLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerCompanySize_select".
 */
export interface CustomerCompanySizeSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerIndustry_select".
 */
export interface CustomerIndustrySelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerRegion_select".
 */
export interface CustomerRegionSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customersMainPage_select".
 */
export interface CustomersMainPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        appreciation?:
          | T
          | {
              review?: T;
              stats?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mainImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              leftTopImage?: T;
              rightTopImage?: T;
              leftBottomImage?: T;
              rightBottomImage?: T;
              leftTopImageMobile?: T;
              rightTopImageMobile?: T;
              leftBottomImageMobile?: T;
              rightBottomImageMobile?: T;
              id?: T;
              blockName?: T;
            };
        bookDemoMain?:
          | T
          | {
              body?: T;
              logos?: T;
              rating?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypesCards?:
          | T
          | {
              backgroundColor?: T;
              images?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        customComponent?:
          | T
          | {
              backgroundColor?: T;
              content?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingCapture?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        demos?:
          | T
          | {
              demos?:
                | T
                | {
                    demo?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          media?: T;
                          duration?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        embedded?:
          | T
          | {
              embedded?: T;
              id?: T;
              blockName?: T;
            };
        embededMap?:
          | T
          | {
              address?: T;
              icon?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        features?:
          | T
          | {
              featureBlocks?:
                | T
                | {
                    featureBlock?:
                      | T
                      | {
                          title?: T;
                          heading?: T;
                          body?: T;
                          integrations?:
                            | T
                            | {
                                featureIntegration?:
                                  | T
                                  | {
                                      icon?: T;
                                      link?: T;
                                      linkText?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          link?: T;
                          linkText?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              id?: T;
              buttonLabel?: T;
              alignment?: T;
              backgroundColor?: T;
              padding?: T;
              header?:
                | T
                | {
                    formTitle?:
                      | T
                      | {
                          title?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formSubtitle?:
                      | T
                      | {
                          subtitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              formElements?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoAccordion?:
          | T
          | {
              infoAccordion?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoCarousel?:
          | T
          | {
              infoCarousel?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoGrid?:
          | T
          | {
              infoGrid?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTabVariant?:
          | T
          | {
              infoTab?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTextWithImage?:
          | T
          | {
              infoTextWithImage?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoWithCardsSection?:
          | T
          | {
              infoWithCards?: T;
              id?: T;
              blockName?: T;
            };
        globalReviewsSection?:
          | T
          | {
              reviewBlock?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpagesCentered?:
          | T
          | {
              title?: T;
              body?: T;
              backgroundColor?: T;
              topLeftImage?: T;
              topLeftImageSize?: T;
              bottomRightImage?: T;
              topRightMobileImage?: T;
              bottomRightMobileImage?: T;
              id?: T;
              blockName?: T;
            };
        homeHero?:
          | T
          | {
              richTitle?:
                | T
                | {
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoCarousel?:
          | T
          | {
              slides?:
                | T
                | {
                    infoCarouselSlide?:
                      | T
                      | {
                          image?: T;
                          backgroundColor?: T;
                          title?: T;
                          subtitle?: T;
                          items?:
                            | T
                            | {
                                infoCarouselSlideItem?:
                                  | T
                                  | {
                                      title?: T;
                                      icon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGrid?:
          | T
          | {
              items?:
                | T
                | {
                    infoGridItem?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridCardsWithIcons?:
          | T
          | {
              backgroundColor?: T;
              cards?:
                | T
                | {
                    gridCard?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          fullWidthImage?: T;
                          image?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridTwoColumnsWithTitle?:
          | T
          | {
              backgroundColor?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              items?:
                | T
                | {
                    infoGridTwoColumnsWithTitleItem?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridWithHeading?:
          | T
          | {
              backgroundColor?: T;
              bottomLineSeperator?: T;
              title?: T;
              icon?: T;
              cardTag?: T;
              cardButtonLabel?: T;
              contentType?: T;
              id?: T;
              blockName?: T;
            };
        infoGridWithResources?:
          | T
          | {
              resources?: T;
              buttonLabel?: T;
              guideLabel?: T;
              articleLabel?: T;
              videoLabel?: T;
              templateLabel?: T;
              id?: T;
              blockName?: T;
            };
        infoSlider?:
          | T
          | {
              backgroundColour?: T;
              link?: T;
              linkLabel?: T;
              slides?:
                | T
                | {
                    infoSlide?:
                      | T
                      | {
                          cover?: T;
                          title?: T;
                          subtitle?: T;
                          label?: T;
                          link?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoSliderTimeline?:
          | T
          | {
              slides?:
                | T
                | {
                    timelineSlide?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithDescriptions?:
          | T
          | {
              title?: T;
              subtitle?: T;
              tabs?:
                | T
                | {
                    infoTab?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithIcon?:
          | T
          | {
              heading?: T;
              headingImage?: T;
              body?: T;
              backgroundColour?: T;
              tabImage?: T;
              tabs?:
                | T
                | {
                    infoIconTab?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          image?: T;
                          link?: T;
                          mobileButton?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTextWithCollage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              leftGraphic?: T;
              topGraphic?: T;
              bottomGraphic?: T;
              mainPhoto?: T;
              id?: T;
              blockName?: T;
            };
        infoTextWithImage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              contentType?: T;
              backgroundColor?: T;
              imagePosition?: T;
              cover?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              textLink?:
                | T
                | {
                    textLinkButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    infoText?:
                      | T
                      | {
                          text?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoWithCards?:
          | T
          | {
              featureBlock?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              blocks?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        insightComparison?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        mainHero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              mobileImage?: T;
              bannerBody?: T;
              bannerLabel?: T;
              bannerLink?: T;
              leftPart?: T;
              rightPart?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              embed?: T;
              embedLink?: T;
              assetDesktop?: T;
              assetMobile?: T;
              size?: T;
              id?: T;
              blockName?: T;
            };
        mediaCollage?:
          | T
          | {
              firstLine?: T;
              secondLine?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        pricingTable?:
          | T
          | {
              plans?:
                | T
                | {
                    pricingPlan?:
                      | T
                      | {
                          name?: T;
                          monthlyPrice?: T;
                          monthlyPriceLabel?: T;
                          annualyPrice?: T;
                          annualyPriceLabel?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          caption?: T;
                          body?: T;
                          items?:
                            | T
                            | {
                                pricingPlanItem?:
                                  | T
                                  | {
                                      title?: T;
                                      list?:
                                        | T
                                        | {
                                            pricingPlanListItem?:
                                              | T
                                              | {
                                                  label?: T;
                                                  additionalLabel?: T;
                                                  tooltipImage?: T;
                                                  tooltipBody?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricingTableComparison?:
          | T
          | {
              mobileDropdownTitle?: T;
              featureRow?:
                | T
                | {
                    pricingСomparisonFeaturesRow?:
                      | T
                      | {
                          title?: T;
                          comparisonFeatures?:
                            | T
                            | {
                                comparisonFeatureRow?:
                                  | T
                                  | {
                                      title?: T;
                                      monthlyPrice?: T;
                                      annualyPrice?: T;
                                      button?:
                                        | T
                                        | {
                                            button?:
                                              | T
                                              | {
                                                  label?: T;
                                                  link?: T;
                                                  buttonType?: T;
                                                  backgroundColor?: T;
                                                  eventName?: T;
                                                  scrollTo?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            globalButtons?:
                                              | T
                                              | {
                                                  button?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      caption?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              bodyTables?:
                | T
                | {
                    pricingBodyTable?:
                      | T
                      | {
                          title?: T;
                          tableRows?:
                            | T
                            | {
                                pricingBodyTableRow?:
                                  | T
                                  | {
                                      cells?:
                                        | T
                                        | {
                                            pricingBodyTableTextCell?:
                                              | T
                                              | {
                                                  label?: T;
                                                  tooltipBody?: T;
                                                  tooltipImage?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            pricingBodyTableIconCell?:
                                              | T
                                              | {
                                                  availableIcon?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        reviews?:
          | T
          | {
              backgroundColor?: T;
              reviews?:
                | T
                | {
                    review?:
                      | T
                      | {
                          text?: T;
                          tag?: T;
                          representative?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        textLinks?:
          | T
          | {
              links?:
                | T
                | {
                    textLinkWithIcon?:
                      | T
                      | {
                          label?: T;
                          hoverColor?: T;
                          link?: T;
                          contentType?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        toggle?:
          | T
          | {
              activeLabel?: T;
              inactiveLabel?: T;
              id?: T;
              blockName?: T;
            };
        customersBody?:
          | T
          | {
              buttonLabel?: T;
              emptyListTitle?: T;
              id?: T;
              blockName?: T;
            };
        customersSection?:
          | T
          | {
              sidebar?:
                | T
                | {
                    customersSideBar?:
                      | T
                      | {
                          showRegionFilter?: T;
                          sortTitle?: T;
                          useCaseTitle?: T;
                          companySizeTitle?: T;
                          regionTitle?: T;
                          industryTitle?: T;
                          clearButtonLabel?: T;
                          mobileFilterButtonLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rightBlocks?:
                | T
                | {
                    customersBody?:
                      | T
                      | {
                          buttonLabel?: T;
                          emptyListTitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                    pagination?:
                      | T
                      | {
                          nextPageButtonTitle?: T;
                          previousPageButtonTitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        customersSideBar?:
          | T
          | {
              showRegionFilter?: T;
              sortTitle?: T;
              useCaseTitle?: T;
              companySizeTitle?: T;
              regionTitle?: T;
              industryTitle?: T;
              clearButtonLabel?: T;
              mobileFilterButtonLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customerUseCase_select".
 */
export interface CustomerUseCaseSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event_select".
 */
export interface EventSelect<T extends boolean = true> {
  followAndIndex?: T;
  title?: T;
  description?: T;
  date?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  cover?: T;
  globalTag?: T;
  livestormEmbed?: T;
  blocks?:
    | T
    | {
        articleBody?:
          | T
          | {
              sideBar?:
                | T
                | {
                    tableOfContent?:
                      | T
                      | {
                          shareTitle?: T;
                          contentType?: T;
                          copiedTitle?: T;
                          shareLinkedin?: T;
                          shareFacebook?: T;
                          shareTwitter?: T;
                          shareEmail?: T;
                          copyLink?: T;
                          embed?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              body?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        suggestedArticles?:
          | T
          | {
              buttonLabel?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "feature_select".
 */
export interface FeatureSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        appreciation?:
          | T
          | {
              review?: T;
              stats?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mainImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              leftTopImage?: T;
              rightTopImage?: T;
              leftBottomImage?: T;
              rightBottomImage?: T;
              leftTopImageMobile?: T;
              rightTopImageMobile?: T;
              leftBottomImageMobile?: T;
              rightBottomImageMobile?: T;
              id?: T;
              blockName?: T;
            };
        bookDemoMain?:
          | T
          | {
              body?: T;
              logos?: T;
              rating?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypesCards?:
          | T
          | {
              backgroundColor?: T;
              images?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        customComponent?:
          | T
          | {
              backgroundColor?: T;
              content?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingCapture?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        demos?:
          | T
          | {
              demos?:
                | T
                | {
                    demo?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          media?: T;
                          duration?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        embedded?:
          | T
          | {
              embedded?: T;
              id?: T;
              blockName?: T;
            };
        embededMap?:
          | T
          | {
              address?: T;
              icon?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        features?:
          | T
          | {
              featureBlocks?:
                | T
                | {
                    featureBlock?:
                      | T
                      | {
                          title?: T;
                          heading?: T;
                          body?: T;
                          integrations?:
                            | T
                            | {
                                featureIntegration?:
                                  | T
                                  | {
                                      icon?: T;
                                      link?: T;
                                      linkText?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          link?: T;
                          linkText?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              id?: T;
              buttonLabel?: T;
              alignment?: T;
              backgroundColor?: T;
              padding?: T;
              header?:
                | T
                | {
                    formTitle?:
                      | T
                      | {
                          title?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formSubtitle?:
                      | T
                      | {
                          subtitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              formElements?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoAccordion?:
          | T
          | {
              infoAccordion?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoCarousel?:
          | T
          | {
              infoCarousel?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoGrid?:
          | T
          | {
              infoGrid?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTabVariant?:
          | T
          | {
              infoTab?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTextWithImage?:
          | T
          | {
              infoTextWithImage?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoWithCardsSection?:
          | T
          | {
              infoWithCards?: T;
              id?: T;
              blockName?: T;
            };
        globalReviewsSection?:
          | T
          | {
              reviewBlock?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpagesCentered?:
          | T
          | {
              title?: T;
              body?: T;
              backgroundColor?: T;
              topLeftImage?: T;
              topLeftImageSize?: T;
              bottomRightImage?: T;
              topRightMobileImage?: T;
              bottomRightMobileImage?: T;
              id?: T;
              blockName?: T;
            };
        homeHero?:
          | T
          | {
              richTitle?:
                | T
                | {
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoCarousel?:
          | T
          | {
              slides?:
                | T
                | {
                    infoCarouselSlide?:
                      | T
                      | {
                          image?: T;
                          backgroundColor?: T;
                          title?: T;
                          subtitle?: T;
                          items?:
                            | T
                            | {
                                infoCarouselSlideItem?:
                                  | T
                                  | {
                                      title?: T;
                                      icon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGrid?:
          | T
          | {
              items?:
                | T
                | {
                    infoGridItem?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridCardsWithIcons?:
          | T
          | {
              backgroundColor?: T;
              cards?:
                | T
                | {
                    gridCard?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          fullWidthImage?: T;
                          image?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridTwoColumnsWithTitle?:
          | T
          | {
              backgroundColor?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              items?:
                | T
                | {
                    infoGridTwoColumnsWithTitleItem?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridWithHeading?:
          | T
          | {
              backgroundColor?: T;
              bottomLineSeperator?: T;
              title?: T;
              icon?: T;
              cardTag?: T;
              cardButtonLabel?: T;
              contentType?: T;
              id?: T;
              blockName?: T;
            };
        infoGridWithResources?:
          | T
          | {
              resources?: T;
              buttonLabel?: T;
              guideLabel?: T;
              articleLabel?: T;
              videoLabel?: T;
              templateLabel?: T;
              id?: T;
              blockName?: T;
            };
        infoSlider?:
          | T
          | {
              backgroundColour?: T;
              link?: T;
              linkLabel?: T;
              slides?:
                | T
                | {
                    infoSlide?:
                      | T
                      | {
                          cover?: T;
                          title?: T;
                          subtitle?: T;
                          label?: T;
                          link?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoSliderTimeline?:
          | T
          | {
              slides?:
                | T
                | {
                    timelineSlide?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithDescriptions?:
          | T
          | {
              title?: T;
              subtitle?: T;
              tabs?:
                | T
                | {
                    infoTab?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithIcon?:
          | T
          | {
              heading?: T;
              headingImage?: T;
              body?: T;
              backgroundColour?: T;
              tabImage?: T;
              tabs?:
                | T
                | {
                    infoIconTab?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          image?: T;
                          link?: T;
                          mobileButton?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTextWithCollage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              leftGraphic?: T;
              topGraphic?: T;
              bottomGraphic?: T;
              mainPhoto?: T;
              id?: T;
              blockName?: T;
            };
        infoTextWithImage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              contentType?: T;
              backgroundColor?: T;
              imagePosition?: T;
              cover?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              textLink?:
                | T
                | {
                    textLinkButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    infoText?:
                      | T
                      | {
                          text?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoWithCards?:
          | T
          | {
              featureBlock?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              blocks?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        insightComparison?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        mainHero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              mobileImage?: T;
              bannerBody?: T;
              bannerLabel?: T;
              bannerLink?: T;
              leftPart?: T;
              rightPart?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              embed?: T;
              embedLink?: T;
              assetDesktop?: T;
              assetMobile?: T;
              size?: T;
              id?: T;
              blockName?: T;
            };
        mediaCollage?:
          | T
          | {
              firstLine?: T;
              secondLine?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        pricingTable?:
          | T
          | {
              plans?:
                | T
                | {
                    pricingPlan?:
                      | T
                      | {
                          name?: T;
                          monthlyPrice?: T;
                          monthlyPriceLabel?: T;
                          annualyPrice?: T;
                          annualyPriceLabel?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          caption?: T;
                          body?: T;
                          items?:
                            | T
                            | {
                                pricingPlanItem?:
                                  | T
                                  | {
                                      title?: T;
                                      list?:
                                        | T
                                        | {
                                            pricingPlanListItem?:
                                              | T
                                              | {
                                                  label?: T;
                                                  additionalLabel?: T;
                                                  tooltipImage?: T;
                                                  tooltipBody?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricingTableComparison?:
          | T
          | {
              mobileDropdownTitle?: T;
              featureRow?:
                | T
                | {
                    pricingСomparisonFeaturesRow?:
                      | T
                      | {
                          title?: T;
                          comparisonFeatures?:
                            | T
                            | {
                                comparisonFeatureRow?:
                                  | T
                                  | {
                                      title?: T;
                                      monthlyPrice?: T;
                                      annualyPrice?: T;
                                      button?:
                                        | T
                                        | {
                                            button?:
                                              | T
                                              | {
                                                  label?: T;
                                                  link?: T;
                                                  buttonType?: T;
                                                  backgroundColor?: T;
                                                  eventName?: T;
                                                  scrollTo?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            globalButtons?:
                                              | T
                                              | {
                                                  button?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      caption?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              bodyTables?:
                | T
                | {
                    pricingBodyTable?:
                      | T
                      | {
                          title?: T;
                          tableRows?:
                            | T
                            | {
                                pricingBodyTableRow?:
                                  | T
                                  | {
                                      cells?:
                                        | T
                                        | {
                                            pricingBodyTableTextCell?:
                                              | T
                                              | {
                                                  label?: T;
                                                  tooltipBody?: T;
                                                  tooltipImage?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            pricingBodyTableIconCell?:
                                              | T
                                              | {
                                                  availableIcon?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        reviews?:
          | T
          | {
              backgroundColor?: T;
              reviews?:
                | T
                | {
                    review?:
                      | T
                      | {
                          text?: T;
                          tag?: T;
                          representative?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        textLinks?:
          | T
          | {
              links?:
                | T
                | {
                    textLinkWithIcon?:
                      | T
                      | {
                          label?: T;
                          hoverColor?: T;
                          link?: T;
                          contentType?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        toggle?:
          | T
          | {
              activeLabel?: T;
              inactiveLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  logotype?: T;
  groups?:
    | T
    | {
        footerLinksGroup?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    footerItem?:
                      | T
                      | {
                          body?: T;
                          tagLabel?: T;
                          link?: T;
                          id?: T;
                          blockName?: T;
                        };
                    footerTitleItem?:
                      | T
                      | {
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  socialMedia?:
    | T
    | {
        socialMedia?:
          | T
          | {
              icon?: T;
              link?: T;
              id?: T;
              blockName?: T;
            };
      };
  imagePlaceholders?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalButton_select".
 */
export interface GlobalButtonSelect<T extends boolean = true> {
  button?:
    | T
    | {
        button?:
          | T
          | {
              label?: T;
              link?: T;
              buttonType?: T;
              backgroundColor?: T;
              eventName?: T;
              scrollTo?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoAccordions_select".
 */
export interface GlobalInfoAccordionsSelect<T extends boolean = true> {
  infoAccordion?:
    | T
    | {
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoCarousels_select".
 */
export interface GlobalInfoCarouselsSelect<T extends boolean = true> {
  infoCarousel?:
    | T
    | {
        infoCarousel?:
          | T
          | {
              slides?:
                | T
                | {
                    infoCarouselSlide?:
                      | T
                      | {
                          image?: T;
                          backgroundColor?: T;
                          title?: T;
                          subtitle?: T;
                          items?:
                            | T
                            | {
                                infoCarouselSlideItem?:
                                  | T
                                  | {
                                      title?: T;
                                      icon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoGrids_select".
 */
export interface GlobalInfoGridsSelect<T extends boolean = true> {
  grid?:
    | T
    | {
        infoGrid?:
          | T
          | {
              items?:
                | T
                | {
                    infoGridItem?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridCardsWithIcons?:
          | T
          | {
              backgroundColor?: T;
              cards?:
                | T
                | {
                    gridCard?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          fullWidthImage?: T;
                          image?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridTwoColumnsWithTitle?:
          | T
          | {
              backgroundColor?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              items?:
                | T
                | {
                    infoGridTwoColumnsWithTitleItem?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoTabs_select".
 */
export interface GlobalInfoTabsSelect<T extends boolean = true> {
  infoTabs?:
    | T
    | {
        infoTabsWithDescriptions?:
          | T
          | {
              title?: T;
              subtitle?: T;
              tabs?:
                | T
                | {
                    infoTab?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithIcon?:
          | T
          | {
              heading?: T;
              headingImage?: T;
              body?: T;
              backgroundColour?: T;
              tabImage?: T;
              tabs?:
                | T
                | {
                    infoIconTab?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          image?: T;
                          link?: T;
                          mobileButton?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoTextWithImages_select".
 */
export interface GlobalInfoTextWithImagesSelect<T extends boolean = true> {
  infoTextWithImage?:
    | T
    | {
        infoTextWithImage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              contentType?: T;
              backgroundColor?: T;
              imagePosition?: T;
              cover?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              textLink?:
                | T
                | {
                    textLinkButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    infoText?:
                      | T
                      | {
                          text?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalInfoWithCards_select".
 */
export interface GlobalInfoWithCardsSelect<T extends boolean = true> {
  infoWithCards?:
    | T
    | {
        infoWithCards?:
          | T
          | {
              featureBlock?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              blocks?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalReviews_select".
 */
export interface GlobalReviewsSelect<T extends boolean = true> {
  reviewBlock?:
    | T
    | {
        reviews?:
          | T
          | {
              backgroundColor?: T;
              reviews?:
                | T
                | {
                    review?:
                      | T
                      | {
                          text?: T;
                          tag?: T;
                          representative?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "globalTag_select".
 */
export interface GlobalTagSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  globalTagTitle?: T;
  blocks?:
    | T
    | {
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalTagBody?:
          | T
          | {
              videoLabel?: T;
              videoButtonLabel?: T;
              guideLabel?: T;
              guideButtonLabel?: T;
              articleLabel?: T;
              articleBodyLabel?: T;
              templateLabel?: T;
              templateButtonLabel?: T;
              customersLabel?: T;
              customerStoryButtonLabel?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guide_select".
 */
export interface GuideSelect<T extends boolean = true> {
  followAndIndex?: T;
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  position?: T;
  heroTitle?: T;
  heroBody?: T;
  body?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guideMainInfo_select".
 */
export interface GuideMainInfoSelect<T extends boolean = true> {
  title?: T;
  body?: T;
  linkToFirstPage?: T;
  buttonText?: T;
  shareTitle?: T;
  copiedTitle?: T;
  previousPageTitle?: T;
  nextPageTitle?: T;
  finishTitle?: T;
  completeTitle?: T;
  globalTag?: T;
  cover?: T;
  shareLinkedin?: T;
  shareFacebook?: T;
  shareEmail?: T;
  shareTwitter?: T;
  copyLink?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integration_select".
 */
export interface IntegrationSelect<T extends boolean = true> {
  followAndIndex?: T;
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  heroTitle?: T;
  heroBody?: T;
  button?:
    | T
    | {
        button?:
          | T
          | {
              label?: T;
              link?: T;
              buttonType?: T;
              backgroundColor?: T;
              eventName?: T;
              scrollTo?: T;
              id?: T;
              blockName?: T;
            };
        globalButtons?:
          | T
          | {
              button?: T;
              id?: T;
              blockName?: T;
            };
      };
  buttonSubtext?: T;
  cover?: T;
  sideBar?:
    | T
    | {
        tableOfContent?:
          | T
          | {
              shareTitle?: T;
              contentType?: T;
              copiedTitle?: T;
              shareLinkedin?: T;
              shareFacebook?: T;
              shareTwitter?: T;
              shareEmail?: T;
              copyLink?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
      };
  body?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integrationMainInfo_select".
 */
export interface IntegrationMainInfoSelect<T extends boolean = true> {
  title?: T;
  body?: T;
  linkToFirstPage?: T;
  buttonText?: T;
  shareTitle?: T;
  copiedTitle?: T;
  previousPageTitle?: T;
  nextPageTitle?: T;
  finishTitle?: T;
  completeTitle?: T;
  globalTag?: T;
  cover?: T;
  shareLinkedin?: T;
  shareFacebook?: T;
  shareEmail?: T;
  shareTwitter?: T;
  copyLink?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "landingPage_select".
 */
export interface LandingPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  body?:
    | T
    | {
        appreciation?:
          | T
          | {
              review?: T;
              stats?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mainImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              leftTopImage?: T;
              rightTopImage?: T;
              leftBottomImage?: T;
              rightBottomImage?: T;
              leftTopImageMobile?: T;
              rightTopImageMobile?: T;
              leftBottomImageMobile?: T;
              rightBottomImageMobile?: T;
              id?: T;
              blockName?: T;
            };
        bookDemoMain?:
          | T
          | {
              body?: T;
              logos?: T;
              rating?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypesCards?:
          | T
          | {
              backgroundColor?: T;
              images?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        customComponent?:
          | T
          | {
              backgroundColor?: T;
              content?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingCapture?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        demos?:
          | T
          | {
              demos?:
                | T
                | {
                    demo?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          media?: T;
                          duration?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        embedded?:
          | T
          | {
              embedded?: T;
              id?: T;
              blockName?: T;
            };
        embededMap?:
          | T
          | {
              address?: T;
              icon?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        features?:
          | T
          | {
              featureBlocks?:
                | T
                | {
                    featureBlock?:
                      | T
                      | {
                          title?: T;
                          heading?: T;
                          body?: T;
                          integrations?:
                            | T
                            | {
                                featureIntegration?:
                                  | T
                                  | {
                                      icon?: T;
                                      link?: T;
                                      linkText?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          link?: T;
                          linkText?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              id?: T;
              buttonLabel?: T;
              alignment?: T;
              backgroundColor?: T;
              padding?: T;
              header?:
                | T
                | {
                    formTitle?:
                      | T
                      | {
                          title?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formSubtitle?:
                      | T
                      | {
                          subtitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              formElements?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoAccordion?:
          | T
          | {
              infoAccordion?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoCarousel?:
          | T
          | {
              infoCarousel?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoGrid?:
          | T
          | {
              infoGrid?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTabVariant?:
          | T
          | {
              infoTab?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTextWithImage?:
          | T
          | {
              infoTextWithImage?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoWithCardsSection?:
          | T
          | {
              infoWithCards?: T;
              id?: T;
              blockName?: T;
            };
        globalReviewsSection?:
          | T
          | {
              reviewBlock?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpagesCentered?:
          | T
          | {
              title?: T;
              body?: T;
              backgroundColor?: T;
              topLeftImage?: T;
              topLeftImageSize?: T;
              bottomRightImage?: T;
              topRightMobileImage?: T;
              bottomRightMobileImage?: T;
              id?: T;
              blockName?: T;
            };
        homeHero?:
          | T
          | {
              richTitle?:
                | T
                | {
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoCarousel?:
          | T
          | {
              slides?:
                | T
                | {
                    infoCarouselSlide?:
                      | T
                      | {
                          image?: T;
                          backgroundColor?: T;
                          title?: T;
                          subtitle?: T;
                          items?:
                            | T
                            | {
                                infoCarouselSlideItem?:
                                  | T
                                  | {
                                      title?: T;
                                      icon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGrid?:
          | T
          | {
              items?:
                | T
                | {
                    infoGridItem?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridCardsWithIcons?:
          | T
          | {
              backgroundColor?: T;
              cards?:
                | T
                | {
                    gridCard?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          fullWidthImage?: T;
                          image?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridTwoColumnsWithTitle?:
          | T
          | {
              backgroundColor?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              items?:
                | T
                | {
                    infoGridTwoColumnsWithTitleItem?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridWithHeading?:
          | T
          | {
              backgroundColor?: T;
              bottomLineSeperator?: T;
              title?: T;
              icon?: T;
              cardTag?: T;
              cardButtonLabel?: T;
              contentType?: T;
              id?: T;
              blockName?: T;
            };
        infoGridWithResources?:
          | T
          | {
              resources?: T;
              buttonLabel?: T;
              guideLabel?: T;
              articleLabel?: T;
              videoLabel?: T;
              templateLabel?: T;
              id?: T;
              blockName?: T;
            };
        infoSlider?:
          | T
          | {
              backgroundColour?: T;
              link?: T;
              linkLabel?: T;
              slides?:
                | T
                | {
                    infoSlide?:
                      | T
                      | {
                          cover?: T;
                          title?: T;
                          subtitle?: T;
                          label?: T;
                          link?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoSliderTimeline?:
          | T
          | {
              slides?:
                | T
                | {
                    timelineSlide?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithDescriptions?:
          | T
          | {
              title?: T;
              subtitle?: T;
              tabs?:
                | T
                | {
                    infoTab?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithIcon?:
          | T
          | {
              heading?: T;
              headingImage?: T;
              body?: T;
              backgroundColour?: T;
              tabImage?: T;
              tabs?:
                | T
                | {
                    infoIconTab?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          image?: T;
                          link?: T;
                          mobileButton?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTextWithCollage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              leftGraphic?: T;
              topGraphic?: T;
              bottomGraphic?: T;
              mainPhoto?: T;
              id?: T;
              blockName?: T;
            };
        infoTextWithImage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              contentType?: T;
              backgroundColor?: T;
              imagePosition?: T;
              cover?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              textLink?:
                | T
                | {
                    textLinkButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    infoText?:
                      | T
                      | {
                          text?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoWithCards?:
          | T
          | {
              featureBlock?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              blocks?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        insightComparison?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        mainHero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              mobileImage?: T;
              bannerBody?: T;
              bannerLabel?: T;
              bannerLink?: T;
              leftPart?: T;
              rightPart?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              embed?: T;
              embedLink?: T;
              assetDesktop?: T;
              assetMobile?: T;
              size?: T;
              id?: T;
              blockName?: T;
            };
        mediaCollage?:
          | T
          | {
              firstLine?: T;
              secondLine?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        pricingTable?:
          | T
          | {
              plans?:
                | T
                | {
                    pricingPlan?:
                      | T
                      | {
                          name?: T;
                          monthlyPrice?: T;
                          monthlyPriceLabel?: T;
                          annualyPrice?: T;
                          annualyPriceLabel?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          caption?: T;
                          body?: T;
                          items?:
                            | T
                            | {
                                pricingPlanItem?:
                                  | T
                                  | {
                                      title?: T;
                                      list?:
                                        | T
                                        | {
                                            pricingPlanListItem?:
                                              | T
                                              | {
                                                  label?: T;
                                                  additionalLabel?: T;
                                                  tooltipImage?: T;
                                                  tooltipBody?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricingTableComparison?:
          | T
          | {
              mobileDropdownTitle?: T;
              featureRow?:
                | T
                | {
                    pricingСomparisonFeaturesRow?:
                      | T
                      | {
                          title?: T;
                          comparisonFeatures?:
                            | T
                            | {
                                comparisonFeatureRow?:
                                  | T
                                  | {
                                      title?: T;
                                      monthlyPrice?: T;
                                      annualyPrice?: T;
                                      button?:
                                        | T
                                        | {
                                            button?:
                                              | T
                                              | {
                                                  label?: T;
                                                  link?: T;
                                                  buttonType?: T;
                                                  backgroundColor?: T;
                                                  eventName?: T;
                                                  scrollTo?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            globalButtons?:
                                              | T
                                              | {
                                                  button?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      caption?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              bodyTables?:
                | T
                | {
                    pricingBodyTable?:
                      | T
                      | {
                          title?: T;
                          tableRows?:
                            | T
                            | {
                                pricingBodyTableRow?:
                                  | T
                                  | {
                                      cells?:
                                        | T
                                        | {
                                            pricingBodyTableTextCell?:
                                              | T
                                              | {
                                                  label?: T;
                                                  tooltipBody?: T;
                                                  tooltipImage?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            pricingBodyTableIconCell?:
                                              | T
                                              | {
                                                  availableIcon?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        reviews?:
          | T
          | {
              backgroundColor?: T;
              reviews?:
                | T
                | {
                    review?:
                      | T
                      | {
                          text?: T;
                          tag?: T;
                          representative?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        textLinks?:
          | T
          | {
              links?:
                | T
                | {
                    textLinkWithIcon?:
                      | T
                      | {
                          label?: T;
                          hoverColor?: T;
                          link?: T;
                          contentType?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        toggle?:
          | T
          | {
              activeLabel?: T;
              inactiveLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "legalPage_select".
 */
export interface LegalPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  headerTitle?: T;
  headerBody?: T;
  body?: T;
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigationBar_select".
 */
export interface NavigationBarSelect<T extends boolean = true> {
  backgroundColor?: T;
  buttons?:
    | T
    | {
        button?:
          | T
          | {
              label?: T;
              link?: T;
              buttonType?: T;
              backgroundColor?: T;
              eventName?: T;
              scrollTo?: T;
              id?: T;
              blockName?: T;
            };
        globalButtons?:
          | T
          | {
              button?: T;
              id?: T;
              blockName?: T;
            };
      };
  logotype?: T;
  searchHidden?: T;
  menuItems?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigationBarMenuItems_select".
 */
export interface NavigationBarMenuItemsSelect<T extends boolean = true> {
  logotypeLink?: T;
  logoButtonLabel?: T;
  logoButtonLink?: T;
  searchResultsTitle?: T;
  emptySearchTitle?: T;
  searchLengthValidationTitle?: T;
  searchPlaceholder?: T;
  searchPageContentType?: T;
  menuItems?:
    | T
    | {
        navBarGroup?:
          | T
          | {
              menuLabel?: T;
              link?: T;
              dropdown?:
                | T
                | {
                    dropdownWithCategories?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          label?: T;
                          link?: T;
                          eventName?: T;
                          mainColumnSubtitle?: T;
                          mainColumnLinks?:
                            | T
                            | {
                                navBarCategoryLink?:
                                  | T
                                  | {
                                      title?: T;
                                      link?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          secondColumnSubtitle?: T;
                          secondColumnLinks?:
                            | T
                            | {
                                navBarCategoryLink?:
                                  | T
                                  | {
                                      title?: T;
                                      link?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          thirdColumnSubtitle?: T;
                          thirdColumnLinks?:
                            | T
                            | {
                                navBarCategoryLink?:
                                  | T
                                  | {
                                      title?: T;
                                      link?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                    dropdownWithoutCategories?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          label?: T;
                          link?: T;
                          eventName?: T;
                          featureImage?: T;
                          featureTitle?: T;
                          featureBody?: T;
                          featureButtonLabel?: T;
                          featureBackgroundColor?: T;
                          featureLink?: T;
                          sublinks?:
                            | T
                            | {
                                navBarLink?:
                                  | T
                                  | {
                                      title?: T;
                                      subtitle?: T;
                                      link?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  searchGlobalTagContentType?: T;
  searchFeatureContentType?: T;
  searchCustomerMainPageContentType?: T;
  searchCustomerContentType?: T;
  searchSolutionContentType?: T;
  searchPricingUseCaseContentType?: T;
  searchPricingMainPageContentType?: T;
  searchArticleContentType?: T;
  searchBlogMainPageContentType?: T;
  searchVideoContentType?: T;
  searchVideoMainPageContentType?: T;
  searchGuidesMainPageContentType?: T;
  searchGuideMainPageContentType?: T;
  searchTemplatesMainPageContentType?: T;
  searchTemplateContentType?: T;
  searchLegalPageContentType?: T;
  searchLandingPageContentType?: T;
  searchGuideMainInfoContentType?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page_select".
 */
export interface PageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  body?:
    | T
    | {
        appreciation?:
          | T
          | {
              review?: T;
              stats?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mainImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              leftTopImage?: T;
              rightTopImage?: T;
              leftBottomImage?: T;
              rightBottomImage?: T;
              leftTopImageMobile?: T;
              rightTopImageMobile?: T;
              leftBottomImageMobile?: T;
              rightBottomImageMobile?: T;
              id?: T;
              blockName?: T;
            };
        bookDemoMain?:
          | T
          | {
              body?: T;
              logos?: T;
              rating?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypesCards?:
          | T
          | {
              backgroundColor?: T;
              images?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        customComponent?:
          | T
          | {
              backgroundColor?: T;
              content?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingCapture?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        demos?:
          | T
          | {
              demos?:
                | T
                | {
                    demo?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          media?: T;
                          duration?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        embedded?:
          | T
          | {
              embedded?: T;
              id?: T;
              blockName?: T;
            };
        embededMap?:
          | T
          | {
              address?: T;
              icon?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        features?:
          | T
          | {
              featureBlocks?:
                | T
                | {
                    featureBlock?:
                      | T
                      | {
                          title?: T;
                          heading?: T;
                          body?: T;
                          integrations?:
                            | T
                            | {
                                featureIntegration?:
                                  | T
                                  | {
                                      icon?: T;
                                      link?: T;
                                      linkText?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          link?: T;
                          linkText?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              id?: T;
              buttonLabel?: T;
              alignment?: T;
              backgroundColor?: T;
              padding?: T;
              header?:
                | T
                | {
                    formTitle?:
                      | T
                      | {
                          title?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formSubtitle?:
                      | T
                      | {
                          subtitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              formElements?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoAccordion?:
          | T
          | {
              infoAccordion?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoCarousel?:
          | T
          | {
              infoCarousel?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoGrid?:
          | T
          | {
              infoGrid?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTabVariant?:
          | T
          | {
              infoTab?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTextWithImage?:
          | T
          | {
              infoTextWithImage?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoWithCardsSection?:
          | T
          | {
              infoWithCards?: T;
              id?: T;
              blockName?: T;
            };
        globalReviewsSection?:
          | T
          | {
              reviewBlock?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpagesCentered?:
          | T
          | {
              title?: T;
              body?: T;
              backgroundColor?: T;
              topLeftImage?: T;
              topLeftImageSize?: T;
              bottomRightImage?: T;
              topRightMobileImage?: T;
              bottomRightMobileImage?: T;
              id?: T;
              blockName?: T;
            };
        homeHero?:
          | T
          | {
              richTitle?:
                | T
                | {
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoCarousel?:
          | T
          | {
              slides?:
                | T
                | {
                    infoCarouselSlide?:
                      | T
                      | {
                          image?: T;
                          backgroundColor?: T;
                          title?: T;
                          subtitle?: T;
                          items?:
                            | T
                            | {
                                infoCarouselSlideItem?:
                                  | T
                                  | {
                                      title?: T;
                                      icon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGrid?:
          | T
          | {
              items?:
                | T
                | {
                    infoGridItem?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridCardsWithIcons?:
          | T
          | {
              backgroundColor?: T;
              cards?:
                | T
                | {
                    gridCard?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          fullWidthImage?: T;
                          image?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridTwoColumnsWithTitle?:
          | T
          | {
              backgroundColor?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              items?:
                | T
                | {
                    infoGridTwoColumnsWithTitleItem?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridWithHeading?:
          | T
          | {
              backgroundColor?: T;
              bottomLineSeperator?: T;
              title?: T;
              icon?: T;
              cardTag?: T;
              cardButtonLabel?: T;
              contentType?: T;
              id?: T;
              blockName?: T;
            };
        infoGridWithResources?:
          | T
          | {
              resources?: T;
              buttonLabel?: T;
              guideLabel?: T;
              articleLabel?: T;
              videoLabel?: T;
              templateLabel?: T;
              id?: T;
              blockName?: T;
            };
        infoSlider?:
          | T
          | {
              backgroundColour?: T;
              link?: T;
              linkLabel?: T;
              slides?:
                | T
                | {
                    infoSlide?:
                      | T
                      | {
                          cover?: T;
                          title?: T;
                          subtitle?: T;
                          label?: T;
                          link?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoSliderTimeline?:
          | T
          | {
              slides?:
                | T
                | {
                    timelineSlide?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithDescriptions?:
          | T
          | {
              title?: T;
              subtitle?: T;
              tabs?:
                | T
                | {
                    infoTab?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithIcon?:
          | T
          | {
              heading?: T;
              headingImage?: T;
              body?: T;
              backgroundColour?: T;
              tabImage?: T;
              tabs?:
                | T
                | {
                    infoIconTab?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          image?: T;
                          link?: T;
                          mobileButton?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTextWithCollage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              leftGraphic?: T;
              topGraphic?: T;
              bottomGraphic?: T;
              mainPhoto?: T;
              id?: T;
              blockName?: T;
            };
        infoTextWithImage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              contentType?: T;
              backgroundColor?: T;
              imagePosition?: T;
              cover?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              textLink?:
                | T
                | {
                    textLinkButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    infoText?:
                      | T
                      | {
                          text?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoWithCards?:
          | T
          | {
              featureBlock?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              blocks?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        insightComparison?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        mainHero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              mobileImage?: T;
              bannerBody?: T;
              bannerLabel?: T;
              bannerLink?: T;
              leftPart?: T;
              rightPart?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              embed?: T;
              embedLink?: T;
              assetDesktop?: T;
              assetMobile?: T;
              size?: T;
              id?: T;
              blockName?: T;
            };
        mediaCollage?:
          | T
          | {
              firstLine?: T;
              secondLine?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        pricingTable?:
          | T
          | {
              plans?:
                | T
                | {
                    pricingPlan?:
                      | T
                      | {
                          name?: T;
                          monthlyPrice?: T;
                          monthlyPriceLabel?: T;
                          annualyPrice?: T;
                          annualyPriceLabel?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          caption?: T;
                          body?: T;
                          items?:
                            | T
                            | {
                                pricingPlanItem?:
                                  | T
                                  | {
                                      title?: T;
                                      list?:
                                        | T
                                        | {
                                            pricingPlanListItem?:
                                              | T
                                              | {
                                                  label?: T;
                                                  additionalLabel?: T;
                                                  tooltipImage?: T;
                                                  tooltipBody?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricingTableComparison?:
          | T
          | {
              mobileDropdownTitle?: T;
              featureRow?:
                | T
                | {
                    pricingСomparisonFeaturesRow?:
                      | T
                      | {
                          title?: T;
                          comparisonFeatures?:
                            | T
                            | {
                                comparisonFeatureRow?:
                                  | T
                                  | {
                                      title?: T;
                                      monthlyPrice?: T;
                                      annualyPrice?: T;
                                      button?:
                                        | T
                                        | {
                                            button?:
                                              | T
                                              | {
                                                  label?: T;
                                                  link?: T;
                                                  buttonType?: T;
                                                  backgroundColor?: T;
                                                  eventName?: T;
                                                  scrollTo?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            globalButtons?:
                                              | T
                                              | {
                                                  button?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      caption?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              bodyTables?:
                | T
                | {
                    pricingBodyTable?:
                      | T
                      | {
                          title?: T;
                          tableRows?:
                            | T
                            | {
                                pricingBodyTableRow?:
                                  | T
                                  | {
                                      cells?:
                                        | T
                                        | {
                                            pricingBodyTableTextCell?:
                                              | T
                                              | {
                                                  label?: T;
                                                  tooltipBody?: T;
                                                  tooltipImage?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            pricingBodyTableIconCell?:
                                              | T
                                              | {
                                                  availableIcon?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        reviews?:
          | T
          | {
              backgroundColor?: T;
              reviews?:
                | T
                | {
                    review?:
                      | T
                      | {
                          text?: T;
                          tag?: T;
                          representative?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        textLinks?:
          | T
          | {
              links?:
                | T
                | {
                    textLinkWithIcon?:
                      | T
                      | {
                          label?: T;
                          hoverColor?: T;
                          link?: T;
                          contentType?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        toggle?:
          | T
          | {
              activeLabel?: T;
              inactiveLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricingUseCase_select".
 */
export interface PricingUseCaseSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        appreciation?:
          | T
          | {
              review?: T;
              stats?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mainImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              leftTopImage?: T;
              rightTopImage?: T;
              leftBottomImage?: T;
              rightBottomImage?: T;
              leftTopImageMobile?: T;
              rightTopImageMobile?: T;
              leftBottomImageMobile?: T;
              rightBottomImageMobile?: T;
              id?: T;
              blockName?: T;
            };
        bookDemoMain?:
          | T
          | {
              body?: T;
              logos?: T;
              rating?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypesCards?:
          | T
          | {
              backgroundColor?: T;
              images?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        customComponent?:
          | T
          | {
              backgroundColor?: T;
              content?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingCapture?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        demos?:
          | T
          | {
              demos?:
                | T
                | {
                    demo?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          media?: T;
                          duration?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        embedded?:
          | T
          | {
              embedded?: T;
              id?: T;
              blockName?: T;
            };
        embededMap?:
          | T
          | {
              address?: T;
              icon?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        features?:
          | T
          | {
              featureBlocks?:
                | T
                | {
                    featureBlock?:
                      | T
                      | {
                          title?: T;
                          heading?: T;
                          body?: T;
                          integrations?:
                            | T
                            | {
                                featureIntegration?:
                                  | T
                                  | {
                                      icon?: T;
                                      link?: T;
                                      linkText?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          link?: T;
                          linkText?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              id?: T;
              buttonLabel?: T;
              alignment?: T;
              backgroundColor?: T;
              padding?: T;
              header?:
                | T
                | {
                    formTitle?:
                      | T
                      | {
                          title?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formSubtitle?:
                      | T
                      | {
                          subtitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              formElements?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoAccordion?:
          | T
          | {
              infoAccordion?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoCarousel?:
          | T
          | {
              infoCarousel?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoGrid?:
          | T
          | {
              infoGrid?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTabVariant?:
          | T
          | {
              infoTab?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTextWithImage?:
          | T
          | {
              infoTextWithImage?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoWithCardsSection?:
          | T
          | {
              infoWithCards?: T;
              id?: T;
              blockName?: T;
            };
        globalReviewsSection?:
          | T
          | {
              reviewBlock?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpagesCentered?:
          | T
          | {
              title?: T;
              body?: T;
              backgroundColor?: T;
              topLeftImage?: T;
              topLeftImageSize?: T;
              bottomRightImage?: T;
              topRightMobileImage?: T;
              bottomRightMobileImage?: T;
              id?: T;
              blockName?: T;
            };
        homeHero?:
          | T
          | {
              richTitle?:
                | T
                | {
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoCarousel?:
          | T
          | {
              slides?:
                | T
                | {
                    infoCarouselSlide?:
                      | T
                      | {
                          image?: T;
                          backgroundColor?: T;
                          title?: T;
                          subtitle?: T;
                          items?:
                            | T
                            | {
                                infoCarouselSlideItem?:
                                  | T
                                  | {
                                      title?: T;
                                      icon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGrid?:
          | T
          | {
              items?:
                | T
                | {
                    infoGridItem?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridCardsWithIcons?:
          | T
          | {
              backgroundColor?: T;
              cards?:
                | T
                | {
                    gridCard?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          fullWidthImage?: T;
                          image?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridTwoColumnsWithTitle?:
          | T
          | {
              backgroundColor?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              items?:
                | T
                | {
                    infoGridTwoColumnsWithTitleItem?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridWithHeading?:
          | T
          | {
              backgroundColor?: T;
              bottomLineSeperator?: T;
              title?: T;
              icon?: T;
              cardTag?: T;
              cardButtonLabel?: T;
              contentType?: T;
              id?: T;
              blockName?: T;
            };
        infoGridWithResources?:
          | T
          | {
              resources?: T;
              buttonLabel?: T;
              guideLabel?: T;
              articleLabel?: T;
              videoLabel?: T;
              templateLabel?: T;
              id?: T;
              blockName?: T;
            };
        infoSlider?:
          | T
          | {
              backgroundColour?: T;
              link?: T;
              linkLabel?: T;
              slides?:
                | T
                | {
                    infoSlide?:
                      | T
                      | {
                          cover?: T;
                          title?: T;
                          subtitle?: T;
                          label?: T;
                          link?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoSliderTimeline?:
          | T
          | {
              slides?:
                | T
                | {
                    timelineSlide?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithDescriptions?:
          | T
          | {
              title?: T;
              subtitle?: T;
              tabs?:
                | T
                | {
                    infoTab?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithIcon?:
          | T
          | {
              heading?: T;
              headingImage?: T;
              body?: T;
              backgroundColour?: T;
              tabImage?: T;
              tabs?:
                | T
                | {
                    infoIconTab?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          image?: T;
                          link?: T;
                          mobileButton?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTextWithCollage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              leftGraphic?: T;
              topGraphic?: T;
              bottomGraphic?: T;
              mainPhoto?: T;
              id?: T;
              blockName?: T;
            };
        infoTextWithImage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              contentType?: T;
              backgroundColor?: T;
              imagePosition?: T;
              cover?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              textLink?:
                | T
                | {
                    textLinkButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    infoText?:
                      | T
                      | {
                          text?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoWithCards?:
          | T
          | {
              featureBlock?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              blocks?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        insightComparison?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        mainHero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              mobileImage?: T;
              bannerBody?: T;
              bannerLabel?: T;
              bannerLink?: T;
              leftPart?: T;
              rightPart?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              embed?: T;
              embedLink?: T;
              assetDesktop?: T;
              assetMobile?: T;
              size?: T;
              id?: T;
              blockName?: T;
            };
        mediaCollage?:
          | T
          | {
              firstLine?: T;
              secondLine?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        pricingTable?:
          | T
          | {
              plans?:
                | T
                | {
                    pricingPlan?:
                      | T
                      | {
                          name?: T;
                          monthlyPrice?: T;
                          monthlyPriceLabel?: T;
                          annualyPrice?: T;
                          annualyPriceLabel?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          caption?: T;
                          body?: T;
                          items?:
                            | T
                            | {
                                pricingPlanItem?:
                                  | T
                                  | {
                                      title?: T;
                                      list?:
                                        | T
                                        | {
                                            pricingPlanListItem?:
                                              | T
                                              | {
                                                  label?: T;
                                                  additionalLabel?: T;
                                                  tooltipImage?: T;
                                                  tooltipBody?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricingTableComparison?:
          | T
          | {
              mobileDropdownTitle?: T;
              featureRow?:
                | T
                | {
                    pricingСomparisonFeaturesRow?:
                      | T
                      | {
                          title?: T;
                          comparisonFeatures?:
                            | T
                            | {
                                comparisonFeatureRow?:
                                  | T
                                  | {
                                      title?: T;
                                      monthlyPrice?: T;
                                      annualyPrice?: T;
                                      button?:
                                        | T
                                        | {
                                            button?:
                                              | T
                                              | {
                                                  label?: T;
                                                  link?: T;
                                                  buttonType?: T;
                                                  backgroundColor?: T;
                                                  eventName?: T;
                                                  scrollTo?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            globalButtons?:
                                              | T
                                              | {
                                                  button?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      caption?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              bodyTables?:
                | T
                | {
                    pricingBodyTable?:
                      | T
                      | {
                          title?: T;
                          tableRows?:
                            | T
                            | {
                                pricingBodyTableRow?:
                                  | T
                                  | {
                                      cells?:
                                        | T
                                        | {
                                            pricingBodyTableTextCell?:
                                              | T
                                              | {
                                                  label?: T;
                                                  tooltipBody?: T;
                                                  tooltipImage?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            pricingBodyTableIconCell?:
                                              | T
                                              | {
                                                  availableIcon?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        reviews?:
          | T
          | {
              backgroundColor?: T;
              reviews?:
                | T
                | {
                    review?:
                      | T
                      | {
                          text?: T;
                          tag?: T;
                          representative?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        textLinks?:
          | T
          | {
              links?:
                | T
                | {
                    textLinkWithIcon?:
                      | T
                      | {
                          label?: T;
                          hoverColor?: T;
                          link?: T;
                          contentType?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        toggle?:
          | T
          | {
              activeLabel?: T;
              inactiveLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rating_select".
 */
export interface RatingSelect<T extends boolean = true> {
  rating?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "report_select".
 */
export interface ReportSelect<T extends boolean = true> {
  lastUpdated?: T;
  followAndIndex?: T;
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  author?: T;
  heroArticle?:
    | T
    | {
        heroArticle?:
          | T
          | {
              title?: T;
              subtitle?: T;
              cover?: T;
              showGlobalTags?: T;
              id?: T;
              blockName?: T;
            };
      };
  blocks?:
    | T
    | {
        articleBody?:
          | T
          | {
              sideBar?:
                | T
                | {
                    tableOfContent?:
                      | T
                      | {
                          shareTitle?: T;
                          contentType?: T;
                          copiedTitle?: T;
                          shareLinkedin?: T;
                          shareFacebook?: T;
                          shareTwitter?: T;
                          shareEmail?: T;
                          copyLink?: T;
                          embed?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              body?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        suggestedArticles?:
          | T
          | {
              buttonLabel?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "solution_select".
 */
export interface SolutionSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        appreciation?:
          | T
          | {
              review?: T;
              stats?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mainImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              leftTopImage?: T;
              rightTopImage?: T;
              leftBottomImage?: T;
              rightBottomImage?: T;
              leftTopImageMobile?: T;
              rightTopImageMobile?: T;
              leftBottomImageMobile?: T;
              rightBottomImageMobile?: T;
              id?: T;
              blockName?: T;
            };
        bookDemoMain?:
          | T
          | {
              body?: T;
              logos?: T;
              rating?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypesCards?:
          | T
          | {
              backgroundColor?: T;
              images?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        customComponent?:
          | T
          | {
              backgroundColor?: T;
              content?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingCapture?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        demos?:
          | T
          | {
              demos?:
                | T
                | {
                    demo?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          media?: T;
                          duration?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        embedded?:
          | T
          | {
              embedded?: T;
              id?: T;
              blockName?: T;
            };
        embededMap?:
          | T
          | {
              address?: T;
              icon?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        features?:
          | T
          | {
              featureBlocks?:
                | T
                | {
                    featureBlock?:
                      | T
                      | {
                          title?: T;
                          heading?: T;
                          body?: T;
                          integrations?:
                            | T
                            | {
                                featureIntegration?:
                                  | T
                                  | {
                                      icon?: T;
                                      link?: T;
                                      linkText?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          link?: T;
                          linkText?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              id?: T;
              buttonLabel?: T;
              alignment?: T;
              backgroundColor?: T;
              padding?: T;
              header?:
                | T
                | {
                    formTitle?:
                      | T
                      | {
                          title?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formSubtitle?:
                      | T
                      | {
                          subtitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              formElements?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoAccordion?:
          | T
          | {
              infoAccordion?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoCarousel?:
          | T
          | {
              infoCarousel?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoGrid?:
          | T
          | {
              infoGrid?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTabVariant?:
          | T
          | {
              infoTab?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTextWithImage?:
          | T
          | {
              infoTextWithImage?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoWithCardsSection?:
          | T
          | {
              infoWithCards?: T;
              id?: T;
              blockName?: T;
            };
        globalReviewsSection?:
          | T
          | {
              reviewBlock?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpagesCentered?:
          | T
          | {
              title?: T;
              body?: T;
              backgroundColor?: T;
              topLeftImage?: T;
              topLeftImageSize?: T;
              bottomRightImage?: T;
              topRightMobileImage?: T;
              bottomRightMobileImage?: T;
              id?: T;
              blockName?: T;
            };
        homeHero?:
          | T
          | {
              richTitle?:
                | T
                | {
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoCarousel?:
          | T
          | {
              slides?:
                | T
                | {
                    infoCarouselSlide?:
                      | T
                      | {
                          image?: T;
                          backgroundColor?: T;
                          title?: T;
                          subtitle?: T;
                          items?:
                            | T
                            | {
                                infoCarouselSlideItem?:
                                  | T
                                  | {
                                      title?: T;
                                      icon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGrid?:
          | T
          | {
              items?:
                | T
                | {
                    infoGridItem?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridCardsWithIcons?:
          | T
          | {
              backgroundColor?: T;
              cards?:
                | T
                | {
                    gridCard?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          fullWidthImage?: T;
                          image?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridTwoColumnsWithTitle?:
          | T
          | {
              backgroundColor?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              items?:
                | T
                | {
                    infoGridTwoColumnsWithTitleItem?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridWithHeading?:
          | T
          | {
              backgroundColor?: T;
              bottomLineSeperator?: T;
              title?: T;
              icon?: T;
              cardTag?: T;
              cardButtonLabel?: T;
              contentType?: T;
              id?: T;
              blockName?: T;
            };
        infoGridWithResources?:
          | T
          | {
              resources?: T;
              buttonLabel?: T;
              guideLabel?: T;
              articleLabel?: T;
              videoLabel?: T;
              templateLabel?: T;
              id?: T;
              blockName?: T;
            };
        infoSlider?:
          | T
          | {
              backgroundColour?: T;
              link?: T;
              linkLabel?: T;
              slides?:
                | T
                | {
                    infoSlide?:
                      | T
                      | {
                          cover?: T;
                          title?: T;
                          subtitle?: T;
                          label?: T;
                          link?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoSliderTimeline?:
          | T
          | {
              slides?:
                | T
                | {
                    timelineSlide?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithDescriptions?:
          | T
          | {
              title?: T;
              subtitle?: T;
              tabs?:
                | T
                | {
                    infoTab?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithIcon?:
          | T
          | {
              heading?: T;
              headingImage?: T;
              body?: T;
              backgroundColour?: T;
              tabImage?: T;
              tabs?:
                | T
                | {
                    infoIconTab?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          image?: T;
                          link?: T;
                          mobileButton?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTextWithCollage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              leftGraphic?: T;
              topGraphic?: T;
              bottomGraphic?: T;
              mainPhoto?: T;
              id?: T;
              blockName?: T;
            };
        infoTextWithImage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              contentType?: T;
              backgroundColor?: T;
              imagePosition?: T;
              cover?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              textLink?:
                | T
                | {
                    textLinkButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    infoText?:
                      | T
                      | {
                          text?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoWithCards?:
          | T
          | {
              featureBlock?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              blocks?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        insightComparison?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        mainHero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              mobileImage?: T;
              bannerBody?: T;
              bannerLabel?: T;
              bannerLink?: T;
              leftPart?: T;
              rightPart?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              embed?: T;
              embedLink?: T;
              assetDesktop?: T;
              assetMobile?: T;
              size?: T;
              id?: T;
              blockName?: T;
            };
        mediaCollage?:
          | T
          | {
              firstLine?: T;
              secondLine?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        pricingTable?:
          | T
          | {
              plans?:
                | T
                | {
                    pricingPlan?:
                      | T
                      | {
                          name?: T;
                          monthlyPrice?: T;
                          monthlyPriceLabel?: T;
                          annualyPrice?: T;
                          annualyPriceLabel?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          caption?: T;
                          body?: T;
                          items?:
                            | T
                            | {
                                pricingPlanItem?:
                                  | T
                                  | {
                                      title?: T;
                                      list?:
                                        | T
                                        | {
                                            pricingPlanListItem?:
                                              | T
                                              | {
                                                  label?: T;
                                                  additionalLabel?: T;
                                                  tooltipImage?: T;
                                                  tooltipBody?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricingTableComparison?:
          | T
          | {
              mobileDropdownTitle?: T;
              featureRow?:
                | T
                | {
                    pricingСomparisonFeaturesRow?:
                      | T
                      | {
                          title?: T;
                          comparisonFeatures?:
                            | T
                            | {
                                comparisonFeatureRow?:
                                  | T
                                  | {
                                      title?: T;
                                      monthlyPrice?: T;
                                      annualyPrice?: T;
                                      button?:
                                        | T
                                        | {
                                            button?:
                                              | T
                                              | {
                                                  label?: T;
                                                  link?: T;
                                                  buttonType?: T;
                                                  backgroundColor?: T;
                                                  eventName?: T;
                                                  scrollTo?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            globalButtons?:
                                              | T
                                              | {
                                                  button?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      caption?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              bodyTables?:
                | T
                | {
                    pricingBodyTable?:
                      | T
                      | {
                          title?: T;
                          tableRows?:
                            | T
                            | {
                                pricingBodyTableRow?:
                                  | T
                                  | {
                                      cells?:
                                        | T
                                        | {
                                            pricingBodyTableTextCell?:
                                              | T
                                              | {
                                                  label?: T;
                                                  tooltipBody?: T;
                                                  tooltipImage?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            pricingBodyTableIconCell?:
                                              | T
                                              | {
                                                  availableIcon?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        reviews?:
          | T
          | {
              backgroundColor?: T;
              reviews?:
                | T
                | {
                    review?:
                      | T
                      | {
                          text?: T;
                          tag?: T;
                          representative?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        textLinks?:
          | T
          | {
              links?:
                | T
                | {
                    textLinkWithIcon?:
                      | T
                      | {
                          label?: T;
                          hoverColor?: T;
                          link?: T;
                          contentType?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        toggle?:
          | T
          | {
              activeLabel?: T;
              inactiveLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "template_select".
 */
export interface TemplateSelect<T extends boolean = true> {
  followAndIndex?: T;
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  templateId?: T;
  globalTag?: T;
  useCase?: T;
  team?: T;
  methodology?: T;
  industry?: T;
  heroTemplate?:
    | T
    | {
        heroTemplate?:
          | T
          | {
              title?: T;
              subtitle?: T;
              cover?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  blocks?:
    | T
    | {
        heroTemplate?:
          | T
          | {
              title?: T;
              subtitle?: T;
              cover?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        suggestedTemplates?:
          | T
          | {
              buttonLabel?: T;
              id?: T;
              blockName?: T;
            };
        templateSection?:
          | T
          | {
              sideBar?:
                | T
                | {
                    templateCTA?:
                      | T
                      | {
                          title?: T;
                          authorBody?: T;
                          shareTitle?: T;
                          copiedTitle?: T;
                          shareFacebook?: T;
                          shareTwitter?: T;
                          shareLinkedin?: T;
                          shareEmail?: T;
                          copyLink?: T;
                          teamMember?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                    globalCTA?:
                      | T
                      | {
                          cta?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              templateBody?: T;
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        globalReviewsSection?:
          | T
          | {
              reviewBlock?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templateIndustry_select".
 */
export interface TemplateIndustrySelect<T extends boolean = true> {
  title?: T;
  description?: T;
  followAndIndex?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templateMethodology_select".
 */
export interface TemplateMethodologySelect<T extends boolean = true> {
  title?: T;
  description?: T;
  followAndIndex?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templateTeam_select".
 */
export interface TemplateTeamSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  followAndIndex?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templateUseCase_select".
 */
export interface TemplateUseCaseSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  followAndIndex?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonial-reviewer_select".
 */
export interface TestimonialReviewerSelect<T extends boolean = true> {
  fullName?: T;
  position?: T;
  companyLogo?: T;
  companyLogoOnLight?: T;
  avatar?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video_select".
 */
export interface VideoSelect<T extends boolean = true> {
  followAndIndex?: T;
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  cover?: T;
  globalTag?: T;
  heroTemplate?:
    | T
    | {
        heroTemplate?:
          | T
          | {
              title?: T;
              subtitle?: T;
              cover?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  embedVideo?: T;
  durationMinutes?: T;
  durationSeconds?: T;
  transcript?: T;
  shareTitle?: T;
  copiedTitle?: T;
  shareFacebook?: T;
  shareTwitter?: T;
  shareLinkedin?: T;
  shareEmail?: T;
  copyLink?: T;
  cta?:
    | T
    | {
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
      };
  clientLogoTypes?:
    | T
    | {
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  release?: T;
  content?:
    | T
    | {
        Heading?:
          | T
          | {
              heading?: T;
              id?: T;
              blockName?: T;
            };
        'Rich Text'?:
          | T
          | {
              richText?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "releases_select".
 */
export interface ReleasesSelect<T extends boolean = true> {
  name?: T;
  releaseDateAndTime?: T;
  releaseDateAndTime_tz?: T;
  documentsToPublish?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  type?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogMainPage".
 */
export interface BlogMainPage {
  id: string;
  followAndIndex?: boolean | null;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  title: string;
  description: string;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        label?: boolean | null;
        date?: boolean | null;
        readTime?: boolean | null;
        author?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'featureArticle';
      }
    | {
        searchInputPlaceholder: string;
        emptyListTitle: string;
        resultLabel: string;
        allFilterLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'filterBar';
      }
    | {
        sideBar: {
          shareTitle: string;
          /**
           * The kind of content being shared (eg. article)
           */
          contentType?: ('article' | 'video' | 'guide' | 'template' | 'integration' | 'event') | null;
          copiedTitle: string;
          shareLinkedin?: boolean | null;
          shareFacebook?: boolean | null;
          shareTwitter?: boolean | null;
          shareEmail?: boolean | null;
          copyLink?: boolean | null;
          embed?: string | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'tableOfContent';
        }[];
        body: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'articleBody';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "errorPage".
 */
export interface ErrorPage {
  id: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  hero: {
    title: string;
    button?:
      | (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[]
      | null;
    iconButton?:
      | {
          label: string;
          link: string;
          icon: string | Media;
          iconPosition: 'right' | 'left';
          eventName?: string | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'iconButton';
        }[]
      | null;
    subtitle: string;
    backgroundColor:
      | 'bg-neutral-05'
      | 'bg-yellow-03'
      | 'bg-purple-04'
      | 'bg-yellow-04'
      | 'bg-green-04'
      | 'bg-neutral-06'
      | 'bg-blue-04'
      | 'bg-red-05'
      | 'bg-green-02'
      | 'bg-pink-05'
      | 'bg-pink-04';
    media?: (string | null) | Media;
    customComponent?:
      | {
          id?: string | null;
          blockName?: string | null;
          blockType: 'liveWebsiteTestingHero';
        }[]
      | null;
    caption?: string | null;
    rating?: {
      relationTo: 'rating';
      value: string | Rating;
    } | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'heroSubpages';
  }[];
  title?: string | null;
  description?: string | null;
  followAndIndex?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventsMainPage".
 */
export interface EventsMainPage {
  id: string;
  followAndIndex?: boolean | null;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  title: string;
  description: string;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        label?: boolean | null;
        date?: boolean | null;
        readTime?: boolean | null;
        author?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'featureArticle';
      }
    | {
        searchInputPlaceholder: string;
        emptyListTitle: string;
        resultLabel: string;
        allFilterLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'filterBar';
      }
    | {
        sideBar: {
          shareTitle: string;
          /**
           * The kind of content being shared (eg. article)
           */
          contentType?: ('article' | 'video' | 'guide' | 'template' | 'integration' | 'event') | null;
          copiedTitle: string;
          shareLinkedin?: boolean | null;
          shareFacebook?: boolean | null;
          shareTwitter?: boolean | null;
          shareEmail?: boolean | null;
          copyLink?: boolean | null;
          embed?: string | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'tableOfContent';
        }[];
        body: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'articleBody';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        title?: string | null;
        embedHtml: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'livestormEmbed';
      }
    | {
        title?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'eventsBody';
      }
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "favicon".
 */
export interface Favicon {
  id: string;
  favicon: string | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guidesMainPage".
 */
export interface GuidesMainPage {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        buttonLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'featureGuide';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'guidesBody';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
  )[];
  followAndIndex?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integrationsMainPage".
 */
export interface IntegrationsMainPage {
  id: string;
  followAndIndex?: boolean | null;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        leftBlocks: (
          | {
              title: string;
              image: string | Media;
              button: (
                | {
                    label: string;
                    /**
                     * When you add value for \"Scroll To\" field, link will be overwrite.
                     */
                    link: string;
                    buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                    backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                    /**
                     * If the field is filled, an analytics event will sent to the segment.
                     */
                    eventName?: string | null;
                    /**
                     * You need add the same value which you add to block field \"Ref to scroll to\".
                     */
                    scrollTo?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'button';
                  }
                | {
                    button: {
                      relationTo: 'globalButton';
                      value: string | GlobalButton;
                    };
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'globalButtons';
                  }
              )[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'templatesCTA';
            }
          | {
              searchInputPlaceholder: string;
              allButtonLabel: string;
              filterTeamTitle: string;
              filterUseCaseTitle: string;
              filterMethodologyTitle: string;
              filterIndustryTitle: string;
              mobileFilterButtonLabel: string;
              clearButtonLabel: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'templatesFilterBar';
            }
          | {
              cta: {
                relationTo: 'callToAction';
                value: string | CallToAction;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalCTA';
            }
        )[];
        rightBlock: (
          | {
              buttonLabel: string;
              emptyListTitle: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'templatesBody';
            }
          | {
              nextPageButtonTitle: string;
              previousPageButtonTitle: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'pagination';
            }
          | {
              buttonLabel: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'integrationsBody';
            }
        )[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'templatesSection';
      }
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notFoundPage".
 */
export interface NotFoundPage {
  id: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  hero: {
    title: string;
    button?:
      | (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[]
      | null;
    iconButton?:
      | {
          label: string;
          link: string;
          icon: string | Media;
          iconPosition: 'right' | 'left';
          eventName?: string | null;
          id?: string | null;
          blockName?: string | null;
          blockType: 'iconButton';
        }[]
      | null;
    subtitle: string;
    backgroundColor:
      | 'bg-neutral-05'
      | 'bg-yellow-03'
      | 'bg-purple-04'
      | 'bg-yellow-04'
      | 'bg-green-04'
      | 'bg-neutral-06'
      | 'bg-blue-04'
      | 'bg-red-05'
      | 'bg-green-02'
      | 'bg-pink-05'
      | 'bg-pink-04';
    media?: (string | null) | Media;
    customComponent?:
      | {
          id?: string | null;
          blockName?: string | null;
          blockType: 'liveWebsiteTestingHero';
        }[]
      | null;
    caption?: string | null;
    rating?: {
      relationTo: 'rating';
      value: string | Rating;
    } | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'heroSubpages';
  }[];
  title?: string | null;
  description?: string | null;
  followAndIndex?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricingMainPage".
 */
export interface PricingMainPage {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        review?: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        } | null;
        stats?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'appreciation';
      }
    | {
        title: string;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-06'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient';
        /**
         * If you add a file here, the banner will use a second variant of design.
         */
        mainImage?: (string | null) | Media;
        button: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        leftTopImage?: (string | null) | Media;
        rightTopImage?: (string | null) | Media;
        leftBottomImage?: (string | null) | Media;
        rightBottomImage?: (string | null) | Media;
        leftTopImageMobile?: (string | null) | Media;
        rightTopImageMobile?: (string | null) | Media;
        leftBottomImageMobile?: (string | null) | Media;
        rightBottomImageMobile?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'banner';
      }
    | {
        body?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        logos?: (string | Media)[] | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        embed?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'bookDemoMain';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        /**
         * Minimal images count - 8 Maximum images count - 18
         */
        images: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypesCards';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        content?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingCapture';
                }
            )[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'customComponent';
      }
    | {
        demos?:
          | {
              title: string;
              body: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              /**
               * Can be Rive animations or images
               */
              media: string | Media;
              /**
               * Duration the demo will be shown in milliseconds, not providing a value will assume an infinite duration
               */
              duration?: number | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'demo';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'demos';
      }
    | {
        embedded: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embedded';
      }
    | {
        address: string;
        icon?: (string | null) | Media;
        /**
         * Property width and height for embeded element must be set to 100%
         */
        embed: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'embededMap';
      }
    | {
        featureBlocks?:
          | {
              title?: string | null;
              heading?: string | null;
              body?: string | null;
              integrations?:
                | {
                    icon?: (string | null) | Media;
                    link?: string | null;
                    /**
                     * Only used for screen readers
                     */
                    linkText?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'featureIntegration';
                  }[]
                | null;
              link?: string | null;
              linkText?: string | null;
              image?: (string | null) | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'featureBlock';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'features';
      }
    | {
        id: string | null;
        buttonLabel: string;
        alignment: 'row' | 'column';
        backgroundColor: 'bg-neutral-06' | 'transparent';
        padding: '0' | '40';
        header?:
          | (
              | {
                  title: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formTitle';
                }
              | {
                  subtitle: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formSubtitle';
                }
            )[]
          | null;
        formElements: (
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              autoComplete?: boolean | null;
              type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formInput';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              options: {
                name: string;
                value: string;
                id?: string | null;
                blockName?: string | null;
                blockType: 'dropdownOption';
              }[];
              label?: string | null;
              placeholder: string;
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formDropdown';
            }
          | {
              /**
               * The field uses for html element and must be without white spaces.
               */
              name: string;
              required?: boolean | null;
              label: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              };
              errorMessage: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'formCheckbox';
            }
        )[];
        blockName?: string | null;
        blockType: 'form';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        infoAccordion: {
          relationTo: 'globalInfoAccordions';
          value: string | GlobalInfoAccordion;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoAccordion';
      }
    | {
        infoCarousel: {
          relationTo: 'globalInfoCarousels';
          value: string | GlobalInfoCarousel;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoCarousel';
      }
    | {
        infoGrid: {
          relationTo: 'globalInfoGrids';
          value: string | GlobalInfoGrid;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoGrid';
      }
    | {
        infoTab: {
          relationTo: 'globalInfoTabs';
          value: string | GlobalInfoTab;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTabVariant';
      }
    | {
        infoTextWithImage: {
          relationTo: 'globalInfoTextWithImages';
          value: string | GlobalInfoTextWithImage;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoTextWithImage';
      }
    | {
        infoWithCards: {
          relationTo: 'globalInfoWithCards';
          value: string | GlobalInfoWithCard;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalInfoWithCardsSection';
      }
    | {
        reviewBlock: {
          relationTo: 'globalReviews';
          value: string | GlobalReview;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalReviewsSection';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        iconButton?:
          | {
              label: string;
              link: string;
              icon: string | Media;
              iconPosition: 'right' | 'left';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'iconButton';
            }[]
          | null;
        subtitle: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04';
        media?: (string | null) | Media;
        customComponent?:
          | {
              id?: string | null;
              blockName?: string | null;
              blockType: 'liveWebsiteTestingHero';
            }[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpages';
      }
    | {
        title: string;
        body: string;
        backgroundColor:
          | 'bg-neutral-05'
          | 'bg-yellow-03'
          | 'bg-purple-04'
          | 'bg-yellow-04'
          | 'bg-green-04'
          | 'bg-neutral-06'
          | 'bg-blue-04'
          | 'bg-red-05'
          | 'bg-green-02'
          | 'bg-pink-05'
          | 'bg-pink-04'
          | 'bg-neutral-07';
        topLeftImage?: (string | null) | Media;
        topLeftImageSize?: ('small' | 'large') | null;
        bottomRightImage?: (string | null) | Media;
        topRightMobileImage?: (string | null) | Media;
        bottomRightMobileImage?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSubpagesCentered';
      }
    | {
        richTitle?:
          | (
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
            )[]
          | null;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'homeHero';
      }
    | {
        items: {
          title: string;
          description: {
            root: {
              type: string;
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              version: number;
            };
            [k: string]: unknown;
          };
          id?: string | null;
          blockName?: string | null;
          blockType: 'accordionItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoAccordion';
      }
    | {
        slides?:
          | {
              image: string | Media;
              backgroundColor:
                | 'bg-yellow-03'
                | 'bg-neutral-06'
                | 'bg-blue-04'
                | 'bg-pink-04'
                | 'bg-purple-04'
                | 'bg-red-05'
                | 'bg-pink-05'
                | 'bg-green-04'
                | 'bg-green-02'
                | 'bg-neutral-07';
              title: string;
              subtitle: string;
              items?:
                | {
                    title: string;
                    icon: string | Media;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'infoCarouselSlideItem';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCarouselSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoCarousel';
      }
    | {
        items: {
          title: string;
          subtitle?: string | null;
          icon: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoGridItem';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGrid';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-07';
        cards?:
          | {
              title: string;
              body: string;
              fullWidthImage?: boolean | null;
              image: string | Media;
              textLink?:
                | {
                    label: string;
                    link: string;
                    iconPosition: 'left' | 'right';
                    eventName?: string | null;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'textLinkButton';
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'gridCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridCardsWithIcons';
      }
    | {
        backgroundColor:
          | 'bg-green-04'
          | 'bg-green-02'
          | 'bg-yellow-04'
          | 'bg-blue-04'
          | 'bg-neutral-06'
          | 'bg-neutral-01'
          | 'bg-neutral-07';
        title: string;
        subtitle?: string | null;
        image: string | Media;
        items?:
          | {
              icon?: (string | null) | Media;
              title: string;
              body: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoGridTwoColumnsWithTitleItem';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridTwoColumnsWithTitle';
      }
    | {
        backgroundColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04';
        bottomLineSeperator?: boolean | null;
        title: string;
        icon: string | Media;
        cardTag: string;
        cardButtonLabel: string;
        contentType: 'articles' | 'guides' | 'videos' | 'templates' | 'events' | 'reports';
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithHeading';
      }
    | {
        /**
         * Maximum values - 3
         */
        resources: (
          | {
              relationTo: 'article';
              value: string | Article;
            }
          | {
              relationTo: 'template';
              value: string | Template;
            }
          | {
              relationTo: 'video';
              value: string | Video;
            }
          | {
              relationTo: 'guideMainInfo';
              value: string | GuideMainInfo;
            }
        )[];
        buttonLabel: string;
        guideLabel: string;
        articleLabel: string;
        videoLabel: string;
        templateLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoGridWithResources';
      }
    | {
        /**
         * Defaults to bg-neutral-07
         */
        backgroundColour?: ('bg-neutral-07' | 'bg-yellow-04') | null;
        link?: string | null;
        linkLabel?: string | null;
        slides?:
          | {
              cover: string | Media;
              title: string;
              subtitle: string;
              label?: string | null;
              link?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoSlide';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSlider';
      }
    | {
        slides: {
          title: string;
          subtitle: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'timelineSlide';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoSliderTimeline';
      }
    | {
        title?: string | null;
        subtitle?: string | null;
        tabs: {
          title: string;
          description: string;
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithDescriptions';
      }
    | {
        heading?: string | null;
        headingImage?: (string | null) | Media;
        body?: string | null;
        backgroundColour?: ('bg-neutral-07' | 'bg-green-01') | null;
        /**
         * If this field is empty then individual tab images will be used, otherwise this image will be shown persistently.
         */
        tabImage?: (string | null) | Media;
        tabs: {
          icon?: (string | null) | Media;
          title: string;
          image: string | Media;
          link?: string | null;
          mobileButton: string;
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoIconTab';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTabsWithIcon';
      }
    | {
        title: string;
        subtitle: string;
        leftGraphic: string | Media;
        topGraphic: string | Media;
        bottomGraphic: string | Media;
        mainPhoto: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithCollage';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * The value must be equal with \"Text link with icon\" component field
         */
        contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
        backgroundColor: 'bg-neutral-06' | 'bg-neutral-07' | 'bg-yellow-04';
        imagePosition?: ('right' | 'left') | null;
        cover?: (string | null) | Media;
        customComponent?:
          | (
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingHero';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingPanel';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingSites';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'liveWebsiteTestingTasks';
                }
            )[]
          | null;
        textLink?:
          | {
              label: string;
              link: string;
              iconPosition: 'left' | 'right';
              eventName?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkButton';
            }[]
          | null;
        items?:
          | {
              text: string;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoText';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoTextWithImage';
      }
    | {
        featureBlock: {
          image: string | Media;
          mobileImage?: (string | null) | Media;
          title: string;
          subtitle: string;
          textLink: {
            label: string;
            link: string;
            iconPosition: 'left' | 'right';
            eventName?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textLinkButton';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'infoCard';
        }[];
        blocks?:
          | {
              image: string | Media;
              mobileImage?: (string | null) | Media;
              title: string;
              subtitle: string;
              textLink: {
                label: string;
                link: string;
                iconPosition: 'left' | 'right';
                eventName?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'textLinkButton';
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'infoCard';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'infoWithCards';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'insightComparison';
      }
    | {
        title: string;
        subtitle: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        caption?: string | null;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        mobileImage?: (string | null) | Media;
        bannerBody?: string | null;
        bannerLabel?: string | null;
        bannerLink?: string | null;
        /**
         * Lottie JSON file or image
         */
        leftPart: string | Media;
        /**
         * Lottie JSON file or image
         */
        rightPart: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mainHero';
      }
    | {
        /**
         * Generic embeds have more priority than YouTube embeds and video fields.
         */
        embed?: string | null;
        /**
         * YouTube embeds have more priority than video fields.
         */
        embedLink?: string | null;
        assetDesktop?: (string | null) | Media;
        assetMobile?: (string | null) | Media;
        size: 'parallax' | '780' | '885';
        id?: string | null;
        blockName?: string | null;
        blockType: 'media';
      }
    | {
        /**
         * You need to select 3 images.
         */
        firstLine: (string | Media)[];
        /**
         * You need to select 5 images.
         */
        secondLine: (string | Media)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaCollage';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        plans: {
          name: string;
          monthlyPrice: string;
          monthlyPriceLabel?: string | null;
          annualyPrice: string;
          annualyPriceLabel?: string | null;
          button: (
            | {
                label: string;
                /**
                 * When you add value for \"Scroll To\" field, link will be overwrite.
                 */
                link: string;
                buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                /**
                 * If the field is filled, an analytics event will sent to the segment.
                 */
                eventName?: string | null;
                /**
                 * You need add the same value which you add to block field \"Ref to scroll to\".
                 */
                scrollTo?: string | null;
                id?: string | null;
                blockName?: string | null;
                blockType: 'button';
              }
            | {
                button: {
                  relationTo: 'globalButton';
                  value: string | GlobalButton;
                };
                id?: string | null;
                blockName?: string | null;
                blockType: 'globalButtons';
              }
          )[];
          caption?: string | null;
          body: string;
          items: {
            title: string;
            list: {
              label: string;
              additionalLabel?: string | null;
              tooltipImage?: (string | null) | Media;
              tooltipBody?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'pricingPlanListItem';
            }[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingPlanItem';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingPlan';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTable';
      }
    | {
        mobileDropdownTitle: string;
        featureRow: {
          title: string;
          comparisonFeatures: {
            title: string;
            monthlyPrice: string;
            annualyPrice: string;
            button: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            caption?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'comparisonFeatureRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingСomparisonFeaturesRow';
        }[];
        bodyTables: {
          title: string;
          tableRows: {
            cells: (
              | {
                  label: string;
                  tooltipBody?: string | null;
                  tooltipImage?: (string | null) | Media;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableTextCell';
                }
              | {
                  availableIcon?: boolean | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pricingBodyTableIconCell';
                }
            )[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'pricingBodyTableRow';
          }[];
          id?: string | null;
          blockName?: string | null;
          blockType: 'pricingBodyTable';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'pricingTableComparison';
      }
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        backgroundColor?: ('bg-green-02' | 'bg-pink-01') | null;
        reviews: {
          text: string;
          tag?: string | null;
          representative: {
            relationTo: 'testimonial-reviewer';
            value: string | TestimonialReviewer;
          };
          image: string | Media;
          id?: string | null;
          blockName?: string | null;
          blockType: 'review';
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'reviews';
      }
    | {
        text: string;
        tag?: string | null;
        backgroundColor: 'bg-green-02' | 'bg-pink-02' | 'bg-green-04';
        imagePosition: 'left' | 'right';
        representative: {
          relationTo: 'testimonial-reviewer';
          value: string | TestimonialReviewer;
        };
        image: string | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'singleReview';
      }
    | {
        title: string;
        subtitle?: string | null;
        backgroundColor?: ('bg-yellow-04' | 'bg-neutral-07') | null;
        mobileCenter?: boolean | null;
        version: 'center' | 'left' | 'left-margin';
        /**
         * You need add the same value which you add to button field
         */
        refForScrollTo?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textBlock';
      }
    | {
        links?:
          | {
              label: string;
              hoverColor: 'bg-yellow-03' | 'bg-pink-04' | 'bg-purple-04' | 'bg-blue-04' | 'bg-red-04';
              link?: string | null;
              /**
               * If the field is empty, the button will be navigated by a provided link in another field.  The page will scroll to \"Info Grid With Heading\" with the same content type by button press.
               */
              contentType?: ('articles' | 'videos' | 'guides' | 'templates' | 'events' | 'reports') | null;
              icon: string | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'textLinkWithIcon';
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'textLinks';
      }
    | {
        activeLabel: string;
        inactiveLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'toggle';
      }
  )[];
  followAndIndex?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reportsMainPage".
 */
export interface ReportsMainPage {
  id: string;
  followAndIndex?: boolean | null;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Footer.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        buttonLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'featureGuide';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'guidesBody';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        subtitle?: string | null;
        /**
         * Defaults to left
         */
        subtitleAlignment?: ('left' | 'centre') | null;
        logos: (string | Media)[];
        bottomDivider: '0' | '50';
        mobileBottomDivider?: boolean | null;
        marginTop: '80' | '0';
        backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
        id?: string | null;
        blockName?: string | null;
        blockType: 'clientLogotypes';
      }
    | {
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        /**
         * The field control top and bottom margin for mobile version.
         */
        mobileMargin: '0' | '20';
        /**
         * If you fill this field, button on click will be scroll to element, where you will add the same value.
         */
        scrollToElement?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaSmall';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'reportsBody';
      }
    | {
        buttonLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'featureReport';
      }
  )[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templatesMainPage".
 */
export interface TemplatesMainPage {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks?:
    | (
        | {
            title: string;
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            subtitle: string;
            buttonSubtext?: string | null;
            backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
            media: string | Media;
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            isCentered?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'resourcesHero';
          }
        | {
            leftBlocks: (
              | {
                  title: string;
                  image: string | Media;
                  button: (
                    | {
                        label: string;
                        /**
                         * When you add value for \"Scroll To\" field, link will be overwrite.
                         */
                        link: string;
                        buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                        backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                        /**
                         * If the field is filled, an analytics event will sent to the segment.
                         */
                        eventName?: string | null;
                        /**
                         * You need add the same value which you add to block field \"Ref to scroll to\".
                         */
                        scrollTo?: string | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'button';
                      }
                    | {
                        button: {
                          relationTo: 'globalButton';
                          value: string | GlobalButton;
                        };
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'globalButtons';
                      }
                  )[];
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'templatesCTA';
                }
              | {
                  searchInputPlaceholder: string;
                  allButtonLabel: string;
                  filterTeamTitle: string;
                  filterUseCaseTitle: string;
                  filterMethodologyTitle: string;
                  filterIndustryTitle: string;
                  mobileFilterButtonLabel: string;
                  clearButtonLabel: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'templatesFilterBar';
                }
              | {
                  cta: {
                    relationTo: 'callToAction';
                    value: string | CallToAction;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalCTA';
                }
            )[];
            rightBlock: (
              | {
                  buttonLabel: string;
                  emptyListTitle: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'templatesBody';
                }
              | {
                  nextPageButtonTitle: string;
                  previousPageButtonTitle: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'pagination';
                }
              | {
                  buttonLabel: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'integrationsBody';
                }
            )[];
            id?: string | null;
            blockName?: string | null;
            blockType: 'templatesSection';
          }
        | {
            clientLogotypes: {
              relationTo: 'clientLogotype';
              value: string | ClientLogotype;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalClientLogotypes';
          }
        | {
            cta: {
              relationTo: 'callToAction';
              value: string | CallToAction;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalCTA';
          }
        | {
            marginTop: '80' | '40' | '0';
            backgroundColor:
              | 'bg-yellow-04'
              | 'bg-neutral-07'
              | 'bg-pink-01'
              | 'yellow-pink-gradient'
              | 'blue-pink-gradient';
            /**
             * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
             */
            isContained?: boolean | null;
            title?: string | null;
            /**
             * If this field is populated then anything in title will be overridden.
             */
            richTitle?:
              | (
                  | {
                      content?: string | null;
                      gradient?: ('blue' | 'pink') | null;
                      gradientTopOffset?: number | null;
                      gradientRightOffset?: number | null;
                      gradientBottomOffset?: number | null;
                      gradientLeftOffset?: number | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleGradientSegment';
                    }
                  | {
                      content?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleSegment';
                    }
                  | {
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'richTitleUsersSegment';
                    }
                )[]
              | null;
            subtitle?: string | null;
            caption?: string | null;
            buttons: (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[];
            rating?: {
              relationTo: 'rating';
              value: string | Rating;
            } | null;
            leftAsset?: (string | null) | Media;
            rightAsset?: (string | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            subtitle?: string | null;
            /**
             * Defaults to left
             */
            subtitleAlignment?: ('left' | 'centre') | null;
            logos: (string | Media)[];
            bottomDivider: '0' | '50';
            mobileBottomDivider?: boolean | null;
            marginTop: '80' | '0';
            backgroundColor: 'bg-yellow-04' | 'bg-neutral-07' | 'bg-green-02';
            id?: string | null;
            blockName?: string | null;
            blockType: 'clientLogotypes';
          }
        | {
            title: string;
            subtitle: string;
            /**
             * You must select only image or Lottie JSON files.
             */
            asset: string | Media;
            /**
             * The field uses for html element and must be without white spaces.
             */
            formId?: string | null;
            form?:
              | (
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      autoComplete?: boolean | null;
                      type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formInput';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      options: {
                        name: string;
                        value: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'dropdownOption';
                      }[];
                      label?: string | null;
                      placeholder: string;
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formDropdown';
                    }
                  | {
                      /**
                       * The field uses for html element and must be without white spaces.
                       */
                      name: string;
                      required?: boolean | null;
                      label: {
                        root: {
                          type: string;
                          children: {
                            type: string;
                            version: number;
                            [k: string]: unknown;
                          }[];
                          direction: ('ltr' | 'rtl') | null;
                          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                          indent: number;
                          version: number;
                        };
                        [k: string]: unknown;
                      };
                      errorMessage: string;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'formCheckbox';
                    }
                )[]
              | null;
            label: string;
            /**
             * The link overwriten with Form Input and Form ID fields
             */
            link?: string | null;
            buttonPosition?: ('bottom' | 'right') | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaForm';
          }
        | {
            button?:
              | (
                  | {
                      label: string;
                      /**
                       * When you add value for \"Scroll To\" field, link will be overwrite.
                       */
                      link: string;
                      buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                      backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                      /**
                       * If the field is filled, an analytics event will sent to the segment.
                       */
                      eventName?: string | null;
                      /**
                       * You need add the same value which you add to block field \"Ref to scroll to\".
                       */
                      scrollTo?: string | null;
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'button';
                    }
                  | {
                      button: {
                        relationTo: 'globalButton';
                        value: string | GlobalButton;
                      };
                      id?: string | null;
                      blockName?: string | null;
                      blockType: 'globalButtons';
                    }
                )[]
              | null;
            /**
             * The field control top and bottom margin for mobile version.
             */
            mobileMargin: '0' | '20';
            /**
             * If you fill this field, button on click will be scroll to element, where you will add the same value.
             */
            scrollToElement?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ctaSmall';
          }
      )[]
    | null;
  followAndIndex?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videosMainPage".
 */
export interface VideosMainPage {
  id: string;
  title: string;
  description: string;
  ogImage?:
    | {
        title: string;
        description: string;
        /**
         * Fields 'publishedTime' and 'modifiedTime' available only for type and page Article.  Field 'author' avaialble only for types Article and Book and for page Article.
         */
        type:
          | 'website'
          | 'article'
          | 'book'
          | 'profile'
          | 'music.song'
          | 'music.album'
          | 'music.playlist'
          | 'music.radio_station'
          | 'video.movie'
          | 'video.episode'
          | 'video.tv_show'
          | 'video.other';
        image: string | Media;
        /**
         * You can use the field only with specific types and specific pages.   The types, when the tag will be works - Article, Book, Video Movie, Video Episode  The pages, where you can use the tag field - Templates, Video, Article, Guide
         */
        tag?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ogImage';
      }[]
    | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  navigationBar?: {
    relationTo: 'navigationBar';
    value: string | NavigationBar;
  } | null;
  /**
   * If field will be empty, page will be use default Navigation Bar.
   */
  footer?: {
    relationTo: 'footer';
    value: string | Footer;
  } | null;
  /**
   * Any hero block must be on first place.
   */
  blocks: (
    | {
        title: string;
        button?:
          | (
              | {
                  label: string;
                  /**
                   * When you add value for \"Scroll To\" field, link will be overwrite.
                   */
                  link: string;
                  buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
                  backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
                  /**
                   * If the field is filled, an analytics event will sent to the segment.
                   */
                  eventName?: string | null;
                  /**
                   * You need add the same value which you add to block field \"Ref to scroll to\".
                   */
                  scrollTo?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'button';
                }
              | {
                  button: {
                    relationTo: 'globalButton';
                    value: string | GlobalButton;
                  };
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'globalButtons';
                }
            )[]
          | null;
        subtitle: string;
        buttonSubtext?: string | null;
        backgroundColor: 'bg-neutral-06' | 'bg-green-04' | 'bg-blue-05';
        media: string | Media;
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        isCentered?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'resourcesHero';
      }
    | {
        buttonLabel: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'videosBody';
      }
    | {
        nextPageButtonTitle: string;
        previousPageButtonTitle: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'pagination';
      }
    | {
        clientLogotypes: {
          relationTo: 'clientLogotype';
          value: string | ClientLogotype;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalClientLogotypes';
      }
    | {
        cta: {
          relationTo: 'callToAction';
          value: string | CallToAction;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalCTA';
      }
    | {
        title: string;
        subtitle: string;
        /**
         * You must select only image or Lottie JSON files.
         */
        asset: string | Media;
        /**
         * The field uses for html element and must be without white spaces.
         */
        formId?: string | null;
        form?:
          | (
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  autoComplete?: boolean | null;
                  type: 'email' | 'date' | 'number' | 'tel' | 'text' | 'url';
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formInput';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  options: {
                    name: string;
                    value: string;
                    id?: string | null;
                    blockName?: string | null;
                    blockType: 'dropdownOption';
                  }[];
                  label?: string | null;
                  placeholder: string;
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formDropdown';
                }
              | {
                  /**
                   * The field uses for html element and must be without white spaces.
                   */
                  name: string;
                  required?: boolean | null;
                  label: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  errorMessage: string;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'formCheckbox';
                }
            )[]
          | null;
        label: string;
        /**
         * The link overwriten with Form Input and Form ID fields
         */
        link?: string | null;
        buttonPosition?: ('bottom' | 'right') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'ctaForm';
      }
    | {
        marginTop: '80' | '40' | '0';
        backgroundColor:
          | 'bg-yellow-04'
          | 'bg-neutral-07'
          | 'bg-pink-01'
          | 'yellow-pink-gradient'
          | 'blue-pink-gradient';
        /**
         * Determines if this CTA should be within a contained block or bleed to the edges of the screen.
         */
        isContained?: boolean | null;
        title?: string | null;
        /**
         * If this field is populated then anything in title will be overridden.
         */
        richTitle?:
          | (
              | {
                  content?: string | null;
                  gradient?: ('blue' | 'pink') | null;
                  gradientTopOffset?: number | null;
                  gradientRightOffset?: number | null;
                  gradientBottomOffset?: number | null;
                  gradientLeftOffset?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleGradientSegment';
                }
              | {
                  content?: string | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleSegment';
                }
              | {
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'richTitleUsersSegment';
                }
            )[]
          | null;
        subtitle?: string | null;
        caption?: string | null;
        buttons: (
          | {
              label: string;
              /**
               * When you add value for \"Scroll To\" field, link will be overwrite.
               */
              link: string;
              buttonType: 'primary-m' | 'primary-s' | 'primary-width' | 'secondary-m' | 'secondary-width';
              backgroundColor: 'bg-green-02' | 'bg-neutral-07' | 'bg-transparent' | 'bg-neutral-01';
              /**
               * If the field is filled, an analytics event will sent to the segment.
               */
              eventName?: string | null;
              /**
               * You need add the same value which you add to block field \"Ref to scroll to\".
               */
              scrollTo?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'button';
            }
          | {
              button: {
                relationTo: 'globalButton';
                value: string | GlobalButton;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'globalButtons';
            }
        )[];
        rating?: {
          relationTo: 'rating';
          value: string | Rating;
        } | null;
        leftAsset?: (string | null) | Media;
        rightAsset?: (string | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
  )[];
  followAndIndex?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: string;
  defaultTitle?: string | null;
  titleTemplate?: string | null;
  favicon?: (string | null) | Media;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogMainPage_select".
 */
export interface BlogMainPageSelect<T extends boolean = true> {
  followAndIndex?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  title?: T;
  description?: T;
  blocks?:
    | T
    | {
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        featureArticle?:
          | T
          | {
              label?: T;
              date?: T;
              readTime?: T;
              author?: T;
              id?: T;
              blockName?: T;
            };
        filterBar?:
          | T
          | {
              searchInputPlaceholder?: T;
              emptyListTitle?: T;
              resultLabel?: T;
              allFilterLabel?: T;
              id?: T;
              blockName?: T;
            };
        articleBody?:
          | T
          | {
              sideBar?:
                | T
                | {
                    tableOfContent?:
                      | T
                      | {
                          shareTitle?: T;
                          contentType?: T;
                          copiedTitle?: T;
                          shareLinkedin?: T;
                          shareFacebook?: T;
                          shareTwitter?: T;
                          shareEmail?: T;
                          copyLink?: T;
                          embed?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              body?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "errorPage_select".
 */
export interface ErrorPageSelect<T extends boolean = true> {
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  hero?:
    | T
    | {
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
      };
  title?: T;
  description?: T;
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "eventsMainPage_select".
 */
export interface EventsMainPageSelect<T extends boolean = true> {
  followAndIndex?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  title?: T;
  description?: T;
  blocks?:
    | T
    | {
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        featureArticle?:
          | T
          | {
              label?: T;
              date?: T;
              readTime?: T;
              author?: T;
              id?: T;
              blockName?: T;
            };
        filterBar?:
          | T
          | {
              searchInputPlaceholder?: T;
              emptyListTitle?: T;
              resultLabel?: T;
              allFilterLabel?: T;
              id?: T;
              blockName?: T;
            };
        articleBody?:
          | T
          | {
              sideBar?:
                | T
                | {
                    tableOfContent?:
                      | T
                      | {
                          shareTitle?: T;
                          contentType?: T;
                          copiedTitle?: T;
                          shareLinkedin?: T;
                          shareFacebook?: T;
                          shareTwitter?: T;
                          shareEmail?: T;
                          copyLink?: T;
                          embed?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              body?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        livestormEmbed?:
          | T
          | {
              title?: T;
              embedHtml?: T;
              id?: T;
              blockName?: T;
            };
        eventsBody?:
          | T
          | {
              title?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "favicon_select".
 */
export interface FaviconSelect<T extends boolean = true> {
  favicon?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guidesMainPage_select".
 */
export interface GuidesMainPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        featureGuide?:
          | T
          | {
              buttonLabel?: T;
              id?: T;
              blockName?: T;
            };
        guidesBody?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "integrationsMainPage_select".
 */
export interface IntegrationsMainPageSelect<T extends boolean = true> {
  followAndIndex?: T;
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        templatesSection?:
          | T
          | {
              leftBlocks?:
                | T
                | {
                    templatesCTA?:
                      | T
                      | {
                          title?: T;
                          image?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                    templatesFilterBar?:
                      | T
                      | {
                          searchInputPlaceholder?: T;
                          allButtonLabel?: T;
                          filterTeamTitle?: T;
                          filterUseCaseTitle?: T;
                          filterMethodologyTitle?: T;
                          filterIndustryTitle?: T;
                          mobileFilterButtonLabel?: T;
                          clearButtonLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalCTA?:
                      | T
                      | {
                          cta?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rightBlock?:
                | T
                | {
                    templatesBody?:
                      | T
                      | {
                          buttonLabel?: T;
                          emptyListTitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                    pagination?:
                      | T
                      | {
                          nextPageButtonTitle?: T;
                          previousPageButtonTitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                    integrationsBody?:
                      | T
                      | {
                          buttonLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notFoundPage_select".
 */
export interface NotFoundPageSelect<T extends boolean = true> {
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  hero?:
    | T
    | {
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
      };
  title?: T;
  description?: T;
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pricingMainPage_select".
 */
export interface PricingMainPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        appreciation?:
          | T
          | {
              review?: T;
              stats?: T;
              id?: T;
              blockName?: T;
            };
        banner?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mainImage?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              leftTopImage?: T;
              rightTopImage?: T;
              leftBottomImage?: T;
              rightBottomImage?: T;
              leftTopImageMobile?: T;
              rightTopImageMobile?: T;
              leftBottomImageMobile?: T;
              rightBottomImageMobile?: T;
              id?: T;
              blockName?: T;
            };
        bookDemoMain?:
          | T
          | {
              body?: T;
              logos?: T;
              rating?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypesCards?:
          | T
          | {
              backgroundColor?: T;
              images?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        customComponent?:
          | T
          | {
              backgroundColor?: T;
              content?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingCapture?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        demos?:
          | T
          | {
              demos?:
                | T
                | {
                    demo?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          media?: T;
                          duration?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        embedded?:
          | T
          | {
              embedded?: T;
              id?: T;
              blockName?: T;
            };
        embededMap?:
          | T
          | {
              address?: T;
              icon?: T;
              embed?: T;
              id?: T;
              blockName?: T;
            };
        features?:
          | T
          | {
              featureBlocks?:
                | T
                | {
                    featureBlock?:
                      | T
                      | {
                          title?: T;
                          heading?: T;
                          body?: T;
                          integrations?:
                            | T
                            | {
                                featureIntegration?:
                                  | T
                                  | {
                                      icon?: T;
                                      link?: T;
                                      linkText?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          link?: T;
                          linkText?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        form?:
          | T
          | {
              id?: T;
              buttonLabel?: T;
              alignment?: T;
              backgroundColor?: T;
              padding?: T;
              header?:
                | T
                | {
                    formTitle?:
                      | T
                      | {
                          title?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formSubtitle?:
                      | T
                      | {
                          subtitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              formElements?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoAccordion?:
          | T
          | {
              infoAccordion?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoCarousel?:
          | T
          | {
              infoCarousel?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoGrid?:
          | T
          | {
              infoGrid?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTabVariant?:
          | T
          | {
              infoTab?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoTextWithImage?:
          | T
          | {
              infoTextWithImage?: T;
              id?: T;
              blockName?: T;
            };
        globalInfoWithCardsSection?:
          | T
          | {
              infoWithCards?: T;
              id?: T;
              blockName?: T;
            };
        globalReviewsSection?:
          | T
          | {
              reviewBlock?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpages?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              iconButton?:
                | T
                | {
                    iconButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          icon?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              backgroundColor?: T;
              media?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        heroSubpagesCentered?:
          | T
          | {
              title?: T;
              body?: T;
              backgroundColor?: T;
              topLeftImage?: T;
              topLeftImageSize?: T;
              bottomRightImage?: T;
              topRightMobileImage?: T;
              bottomRightMobileImage?: T;
              id?: T;
              blockName?: T;
            };
        homeHero?:
          | T
          | {
              richTitle?:
                | T
                | {
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              id?: T;
              blockName?: T;
            };
        infoAccordion?:
          | T
          | {
              items?:
                | T
                | {
                    accordionItem?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoCarousel?:
          | T
          | {
              slides?:
                | T
                | {
                    infoCarouselSlide?:
                      | T
                      | {
                          image?: T;
                          backgroundColor?: T;
                          title?: T;
                          subtitle?: T;
                          items?:
                            | T
                            | {
                                infoCarouselSlideItem?:
                                  | T
                                  | {
                                      title?: T;
                                      icon?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGrid?:
          | T
          | {
              items?:
                | T
                | {
                    infoGridItem?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridCardsWithIcons?:
          | T
          | {
              backgroundColor?: T;
              cards?:
                | T
                | {
                    gridCard?:
                      | T
                      | {
                          title?: T;
                          body?: T;
                          fullWidthImage?: T;
                          image?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridTwoColumnsWithTitle?:
          | T
          | {
              backgroundColor?: T;
              title?: T;
              subtitle?: T;
              image?: T;
              items?:
                | T
                | {
                    infoGridTwoColumnsWithTitleItem?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          body?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoGridWithHeading?:
          | T
          | {
              backgroundColor?: T;
              bottomLineSeperator?: T;
              title?: T;
              icon?: T;
              cardTag?: T;
              cardButtonLabel?: T;
              contentType?: T;
              id?: T;
              blockName?: T;
            };
        infoGridWithResources?:
          | T
          | {
              resources?: T;
              buttonLabel?: T;
              guideLabel?: T;
              articleLabel?: T;
              videoLabel?: T;
              templateLabel?: T;
              id?: T;
              blockName?: T;
            };
        infoSlider?:
          | T
          | {
              backgroundColour?: T;
              link?: T;
              linkLabel?: T;
              slides?:
                | T
                | {
                    infoSlide?:
                      | T
                      | {
                          cover?: T;
                          title?: T;
                          subtitle?: T;
                          label?: T;
                          link?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoSliderTimeline?:
          | T
          | {
              slides?:
                | T
                | {
                    timelineSlide?:
                      | T
                      | {
                          title?: T;
                          subtitle?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithDescriptions?:
          | T
          | {
              title?: T;
              subtitle?: T;
              tabs?:
                | T
                | {
                    infoTab?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTabsWithIcon?:
          | T
          | {
              heading?: T;
              headingImage?: T;
              body?: T;
              backgroundColour?: T;
              tabImage?: T;
              tabs?:
                | T
                | {
                    infoIconTab?:
                      | T
                      | {
                          icon?: T;
                          title?: T;
                          image?: T;
                          link?: T;
                          mobileButton?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoTextWithCollage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              leftGraphic?: T;
              topGraphic?: T;
              bottomGraphic?: T;
              mainPhoto?: T;
              id?: T;
              blockName?: T;
            };
        infoTextWithImage?:
          | T
          | {
              title?: T;
              subtitle?: T;
              contentType?: T;
              backgroundColor?: T;
              imagePosition?: T;
              cover?: T;
              customComponent?:
                | T
                | {
                    liveWebsiteTestingHero?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingPanel?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingSites?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                    liveWebsiteTestingTasks?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              textLink?:
                | T
                | {
                    textLinkButton?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          iconPosition?: T;
                          eventName?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              items?:
                | T
                | {
                    infoText?:
                      | T
                      | {
                          text?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        infoWithCards?:
          | T
          | {
              featureBlock?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              blocks?:
                | T
                | {
                    infoCard?:
                      | T
                      | {
                          image?: T;
                          mobileImage?: T;
                          title?: T;
                          subtitle?: T;
                          textLink?:
                            | T
                            | {
                                textLinkButton?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      iconPosition?: T;
                                      eventName?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        insightComparison?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        mainHero?:
          | T
          | {
              title?: T;
              subtitle?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              caption?: T;
              rating?: T;
              mobileImage?: T;
              bannerBody?: T;
              bannerLabel?: T;
              bannerLink?: T;
              leftPart?: T;
              rightPart?: T;
              id?: T;
              blockName?: T;
            };
        media?:
          | T
          | {
              embed?: T;
              embedLink?: T;
              assetDesktop?: T;
              assetMobile?: T;
              size?: T;
              id?: T;
              blockName?: T;
            };
        mediaCollage?:
          | T
          | {
              firstLine?: T;
              secondLine?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        pricingTable?:
          | T
          | {
              plans?:
                | T
                | {
                    pricingPlan?:
                      | T
                      | {
                          name?: T;
                          monthlyPrice?: T;
                          monthlyPriceLabel?: T;
                          annualyPrice?: T;
                          annualyPriceLabel?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          caption?: T;
                          body?: T;
                          items?:
                            | T
                            | {
                                pricingPlanItem?:
                                  | T
                                  | {
                                      title?: T;
                                      list?:
                                        | T
                                        | {
                                            pricingPlanListItem?:
                                              | T
                                              | {
                                                  label?: T;
                                                  additionalLabel?: T;
                                                  tooltipImage?: T;
                                                  tooltipBody?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        pricingTableComparison?:
          | T
          | {
              mobileDropdownTitle?: T;
              featureRow?:
                | T
                | {
                    pricingСomparisonFeaturesRow?:
                      | T
                      | {
                          title?: T;
                          comparisonFeatures?:
                            | T
                            | {
                                comparisonFeatureRow?:
                                  | T
                                  | {
                                      title?: T;
                                      monthlyPrice?: T;
                                      annualyPrice?: T;
                                      button?:
                                        | T
                                        | {
                                            button?:
                                              | T
                                              | {
                                                  label?: T;
                                                  link?: T;
                                                  buttonType?: T;
                                                  backgroundColor?: T;
                                                  eventName?: T;
                                                  scrollTo?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            globalButtons?:
                                              | T
                                              | {
                                                  button?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      caption?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              bodyTables?:
                | T
                | {
                    pricingBodyTable?:
                      | T
                      | {
                          title?: T;
                          tableRows?:
                            | T
                            | {
                                pricingBodyTableRow?:
                                  | T
                                  | {
                                      cells?:
                                        | T
                                        | {
                                            pricingBodyTableTextCell?:
                                              | T
                                              | {
                                                  label?: T;
                                                  tooltipBody?: T;
                                                  tooltipImage?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                            pricingBodyTableIconCell?:
                                              | T
                                              | {
                                                  availableIcon?: T;
                                                  id?: T;
                                                  blockName?: T;
                                                };
                                          };
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        reviews?:
          | T
          | {
              backgroundColor?: T;
              reviews?:
                | T
                | {
                    review?:
                      | T
                      | {
                          text?: T;
                          tag?: T;
                          representative?: T;
                          image?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        singleReview?:
          | T
          | {
              text?: T;
              tag?: T;
              backgroundColor?: T;
              imagePosition?: T;
              representative?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        textBlock?:
          | T
          | {
              title?: T;
              subtitle?: T;
              backgroundColor?: T;
              mobileCenter?: T;
              version?: T;
              refForScrollTo?: T;
              id?: T;
              blockName?: T;
            };
        textLinks?:
          | T
          | {
              links?:
                | T
                | {
                    textLinkWithIcon?:
                      | T
                      | {
                          label?: T;
                          hoverColor?: T;
                          link?: T;
                          contentType?: T;
                          icon?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        toggle?:
          | T
          | {
              activeLabel?: T;
              inactiveLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reportsMainPage_select".
 */
export interface ReportsMainPageSelect<T extends boolean = true> {
  followAndIndex?: T;
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        featureGuide?:
          | T
          | {
              buttonLabel?: T;
              id?: T;
              blockName?: T;
            };
        guidesBody?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
        reportsBody?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        featureReport?:
          | T
          | {
              buttonLabel?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "templatesMainPage_select".
 */
export interface TemplatesMainPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        templatesSection?:
          | T
          | {
              leftBlocks?:
                | T
                | {
                    templatesCTA?:
                      | T
                      | {
                          title?: T;
                          image?: T;
                          button?:
                            | T
                            | {
                                button?:
                                  | T
                                  | {
                                      label?: T;
                                      link?: T;
                                      buttonType?: T;
                                      backgroundColor?: T;
                                      eventName?: T;
                                      scrollTo?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                                globalButtons?:
                                  | T
                                  | {
                                      button?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          id?: T;
                          blockName?: T;
                        };
                    templatesFilterBar?:
                      | T
                      | {
                          searchInputPlaceholder?: T;
                          allButtonLabel?: T;
                          filterTeamTitle?: T;
                          filterUseCaseTitle?: T;
                          filterMethodologyTitle?: T;
                          filterIndustryTitle?: T;
                          mobileFilterButtonLabel?: T;
                          clearButtonLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalCTA?:
                      | T
                      | {
                          cta?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rightBlock?:
                | T
                | {
                    templatesBody?:
                      | T
                      | {
                          buttonLabel?: T;
                          emptyListTitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                    pagination?:
                      | T
                      | {
                          nextPageButtonTitle?: T;
                          previousPageButtonTitle?: T;
                          id?: T;
                          blockName?: T;
                        };
                    integrationsBody?:
                      | T
                      | {
                          buttonLabel?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
        clientLogotypes?:
          | T
          | {
              subtitle?: T;
              subtitleAlignment?: T;
              logos?: T;
              bottomDivider?: T;
              mobileBottomDivider?: T;
              marginTop?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        ctaSmall?:
          | T
          | {
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              mobileMargin?: T;
              scrollToElement?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "videosMainPage_select".
 */
export interface VideosMainPageSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  ogImage?:
    | T
    | {
        ogImage?:
          | T
          | {
              title?: T;
              description?: T;
              type?: T;
              image?: T;
              tag?: T;
              id?: T;
              blockName?: T;
            };
      };
  navigationBar?: T;
  footer?: T;
  blocks?:
    | T
    | {
        resourcesHero?:
          | T
          | {
              title?: T;
              button?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              buttonSubtext?: T;
              backgroundColor?: T;
              media?: T;
              rating?: T;
              isCentered?: T;
              id?: T;
              blockName?: T;
            };
        videosBody?:
          | T
          | {
              buttonLabel?: T;
              id?: T;
              blockName?: T;
            };
        pagination?:
          | T
          | {
              nextPageButtonTitle?: T;
              previousPageButtonTitle?: T;
              id?: T;
              blockName?: T;
            };
        globalClientLogotypes?:
          | T
          | {
              clientLogotypes?: T;
              id?: T;
              blockName?: T;
            };
        globalCTA?:
          | T
          | {
              cta?: T;
              id?: T;
              blockName?: T;
            };
        ctaForm?:
          | T
          | {
              title?: T;
              subtitle?: T;
              asset?: T;
              formId?: T;
              form?:
                | T
                | {
                    formInput?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          autoComplete?: T;
                          type?: T;
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formDropdown?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          options?:
                            | T
                            | {
                                dropdownOption?:
                                  | T
                                  | {
                                      name?: T;
                                      value?: T;
                                      id?: T;
                                      blockName?: T;
                                    };
                              };
                          label?: T;
                          placeholder?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                    formCheckbox?:
                      | T
                      | {
                          name?: T;
                          required?: T;
                          label?: T;
                          errorMessage?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              label?: T;
              link?: T;
              buttonPosition?: T;
              id?: T;
              blockName?: T;
            };
        cta?:
          | T
          | {
              marginTop?: T;
              backgroundColor?: T;
              isContained?: T;
              title?: T;
              richTitle?:
                | T
                | {
                    richTitleGradientSegment?:
                      | T
                      | {
                          content?: T;
                          gradient?: T;
                          gradientTopOffset?: T;
                          gradientRightOffset?: T;
                          gradientBottomOffset?: T;
                          gradientLeftOffset?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleSegment?:
                      | T
                      | {
                          content?: T;
                          id?: T;
                          blockName?: T;
                        };
                    richTitleUsersSegment?:
                      | T
                      | {
                          id?: T;
                          blockName?: T;
                        };
                  };
              subtitle?: T;
              caption?: T;
              buttons?:
                | T
                | {
                    button?:
                      | T
                      | {
                          label?: T;
                          link?: T;
                          buttonType?: T;
                          backgroundColor?: T;
                          eventName?: T;
                          scrollTo?: T;
                          id?: T;
                          blockName?: T;
                        };
                    globalButtons?:
                      | T
                      | {
                          button?: T;
                          id?: T;
                          blockName?: T;
                        };
                  };
              rating?: T;
              leftAsset?: T;
              rightAsset?: T;
              id?: T;
              blockName?: T;
            };
      };
  followAndIndex?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  defaultTitle?: T;
  titleTemplate?: T;
  favicon?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}